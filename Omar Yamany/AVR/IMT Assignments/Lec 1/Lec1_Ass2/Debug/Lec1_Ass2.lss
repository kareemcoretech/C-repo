
Lec1_Ass2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005684  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00005684  000056f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000033f0  00000000  00000000  00005700  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000756  00000000  00000000  00008af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00009246  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00009386  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000094f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000b13f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000c02a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000cdd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000cf38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000d1c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000d993  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e8       	ldi	r30, 0x84	; 132
      68:	f6 e5       	ldi	r31, 0x56	; 86
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 9b 05 	call	0xb36	; 0xb36 <main>
      7a:	0c 94 40 2b 	jmp	0x5680	; 0x5680 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 09 2b 	jmp	0x5612	; 0x5612 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 25 2b 	jmp	0x564a	; 0x564a <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 15 2b 	jmp	0x562a	; 0x562a <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 31 2b 	jmp	0x5662	; 0x5662 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 15 2b 	jmp	0x562a	; 0x562a <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 31 2b 	jmp	0x5662	; 0x5662 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 09 2b 	jmp	0x5612	; 0x5612 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 25 2b 	jmp	0x564a	; 0x564a <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 15 2b 	jmp	0x562a	; 0x562a <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 31 2b 	jmp	0x5662	; 0x5662 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 15 2b 	jmp	0x562a	; 0x562a <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 31 2b 	jmp	0x5662	; 0x5662 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 15 2b 	jmp	0x562a	; 0x562a <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 31 2b 	jmp	0x5662	; 0x5662 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 19 2b 	jmp	0x5632	; 0x5632 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 35 2b 	jmp	0x566a	; 0x566a <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <main>:
#include <avr/io.h>
#include <util/delay.h>
#define GET_BIT(r,b) ((r>>b)&1)

void main(void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
	DDRB = 0xFF;//PORTB is all output and connected to 8 LEDS
     b3e:	e7 e3       	ldi	r30, 0x37	; 55
     b40:	f0 e0       	ldi	r31, 0x00	; 0
     b42:	8f ef       	ldi	r24, 0xFF	; 255
     b44:	80 83       	st	Z, r24
	DDRC = 0x00;//PORTC is all input and connected to one side of the DIP switch
     b46:	e4 e3       	ldi	r30, 0x34	; 52
     b48:	f0 e0       	ldi	r31, 0x00	; 0
     b4a:	10 82       	st	Z, r1
	PORTC = 0xFF;//PORTC is now acting as a pull up resistor
     b4c:	e5 e3       	ldi	r30, 0x35	; 53
     b4e:	f0 e0       	ldi	r31, 0x00	; 0
     b50:	8f ef       	ldi	r24, 0xFF	; 255
     b52:	80 83       	st	Z, r24
	DDRD = 0b00000001;//PinD0 is output
     b54:	e1 e3       	ldi	r30, 0x31	; 49
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	80 83       	st	Z, r24
	PORTD = 0b00000000;//PIND0 is 0 = acting as extra ground
     b5c:	e2 e3       	ldi	r30, 0x32	; 50
     b5e:	f0 e0       	ldi	r31, 0x00	; 0
     b60:	10 82       	st	Z, r1

	while(1)
	{
		if(GET_BIT(PINC, 0)==0)
     b62:	e3 e3       	ldi	r30, 0x33	; 51
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	80 81       	ld	r24, Z
     b68:	88 2f       	mov	r24, r24
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	81 70       	andi	r24, 0x01	; 1
     b6e:	90 70       	andi	r25, 0x00	; 0
     b70:	00 97       	sbiw	r24, 0x00	; 0
     b72:	19 f4       	brne	.+6      	; 0xb7a <main+0x44>
		{
			flash();
     b74:	0e 94 20 06 	call	0xc40	; 0xc40 <flash>
     b78:	f4 cf       	rjmp	.-24     	; 0xb62 <main+0x2c>
		}
		else if(GET_BIT(PINC, 1)==0)
     b7a:	e3 e3       	ldi	r30, 0x33	; 51
     b7c:	f0 e0       	ldi	r31, 0x00	; 0
     b7e:	80 81       	ld	r24, Z
     b80:	86 95       	lsr	r24
     b82:	88 2f       	mov	r24, r24
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	81 70       	andi	r24, 0x01	; 1
     b88:	90 70       	andi	r25, 0x00	; 0
     b8a:	00 97       	sbiw	r24, 0x00	; 0
     b8c:	19 f4       	brne	.+6      	; 0xb94 <main+0x5e>
		{
			shift_left();
     b8e:	0e 94 29 07 	call	0xe52	; 0xe52 <shift_left>
     b92:	e7 cf       	rjmp	.-50     	; 0xb62 <main+0x2c>
		}
		else if(GET_BIT(PINC, 2)==0)
     b94:	e3 e3       	ldi	r30, 0x33	; 51
     b96:	f0 e0       	ldi	r31, 0x00	; 0
     b98:	80 81       	ld	r24, Z
     b9a:	86 95       	lsr	r24
     b9c:	86 95       	lsr	r24
     b9e:	88 2f       	mov	r24, r24
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	81 70       	andi	r24, 0x01	; 1
     ba4:	90 70       	andi	r25, 0x00	; 0
     ba6:	00 97       	sbiw	r24, 0x00	; 0
     ba8:	19 f4       	brne	.+6      	; 0xbb0 <main+0x7a>
		{
			shift_right();
     baa:	0e 94 d4 0b 	call	0x17a8	; 0x17a8 <shift_right>
     bae:	d9 cf       	rjmp	.-78     	; 0xb62 <main+0x2c>
		}
		else if(GET_BIT(PINC, 3)==0)
     bb0:	e3 e3       	ldi	r30, 0x33	; 51
     bb2:	f0 e0       	ldi	r31, 0x00	; 0
     bb4:	80 81       	ld	r24, Z
     bb6:	86 95       	lsr	r24
     bb8:	86 95       	lsr	r24
     bba:	86 95       	lsr	r24
     bbc:	88 2f       	mov	r24, r24
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	81 70       	andi	r24, 0x01	; 1
     bc2:	90 70       	andi	r25, 0x00	; 0
     bc4:	00 97       	sbiw	r24, 0x00	; 0
     bc6:	19 f4       	brne	.+6      	; 0xbce <main+0x98>
		{
			LED_Converge();
     bc8:	0e 94 80 10 	call	0x2100	; 0x2100 <LED_Converge>
     bcc:	ca cf       	rjmp	.-108    	; 0xb62 <main+0x2c>
		}
		else if(GET_BIT(PINC, 4)==0)
     bce:	e3 e3       	ldi	r30, 0x33	; 51
     bd0:	f0 e0       	ldi	r31, 0x00	; 0
     bd2:	80 81       	ld	r24, Z
     bd4:	82 95       	swap	r24
     bd6:	8f 70       	andi	r24, 0x0F	; 15
     bd8:	88 2f       	mov	r24, r24
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	81 70       	andi	r24, 0x01	; 1
     bde:	90 70       	andi	r25, 0x00	; 0
     be0:	00 97       	sbiw	r24, 0x00	; 0
     be2:	19 f4       	brne	.+6      	; 0xbea <main+0xb4>
		{
			LED_Diverge();
     be4:	0e 94 79 12 	call	0x24f2	; 0x24f2 <LED_Diverge>
     be8:	bc cf       	rjmp	.-136    	; 0xb62 <main+0x2c>
		}
		else if(GET_BIT(PINC, 5)==0)
     bea:	e3 e3       	ldi	r30, 0x33	; 51
     bec:	f0 e0       	ldi	r31, 0x00	; 0
     bee:	80 81       	ld	r24, Z
     bf0:	82 95       	swap	r24
     bf2:	86 95       	lsr	r24
     bf4:	87 70       	andi	r24, 0x07	; 7
     bf6:	88 2f       	mov	r24, r24
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	81 70       	andi	r24, 0x01	; 1
     bfc:	90 70       	andi	r25, 0x00	; 0
     bfe:	00 97       	sbiw	r24, 0x00	; 0
     c00:	19 f4       	brne	.+6      	; 0xc08 <main+0xd2>
		{
			ping_pong();
     c02:	0e 94 71 14 	call	0x28e2	; 0x28e2 <ping_pong>
     c06:	ad cf       	rjmp	.-166    	; 0xb62 <main+0x2c>
		}
		else if(GET_BIT(PINC, 6)==0)
     c08:	e3 e3       	ldi	r30, 0x33	; 51
     c0a:	f0 e0       	ldi	r31, 0x00	; 0
     c0c:	80 81       	ld	r24, Z
     c0e:	82 95       	swap	r24
     c10:	86 95       	lsr	r24
     c12:	86 95       	lsr	r24
     c14:	83 70       	andi	r24, 0x03	; 3
     c16:	88 2f       	mov	r24, r24
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	81 70       	andi	r24, 0x01	; 1
     c1c:	90 70       	andi	r25, 0x00	; 0
     c1e:	00 97       	sbiw	r24, 0x00	; 0
     c20:	19 f4       	brne	.+6      	; 0xc28 <main+0xf2>
		{
			snake_effect();
     c22:	0e 94 6a 1d 	call	0x3ad4	; 0x3ad4 <snake_effect>
     c26:	9d cf       	rjmp	.-198    	; 0xb62 <main+0x2c>
		}
		else if(GET_BIT(PINC, 7)==0)
     c28:	e3 e3       	ldi	r30, 0x33	; 51
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	80 81       	ld	r24, Z
     c2e:	88 23       	and	r24, r24
     c30:	1c f0       	brlt	.+6      	; 0xc38 <main+0x102>
		{
			converge_diverge();
     c32:	0e 94 d1 27 	call	0x4fa2	; 0x4fa2 <converge_diverge>
     c36:	95 cf       	rjmp	.-214    	; 0xb62 <main+0x2c>
		}
		else
		{
			PORTB = 0x00;
     c38:	e8 e3       	ldi	r30, 0x38	; 56
     c3a:	f0 e0       	ldi	r31, 0x00	; 0
     c3c:	10 82       	st	Z, r1
     c3e:	91 cf       	rjmp	.-222    	; 0xb62 <main+0x2c>

00000c40 <flash>:
		}
	}
}

void flash()
{
     c40:	df 93       	push	r29
     c42:	cf 93       	push	r28
     c44:	cd b7       	in	r28, 0x3d	; 61
     c46:	de b7       	in	r29, 0x3e	; 62
     c48:	6c 97       	sbiw	r28, 0x1c	; 28
     c4a:	0f b6       	in	r0, 0x3f	; 63
     c4c:	f8 94       	cli
     c4e:	de bf       	out	0x3e, r29	; 62
     c50:	0f be       	out	0x3f, r0	; 63
     c52:	cd bf       	out	0x3d, r28	; 61
     c54:	eb c0       	rjmp	.+470    	; 0xe2c <flash+0x1ec>
	while(GET_BIT(PINC, 0)==0)
	{
		PORTB = 0xFF;
     c56:	e8 e3       	ldi	r30, 0x38	; 56
     c58:	f0 e0       	ldi	r31, 0x00	; 0
     c5a:	8f ef       	ldi	r24, 0xFF	; 255
     c5c:	80 83       	st	Z, r24
     c5e:	80 e0       	ldi	r24, 0x00	; 0
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	aa ef       	ldi	r26, 0xFA	; 250
     c64:	b3 e4       	ldi	r27, 0x43	; 67
     c66:	89 8f       	std	Y+25, r24	; 0x19
     c68:	9a 8f       	std	Y+26, r25	; 0x1a
     c6a:	ab 8f       	std	Y+27, r26	; 0x1b
     c6c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c6e:	69 8d       	ldd	r22, Y+25	; 0x19
     c70:	7a 8d       	ldd	r23, Y+26	; 0x1a
     c72:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c74:	9c 8d       	ldd	r25, Y+28	; 0x1c
     c76:	20 e0       	ldi	r18, 0x00	; 0
     c78:	30 e0       	ldi	r19, 0x00	; 0
     c7a:	4a ef       	ldi	r20, 0xFA	; 250
     c7c:	54 e4       	ldi	r21, 0x44	; 68
     c7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     c82:	dc 01       	movw	r26, r24
     c84:	cb 01       	movw	r24, r22
     c86:	8d 8b       	std	Y+21, r24	; 0x15
     c88:	9e 8b       	std	Y+22, r25	; 0x16
     c8a:	af 8b       	std	Y+23, r26	; 0x17
     c8c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     c8e:	6d 89       	ldd	r22, Y+21	; 0x15
     c90:	7e 89       	ldd	r23, Y+22	; 0x16
     c92:	8f 89       	ldd	r24, Y+23	; 0x17
     c94:	98 8d       	ldd	r25, Y+24	; 0x18
     c96:	20 e0       	ldi	r18, 0x00	; 0
     c98:	30 e0       	ldi	r19, 0x00	; 0
     c9a:	40 e8       	ldi	r20, 0x80	; 128
     c9c:	5f e3       	ldi	r21, 0x3F	; 63
     c9e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     ca2:	88 23       	and	r24, r24
     ca4:	2c f4       	brge	.+10     	; 0xcb0 <flash+0x70>
		__ticks = 1;
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	9c 8b       	std	Y+20, r25	; 0x14
     cac:	8b 8b       	std	Y+19, r24	; 0x13
     cae:	3f c0       	rjmp	.+126    	; 0xd2e <flash+0xee>
	else if (__tmp > 65535)
     cb0:	6d 89       	ldd	r22, Y+21	; 0x15
     cb2:	7e 89       	ldd	r23, Y+22	; 0x16
     cb4:	8f 89       	ldd	r24, Y+23	; 0x17
     cb6:	98 8d       	ldd	r25, Y+24	; 0x18
     cb8:	20 e0       	ldi	r18, 0x00	; 0
     cba:	3f ef       	ldi	r19, 0xFF	; 255
     cbc:	4f e7       	ldi	r20, 0x7F	; 127
     cbe:	57 e4       	ldi	r21, 0x47	; 71
     cc0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     cc4:	18 16       	cp	r1, r24
     cc6:	4c f5       	brge	.+82     	; 0xd1a <flash+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     cc8:	69 8d       	ldd	r22, Y+25	; 0x19
     cca:	7a 8d       	ldd	r23, Y+26	; 0x1a
     ccc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     cce:	9c 8d       	ldd	r25, Y+28	; 0x1c
     cd0:	20 e0       	ldi	r18, 0x00	; 0
     cd2:	30 e0       	ldi	r19, 0x00	; 0
     cd4:	40 e2       	ldi	r20, 0x20	; 32
     cd6:	51 e4       	ldi	r21, 0x41	; 65
     cd8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     cdc:	dc 01       	movw	r26, r24
     cde:	cb 01       	movw	r24, r22
     ce0:	bc 01       	movw	r22, r24
     ce2:	cd 01       	movw	r24, r26
     ce4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ce8:	dc 01       	movw	r26, r24
     cea:	cb 01       	movw	r24, r22
     cec:	9c 8b       	std	Y+20, r25	; 0x14
     cee:	8b 8b       	std	Y+19, r24	; 0x13
     cf0:	0f c0       	rjmp	.+30     	; 0xd10 <flash+0xd0>
     cf2:	88 ec       	ldi	r24, 0xC8	; 200
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	9a 8b       	std	Y+18, r25	; 0x12
     cf8:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     cfa:	89 89       	ldd	r24, Y+17	; 0x11
     cfc:	9a 89       	ldd	r25, Y+18	; 0x12
     cfe:	01 97       	sbiw	r24, 0x01	; 1
     d00:	f1 f7       	brne	.-4      	; 0xcfe <flash+0xbe>
     d02:	9a 8b       	std	Y+18, r25	; 0x12
     d04:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d06:	8b 89       	ldd	r24, Y+19	; 0x13
     d08:	9c 89       	ldd	r25, Y+20	; 0x14
     d0a:	01 97       	sbiw	r24, 0x01	; 1
     d0c:	9c 8b       	std	Y+20, r25	; 0x14
     d0e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d10:	8b 89       	ldd	r24, Y+19	; 0x13
     d12:	9c 89       	ldd	r25, Y+20	; 0x14
     d14:	00 97       	sbiw	r24, 0x00	; 0
     d16:	69 f7       	brne	.-38     	; 0xcf2 <flash+0xb2>
     d18:	14 c0       	rjmp	.+40     	; 0xd42 <flash+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d1a:	6d 89       	ldd	r22, Y+21	; 0x15
     d1c:	7e 89       	ldd	r23, Y+22	; 0x16
     d1e:	8f 89       	ldd	r24, Y+23	; 0x17
     d20:	98 8d       	ldd	r25, Y+24	; 0x18
     d22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d26:	dc 01       	movw	r26, r24
     d28:	cb 01       	movw	r24, r22
     d2a:	9c 8b       	std	Y+20, r25	; 0x14
     d2c:	8b 8b       	std	Y+19, r24	; 0x13
     d2e:	8b 89       	ldd	r24, Y+19	; 0x13
     d30:	9c 89       	ldd	r25, Y+20	; 0x14
     d32:	98 8b       	std	Y+16, r25	; 0x10
     d34:	8f 87       	std	Y+15, r24	; 0x0f
     d36:	8f 85       	ldd	r24, Y+15	; 0x0f
     d38:	98 89       	ldd	r25, Y+16	; 0x10
     d3a:	01 97       	sbiw	r24, 0x01	; 1
     d3c:	f1 f7       	brne	.-4      	; 0xd3a <flash+0xfa>
     d3e:	98 8b       	std	Y+16, r25	; 0x10
     d40:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(500);
		PORTB = 0x00;
     d42:	e8 e3       	ldi	r30, 0x38	; 56
     d44:	f0 e0       	ldi	r31, 0x00	; 0
     d46:	10 82       	st	Z, r1
     d48:	80 e0       	ldi	r24, 0x00	; 0
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	aa ef       	ldi	r26, 0xFA	; 250
     d4e:	b3 e4       	ldi	r27, 0x43	; 67
     d50:	8b 87       	std	Y+11, r24	; 0x0b
     d52:	9c 87       	std	Y+12, r25	; 0x0c
     d54:	ad 87       	std	Y+13, r26	; 0x0d
     d56:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d58:	6b 85       	ldd	r22, Y+11	; 0x0b
     d5a:	7c 85       	ldd	r23, Y+12	; 0x0c
     d5c:	8d 85       	ldd	r24, Y+13	; 0x0d
     d5e:	9e 85       	ldd	r25, Y+14	; 0x0e
     d60:	20 e0       	ldi	r18, 0x00	; 0
     d62:	30 e0       	ldi	r19, 0x00	; 0
     d64:	4a ef       	ldi	r20, 0xFA	; 250
     d66:	54 e4       	ldi	r21, 0x44	; 68
     d68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d6c:	dc 01       	movw	r26, r24
     d6e:	cb 01       	movw	r24, r22
     d70:	8f 83       	std	Y+7, r24	; 0x07
     d72:	98 87       	std	Y+8, r25	; 0x08
     d74:	a9 87       	std	Y+9, r26	; 0x09
     d76:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     d78:	6f 81       	ldd	r22, Y+7	; 0x07
     d7a:	78 85       	ldd	r23, Y+8	; 0x08
     d7c:	89 85       	ldd	r24, Y+9	; 0x09
     d7e:	9a 85       	ldd	r25, Y+10	; 0x0a
     d80:	20 e0       	ldi	r18, 0x00	; 0
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	40 e8       	ldi	r20, 0x80	; 128
     d86:	5f e3       	ldi	r21, 0x3F	; 63
     d88:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d8c:	88 23       	and	r24, r24
     d8e:	2c f4       	brge	.+10     	; 0xd9a <flash+0x15a>
		__ticks = 1;
     d90:	81 e0       	ldi	r24, 0x01	; 1
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	9e 83       	std	Y+6, r25	; 0x06
     d96:	8d 83       	std	Y+5, r24	; 0x05
     d98:	3f c0       	rjmp	.+126    	; 0xe18 <flash+0x1d8>
	else if (__tmp > 65535)
     d9a:	6f 81       	ldd	r22, Y+7	; 0x07
     d9c:	78 85       	ldd	r23, Y+8	; 0x08
     d9e:	89 85       	ldd	r24, Y+9	; 0x09
     da0:	9a 85       	ldd	r25, Y+10	; 0x0a
     da2:	20 e0       	ldi	r18, 0x00	; 0
     da4:	3f ef       	ldi	r19, 0xFF	; 255
     da6:	4f e7       	ldi	r20, 0x7F	; 127
     da8:	57 e4       	ldi	r21, 0x47	; 71
     daa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     dae:	18 16       	cp	r1, r24
     db0:	4c f5       	brge	.+82     	; 0xe04 <flash+0x1c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     db2:	6b 85       	ldd	r22, Y+11	; 0x0b
     db4:	7c 85       	ldd	r23, Y+12	; 0x0c
     db6:	8d 85       	ldd	r24, Y+13	; 0x0d
     db8:	9e 85       	ldd	r25, Y+14	; 0x0e
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	30 e0       	ldi	r19, 0x00	; 0
     dbe:	40 e2       	ldi	r20, 0x20	; 32
     dc0:	51 e4       	ldi	r21, 0x41	; 65
     dc2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     dc6:	dc 01       	movw	r26, r24
     dc8:	cb 01       	movw	r24, r22
     dca:	bc 01       	movw	r22, r24
     dcc:	cd 01       	movw	r24, r26
     dce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dd2:	dc 01       	movw	r26, r24
     dd4:	cb 01       	movw	r24, r22
     dd6:	9e 83       	std	Y+6, r25	; 0x06
     dd8:	8d 83       	std	Y+5, r24	; 0x05
     dda:	0f c0       	rjmp	.+30     	; 0xdfa <flash+0x1ba>
     ddc:	88 ec       	ldi	r24, 0xC8	; 200
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	9c 83       	std	Y+4, r25	; 0x04
     de2:	8b 83       	std	Y+3, r24	; 0x03
     de4:	8b 81       	ldd	r24, Y+3	; 0x03
     de6:	9c 81       	ldd	r25, Y+4	; 0x04
     de8:	01 97       	sbiw	r24, 0x01	; 1
     dea:	f1 f7       	brne	.-4      	; 0xde8 <flash+0x1a8>
     dec:	9c 83       	std	Y+4, r25	; 0x04
     dee:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     df0:	8d 81       	ldd	r24, Y+5	; 0x05
     df2:	9e 81       	ldd	r25, Y+6	; 0x06
     df4:	01 97       	sbiw	r24, 0x01	; 1
     df6:	9e 83       	std	Y+6, r25	; 0x06
     df8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dfa:	8d 81       	ldd	r24, Y+5	; 0x05
     dfc:	9e 81       	ldd	r25, Y+6	; 0x06
     dfe:	00 97       	sbiw	r24, 0x00	; 0
     e00:	69 f7       	brne	.-38     	; 0xddc <flash+0x19c>
     e02:	14 c0       	rjmp	.+40     	; 0xe2c <flash+0x1ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e04:	6f 81       	ldd	r22, Y+7	; 0x07
     e06:	78 85       	ldd	r23, Y+8	; 0x08
     e08:	89 85       	ldd	r24, Y+9	; 0x09
     e0a:	9a 85       	ldd	r25, Y+10	; 0x0a
     e0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e10:	dc 01       	movw	r26, r24
     e12:	cb 01       	movw	r24, r22
     e14:	9e 83       	std	Y+6, r25	; 0x06
     e16:	8d 83       	std	Y+5, r24	; 0x05
     e18:	8d 81       	ldd	r24, Y+5	; 0x05
     e1a:	9e 81       	ldd	r25, Y+6	; 0x06
     e1c:	9a 83       	std	Y+2, r25	; 0x02
     e1e:	89 83       	std	Y+1, r24	; 0x01
     e20:	89 81       	ldd	r24, Y+1	; 0x01
     e22:	9a 81       	ldd	r25, Y+2	; 0x02
     e24:	01 97       	sbiw	r24, 0x01	; 1
     e26:	f1 f7       	brne	.-4      	; 0xe24 <flash+0x1e4>
     e28:	9a 83       	std	Y+2, r25	; 0x02
     e2a:	89 83       	std	Y+1, r24	; 0x01
	}
}

void flash()
{
	while(GET_BIT(PINC, 0)==0)
     e2c:	e3 e3       	ldi	r30, 0x33	; 51
     e2e:	f0 e0       	ldi	r31, 0x00	; 0
     e30:	80 81       	ld	r24, Z
     e32:	88 2f       	mov	r24, r24
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	81 70       	andi	r24, 0x01	; 1
     e38:	90 70       	andi	r25, 0x00	; 0
     e3a:	00 97       	sbiw	r24, 0x00	; 0
     e3c:	09 f4       	brne	.+2      	; 0xe40 <flash+0x200>
     e3e:	0b cf       	rjmp	.-490    	; 0xc56 <flash+0x16>
		PORTB = 0xFF;
		_delay_ms(500);
		PORTB = 0x00;
		_delay_ms(500);
	}
}
     e40:	6c 96       	adiw	r28, 0x1c	; 28
     e42:	0f b6       	in	r0, 0x3f	; 63
     e44:	f8 94       	cli
     e46:	de bf       	out	0x3e, r29	; 62
     e48:	0f be       	out	0x3f, r0	; 63
     e4a:	cd bf       	out	0x3d, r28	; 61
     e4c:	cf 91       	pop	r28
     e4e:	df 91       	pop	r29
     e50:	08 95       	ret

00000e52 <shift_left>:

void shift_left()
{
     e52:	0f 93       	push	r16
     e54:	1f 93       	push	r17
     e56:	df 93       	push	r29
     e58:	cf 93       	push	r28
     e5a:	cd b7       	in	r28, 0x3d	; 61
     e5c:	de b7       	in	r29, 0x3e	; 62
     e5e:	c0 57       	subi	r28, 0x70	; 112
     e60:	d0 40       	sbci	r29, 0x00	; 0
     e62:	0f b6       	in	r0, 0x3f	; 63
     e64:	f8 94       	cli
     e66:	de bf       	out	0x3e, r29	; 62
     e68:	0f be       	out	0x3f, r0	; 63
     e6a:	cd bf       	out	0x3d, r28	; 61
     e6c:	86 c4       	rjmp	.+2316   	; 0x177a <shift_left+0x928>
	while(GET_BIT(PINC, 1)==0)
	{
		PORTB = 0b00000001;
     e6e:	e8 e3       	ldi	r30, 0x38	; 56
     e70:	f0 e0       	ldi	r31, 0x00	; 0
     e72:	81 e0       	ldi	r24, 0x01	; 1
     e74:	80 83       	st	Z, r24
     e76:	fe 01       	movw	r30, r28
     e78:	e3 59       	subi	r30, 0x93	; 147
     e7a:	ff 4f       	sbci	r31, 0xFF	; 255
     e7c:	80 e0       	ldi	r24, 0x00	; 0
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	aa e7       	ldi	r26, 0x7A	; 122
     e82:	b3 e4       	ldi	r27, 0x43	; 67
     e84:	80 83       	st	Z, r24
     e86:	91 83       	std	Z+1, r25	; 0x01
     e88:	a2 83       	std	Z+2, r26	; 0x02
     e8a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e8c:	8e 01       	movw	r16, r28
     e8e:	07 59       	subi	r16, 0x97	; 151
     e90:	1f 4f       	sbci	r17, 0xFF	; 255
     e92:	fe 01       	movw	r30, r28
     e94:	e3 59       	subi	r30, 0x93	; 147
     e96:	ff 4f       	sbci	r31, 0xFF	; 255
     e98:	60 81       	ld	r22, Z
     e9a:	71 81       	ldd	r23, Z+1	; 0x01
     e9c:	82 81       	ldd	r24, Z+2	; 0x02
     e9e:	93 81       	ldd	r25, Z+3	; 0x03
     ea0:	20 e0       	ldi	r18, 0x00	; 0
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	4a ef       	ldi	r20, 0xFA	; 250
     ea6:	54 e4       	ldi	r21, 0x44	; 68
     ea8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     eac:	dc 01       	movw	r26, r24
     eae:	cb 01       	movw	r24, r22
     eb0:	f8 01       	movw	r30, r16
     eb2:	80 83       	st	Z, r24
     eb4:	91 83       	std	Z+1, r25	; 0x01
     eb6:	a2 83       	std	Z+2, r26	; 0x02
     eb8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     eba:	fe 01       	movw	r30, r28
     ebc:	e7 59       	subi	r30, 0x97	; 151
     ebe:	ff 4f       	sbci	r31, 0xFF	; 255
     ec0:	60 81       	ld	r22, Z
     ec2:	71 81       	ldd	r23, Z+1	; 0x01
     ec4:	82 81       	ldd	r24, Z+2	; 0x02
     ec6:	93 81       	ldd	r25, Z+3	; 0x03
     ec8:	20 e0       	ldi	r18, 0x00	; 0
     eca:	30 e0       	ldi	r19, 0x00	; 0
     ecc:	40 e8       	ldi	r20, 0x80	; 128
     ece:	5f e3       	ldi	r21, 0x3F	; 63
     ed0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     ed4:	88 23       	and	r24, r24
     ed6:	44 f4       	brge	.+16     	; 0xee8 <shift_left+0x96>
		__ticks = 1;
     ed8:	fe 01       	movw	r30, r28
     eda:	e9 59       	subi	r30, 0x99	; 153
     edc:	ff 4f       	sbci	r31, 0xFF	; 255
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	91 83       	std	Z+1, r25	; 0x01
     ee4:	80 83       	st	Z, r24
     ee6:	64 c0       	rjmp	.+200    	; 0xfb0 <shift_left+0x15e>
	else if (__tmp > 65535)
     ee8:	fe 01       	movw	r30, r28
     eea:	e7 59       	subi	r30, 0x97	; 151
     eec:	ff 4f       	sbci	r31, 0xFF	; 255
     eee:	60 81       	ld	r22, Z
     ef0:	71 81       	ldd	r23, Z+1	; 0x01
     ef2:	82 81       	ldd	r24, Z+2	; 0x02
     ef4:	93 81       	ldd	r25, Z+3	; 0x03
     ef6:	20 e0       	ldi	r18, 0x00	; 0
     ef8:	3f ef       	ldi	r19, 0xFF	; 255
     efa:	4f e7       	ldi	r20, 0x7F	; 127
     efc:	57 e4       	ldi	r21, 0x47	; 71
     efe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     f02:	18 16       	cp	r1, r24
     f04:	0c f0       	brlt	.+2      	; 0xf08 <shift_left+0xb6>
     f06:	43 c0       	rjmp	.+134    	; 0xf8e <shift_left+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f08:	fe 01       	movw	r30, r28
     f0a:	e3 59       	subi	r30, 0x93	; 147
     f0c:	ff 4f       	sbci	r31, 0xFF	; 255
     f0e:	60 81       	ld	r22, Z
     f10:	71 81       	ldd	r23, Z+1	; 0x01
     f12:	82 81       	ldd	r24, Z+2	; 0x02
     f14:	93 81       	ldd	r25, Z+3	; 0x03
     f16:	20 e0       	ldi	r18, 0x00	; 0
     f18:	30 e0       	ldi	r19, 0x00	; 0
     f1a:	40 e2       	ldi	r20, 0x20	; 32
     f1c:	51 e4       	ldi	r21, 0x41	; 65
     f1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f22:	dc 01       	movw	r26, r24
     f24:	cb 01       	movw	r24, r22
     f26:	8e 01       	movw	r16, r28
     f28:	09 59       	subi	r16, 0x99	; 153
     f2a:	1f 4f       	sbci	r17, 0xFF	; 255
     f2c:	bc 01       	movw	r22, r24
     f2e:	cd 01       	movw	r24, r26
     f30:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f34:	dc 01       	movw	r26, r24
     f36:	cb 01       	movw	r24, r22
     f38:	f8 01       	movw	r30, r16
     f3a:	91 83       	std	Z+1, r25	; 0x01
     f3c:	80 83       	st	Z, r24
     f3e:	1f c0       	rjmp	.+62     	; 0xf7e <shift_left+0x12c>
     f40:	fe 01       	movw	r30, r28
     f42:	eb 59       	subi	r30, 0x9B	; 155
     f44:	ff 4f       	sbci	r31, 0xFF	; 255
     f46:	88 ec       	ldi	r24, 0xC8	; 200
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	91 83       	std	Z+1, r25	; 0x01
     f4c:	80 83       	st	Z, r24
     f4e:	fe 01       	movw	r30, r28
     f50:	eb 59       	subi	r30, 0x9B	; 155
     f52:	ff 4f       	sbci	r31, 0xFF	; 255
     f54:	80 81       	ld	r24, Z
     f56:	91 81       	ldd	r25, Z+1	; 0x01
     f58:	01 97       	sbiw	r24, 0x01	; 1
     f5a:	f1 f7       	brne	.-4      	; 0xf58 <shift_left+0x106>
     f5c:	fe 01       	movw	r30, r28
     f5e:	eb 59       	subi	r30, 0x9B	; 155
     f60:	ff 4f       	sbci	r31, 0xFF	; 255
     f62:	91 83       	std	Z+1, r25	; 0x01
     f64:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f66:	de 01       	movw	r26, r28
     f68:	a9 59       	subi	r26, 0x99	; 153
     f6a:	bf 4f       	sbci	r27, 0xFF	; 255
     f6c:	fe 01       	movw	r30, r28
     f6e:	e9 59       	subi	r30, 0x99	; 153
     f70:	ff 4f       	sbci	r31, 0xFF	; 255
     f72:	80 81       	ld	r24, Z
     f74:	91 81       	ldd	r25, Z+1	; 0x01
     f76:	01 97       	sbiw	r24, 0x01	; 1
     f78:	11 96       	adiw	r26, 0x01	; 1
     f7a:	9c 93       	st	X, r25
     f7c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f7e:	fe 01       	movw	r30, r28
     f80:	e9 59       	subi	r30, 0x99	; 153
     f82:	ff 4f       	sbci	r31, 0xFF	; 255
     f84:	80 81       	ld	r24, Z
     f86:	91 81       	ldd	r25, Z+1	; 0x01
     f88:	00 97       	sbiw	r24, 0x00	; 0
     f8a:	d1 f6       	brne	.-76     	; 0xf40 <shift_left+0xee>
     f8c:	27 c0       	rjmp	.+78     	; 0xfdc <shift_left+0x18a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f8e:	8e 01       	movw	r16, r28
     f90:	09 59       	subi	r16, 0x99	; 153
     f92:	1f 4f       	sbci	r17, 0xFF	; 255
     f94:	fe 01       	movw	r30, r28
     f96:	e7 59       	subi	r30, 0x97	; 151
     f98:	ff 4f       	sbci	r31, 0xFF	; 255
     f9a:	60 81       	ld	r22, Z
     f9c:	71 81       	ldd	r23, Z+1	; 0x01
     f9e:	82 81       	ldd	r24, Z+2	; 0x02
     fa0:	93 81       	ldd	r25, Z+3	; 0x03
     fa2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fa6:	dc 01       	movw	r26, r24
     fa8:	cb 01       	movw	r24, r22
     faa:	f8 01       	movw	r30, r16
     fac:	91 83       	std	Z+1, r25	; 0x01
     fae:	80 83       	st	Z, r24
     fb0:	de 01       	movw	r26, r28
     fb2:	ad 59       	subi	r26, 0x9D	; 157
     fb4:	bf 4f       	sbci	r27, 0xFF	; 255
     fb6:	fe 01       	movw	r30, r28
     fb8:	e9 59       	subi	r30, 0x99	; 153
     fba:	ff 4f       	sbci	r31, 0xFF	; 255
     fbc:	80 81       	ld	r24, Z
     fbe:	91 81       	ldd	r25, Z+1	; 0x01
     fc0:	8d 93       	st	X+, r24
     fc2:	9c 93       	st	X, r25
     fc4:	fe 01       	movw	r30, r28
     fc6:	ed 59       	subi	r30, 0x9D	; 157
     fc8:	ff 4f       	sbci	r31, 0xFF	; 255
     fca:	80 81       	ld	r24, Z
     fcc:	91 81       	ldd	r25, Z+1	; 0x01
     fce:	01 97       	sbiw	r24, 0x01	; 1
     fd0:	f1 f7       	brne	.-4      	; 0xfce <shift_left+0x17c>
     fd2:	fe 01       	movw	r30, r28
     fd4:	ed 59       	subi	r30, 0x9D	; 157
     fd6:	ff 4f       	sbci	r31, 0xFF	; 255
     fd8:	91 83       	std	Z+1, r25	; 0x01
     fda:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00000010;
     fdc:	e8 e3       	ldi	r30, 0x38	; 56
     fde:	f0 e0       	ldi	r31, 0x00	; 0
     fe0:	82 e0       	ldi	r24, 0x02	; 2
     fe2:	80 83       	st	Z, r24
     fe4:	fe 01       	movw	r30, r28
     fe6:	e1 5a       	subi	r30, 0xA1	; 161
     fe8:	ff 4f       	sbci	r31, 0xFF	; 255
     fea:	80 e0       	ldi	r24, 0x00	; 0
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	aa e7       	ldi	r26, 0x7A	; 122
     ff0:	b3 e4       	ldi	r27, 0x43	; 67
     ff2:	80 83       	st	Z, r24
     ff4:	91 83       	std	Z+1, r25	; 0x01
     ff6:	a2 83       	std	Z+2, r26	; 0x02
     ff8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ffa:	8e 01       	movw	r16, r28
     ffc:	05 5a       	subi	r16, 0xA5	; 165
     ffe:	1f 4f       	sbci	r17, 0xFF	; 255
    1000:	fe 01       	movw	r30, r28
    1002:	e1 5a       	subi	r30, 0xA1	; 161
    1004:	ff 4f       	sbci	r31, 0xFF	; 255
    1006:	60 81       	ld	r22, Z
    1008:	71 81       	ldd	r23, Z+1	; 0x01
    100a:	82 81       	ldd	r24, Z+2	; 0x02
    100c:	93 81       	ldd	r25, Z+3	; 0x03
    100e:	20 e0       	ldi	r18, 0x00	; 0
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	4a ef       	ldi	r20, 0xFA	; 250
    1014:	54 e4       	ldi	r21, 0x44	; 68
    1016:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    101a:	dc 01       	movw	r26, r24
    101c:	cb 01       	movw	r24, r22
    101e:	f8 01       	movw	r30, r16
    1020:	80 83       	st	Z, r24
    1022:	91 83       	std	Z+1, r25	; 0x01
    1024:	a2 83       	std	Z+2, r26	; 0x02
    1026:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1028:	fe 01       	movw	r30, r28
    102a:	e5 5a       	subi	r30, 0xA5	; 165
    102c:	ff 4f       	sbci	r31, 0xFF	; 255
    102e:	60 81       	ld	r22, Z
    1030:	71 81       	ldd	r23, Z+1	; 0x01
    1032:	82 81       	ldd	r24, Z+2	; 0x02
    1034:	93 81       	ldd	r25, Z+3	; 0x03
    1036:	20 e0       	ldi	r18, 0x00	; 0
    1038:	30 e0       	ldi	r19, 0x00	; 0
    103a:	40 e8       	ldi	r20, 0x80	; 128
    103c:	5f e3       	ldi	r21, 0x3F	; 63
    103e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1042:	88 23       	and	r24, r24
    1044:	44 f4       	brge	.+16     	; 0x1056 <shift_left+0x204>
		__ticks = 1;
    1046:	fe 01       	movw	r30, r28
    1048:	e7 5a       	subi	r30, 0xA7	; 167
    104a:	ff 4f       	sbci	r31, 0xFF	; 255
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	91 83       	std	Z+1, r25	; 0x01
    1052:	80 83       	st	Z, r24
    1054:	64 c0       	rjmp	.+200    	; 0x111e <shift_left+0x2cc>
	else if (__tmp > 65535)
    1056:	fe 01       	movw	r30, r28
    1058:	e5 5a       	subi	r30, 0xA5	; 165
    105a:	ff 4f       	sbci	r31, 0xFF	; 255
    105c:	60 81       	ld	r22, Z
    105e:	71 81       	ldd	r23, Z+1	; 0x01
    1060:	82 81       	ldd	r24, Z+2	; 0x02
    1062:	93 81       	ldd	r25, Z+3	; 0x03
    1064:	20 e0       	ldi	r18, 0x00	; 0
    1066:	3f ef       	ldi	r19, 0xFF	; 255
    1068:	4f e7       	ldi	r20, 0x7F	; 127
    106a:	57 e4       	ldi	r21, 0x47	; 71
    106c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1070:	18 16       	cp	r1, r24
    1072:	0c f0       	brlt	.+2      	; 0x1076 <shift_left+0x224>
    1074:	43 c0       	rjmp	.+134    	; 0x10fc <shift_left+0x2aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1076:	fe 01       	movw	r30, r28
    1078:	e1 5a       	subi	r30, 0xA1	; 161
    107a:	ff 4f       	sbci	r31, 0xFF	; 255
    107c:	60 81       	ld	r22, Z
    107e:	71 81       	ldd	r23, Z+1	; 0x01
    1080:	82 81       	ldd	r24, Z+2	; 0x02
    1082:	93 81       	ldd	r25, Z+3	; 0x03
    1084:	20 e0       	ldi	r18, 0x00	; 0
    1086:	30 e0       	ldi	r19, 0x00	; 0
    1088:	40 e2       	ldi	r20, 0x20	; 32
    108a:	51 e4       	ldi	r21, 0x41	; 65
    108c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1090:	dc 01       	movw	r26, r24
    1092:	cb 01       	movw	r24, r22
    1094:	8e 01       	movw	r16, r28
    1096:	07 5a       	subi	r16, 0xA7	; 167
    1098:	1f 4f       	sbci	r17, 0xFF	; 255
    109a:	bc 01       	movw	r22, r24
    109c:	cd 01       	movw	r24, r26
    109e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    10a2:	dc 01       	movw	r26, r24
    10a4:	cb 01       	movw	r24, r22
    10a6:	f8 01       	movw	r30, r16
    10a8:	91 83       	std	Z+1, r25	; 0x01
    10aa:	80 83       	st	Z, r24
    10ac:	1f c0       	rjmp	.+62     	; 0x10ec <shift_left+0x29a>
    10ae:	fe 01       	movw	r30, r28
    10b0:	e9 5a       	subi	r30, 0xA9	; 169
    10b2:	ff 4f       	sbci	r31, 0xFF	; 255
    10b4:	88 ec       	ldi	r24, 0xC8	; 200
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	91 83       	std	Z+1, r25	; 0x01
    10ba:	80 83       	st	Z, r24
    10bc:	fe 01       	movw	r30, r28
    10be:	e9 5a       	subi	r30, 0xA9	; 169
    10c0:	ff 4f       	sbci	r31, 0xFF	; 255
    10c2:	80 81       	ld	r24, Z
    10c4:	91 81       	ldd	r25, Z+1	; 0x01
    10c6:	01 97       	sbiw	r24, 0x01	; 1
    10c8:	f1 f7       	brne	.-4      	; 0x10c6 <shift_left+0x274>
    10ca:	fe 01       	movw	r30, r28
    10cc:	e9 5a       	subi	r30, 0xA9	; 169
    10ce:	ff 4f       	sbci	r31, 0xFF	; 255
    10d0:	91 83       	std	Z+1, r25	; 0x01
    10d2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10d4:	de 01       	movw	r26, r28
    10d6:	a7 5a       	subi	r26, 0xA7	; 167
    10d8:	bf 4f       	sbci	r27, 0xFF	; 255
    10da:	fe 01       	movw	r30, r28
    10dc:	e7 5a       	subi	r30, 0xA7	; 167
    10de:	ff 4f       	sbci	r31, 0xFF	; 255
    10e0:	80 81       	ld	r24, Z
    10e2:	91 81       	ldd	r25, Z+1	; 0x01
    10e4:	01 97       	sbiw	r24, 0x01	; 1
    10e6:	11 96       	adiw	r26, 0x01	; 1
    10e8:	9c 93       	st	X, r25
    10ea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10ec:	fe 01       	movw	r30, r28
    10ee:	e7 5a       	subi	r30, 0xA7	; 167
    10f0:	ff 4f       	sbci	r31, 0xFF	; 255
    10f2:	80 81       	ld	r24, Z
    10f4:	91 81       	ldd	r25, Z+1	; 0x01
    10f6:	00 97       	sbiw	r24, 0x00	; 0
    10f8:	d1 f6       	brne	.-76     	; 0x10ae <shift_left+0x25c>
    10fa:	27 c0       	rjmp	.+78     	; 0x114a <shift_left+0x2f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10fc:	8e 01       	movw	r16, r28
    10fe:	07 5a       	subi	r16, 0xA7	; 167
    1100:	1f 4f       	sbci	r17, 0xFF	; 255
    1102:	fe 01       	movw	r30, r28
    1104:	e5 5a       	subi	r30, 0xA5	; 165
    1106:	ff 4f       	sbci	r31, 0xFF	; 255
    1108:	60 81       	ld	r22, Z
    110a:	71 81       	ldd	r23, Z+1	; 0x01
    110c:	82 81       	ldd	r24, Z+2	; 0x02
    110e:	93 81       	ldd	r25, Z+3	; 0x03
    1110:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1114:	dc 01       	movw	r26, r24
    1116:	cb 01       	movw	r24, r22
    1118:	f8 01       	movw	r30, r16
    111a:	91 83       	std	Z+1, r25	; 0x01
    111c:	80 83       	st	Z, r24
    111e:	de 01       	movw	r26, r28
    1120:	ab 5a       	subi	r26, 0xAB	; 171
    1122:	bf 4f       	sbci	r27, 0xFF	; 255
    1124:	fe 01       	movw	r30, r28
    1126:	e7 5a       	subi	r30, 0xA7	; 167
    1128:	ff 4f       	sbci	r31, 0xFF	; 255
    112a:	80 81       	ld	r24, Z
    112c:	91 81       	ldd	r25, Z+1	; 0x01
    112e:	8d 93       	st	X+, r24
    1130:	9c 93       	st	X, r25
    1132:	fe 01       	movw	r30, r28
    1134:	eb 5a       	subi	r30, 0xAB	; 171
    1136:	ff 4f       	sbci	r31, 0xFF	; 255
    1138:	80 81       	ld	r24, Z
    113a:	91 81       	ldd	r25, Z+1	; 0x01
    113c:	01 97       	sbiw	r24, 0x01	; 1
    113e:	f1 f7       	brne	.-4      	; 0x113c <shift_left+0x2ea>
    1140:	fe 01       	movw	r30, r28
    1142:	eb 5a       	subi	r30, 0xAB	; 171
    1144:	ff 4f       	sbci	r31, 0xFF	; 255
    1146:	91 83       	std	Z+1, r25	; 0x01
    1148:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00000100;
    114a:	e8 e3       	ldi	r30, 0x38	; 56
    114c:	f0 e0       	ldi	r31, 0x00	; 0
    114e:	84 e0       	ldi	r24, 0x04	; 4
    1150:	80 83       	st	Z, r24
    1152:	fe 01       	movw	r30, r28
    1154:	ef 5a       	subi	r30, 0xAF	; 175
    1156:	ff 4f       	sbci	r31, 0xFF	; 255
    1158:	80 e0       	ldi	r24, 0x00	; 0
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	aa e7       	ldi	r26, 0x7A	; 122
    115e:	b3 e4       	ldi	r27, 0x43	; 67
    1160:	80 83       	st	Z, r24
    1162:	91 83       	std	Z+1, r25	; 0x01
    1164:	a2 83       	std	Z+2, r26	; 0x02
    1166:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1168:	8e 01       	movw	r16, r28
    116a:	03 5b       	subi	r16, 0xB3	; 179
    116c:	1f 4f       	sbci	r17, 0xFF	; 255
    116e:	fe 01       	movw	r30, r28
    1170:	ef 5a       	subi	r30, 0xAF	; 175
    1172:	ff 4f       	sbci	r31, 0xFF	; 255
    1174:	60 81       	ld	r22, Z
    1176:	71 81       	ldd	r23, Z+1	; 0x01
    1178:	82 81       	ldd	r24, Z+2	; 0x02
    117a:	93 81       	ldd	r25, Z+3	; 0x03
    117c:	20 e0       	ldi	r18, 0x00	; 0
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	4a ef       	ldi	r20, 0xFA	; 250
    1182:	54 e4       	ldi	r21, 0x44	; 68
    1184:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1188:	dc 01       	movw	r26, r24
    118a:	cb 01       	movw	r24, r22
    118c:	f8 01       	movw	r30, r16
    118e:	80 83       	st	Z, r24
    1190:	91 83       	std	Z+1, r25	; 0x01
    1192:	a2 83       	std	Z+2, r26	; 0x02
    1194:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1196:	fe 01       	movw	r30, r28
    1198:	e3 5b       	subi	r30, 0xB3	; 179
    119a:	ff 4f       	sbci	r31, 0xFF	; 255
    119c:	60 81       	ld	r22, Z
    119e:	71 81       	ldd	r23, Z+1	; 0x01
    11a0:	82 81       	ldd	r24, Z+2	; 0x02
    11a2:	93 81       	ldd	r25, Z+3	; 0x03
    11a4:	20 e0       	ldi	r18, 0x00	; 0
    11a6:	30 e0       	ldi	r19, 0x00	; 0
    11a8:	40 e8       	ldi	r20, 0x80	; 128
    11aa:	5f e3       	ldi	r21, 0x3F	; 63
    11ac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11b0:	88 23       	and	r24, r24
    11b2:	44 f4       	brge	.+16     	; 0x11c4 <shift_left+0x372>
		__ticks = 1;
    11b4:	fe 01       	movw	r30, r28
    11b6:	e5 5b       	subi	r30, 0xB5	; 181
    11b8:	ff 4f       	sbci	r31, 0xFF	; 255
    11ba:	81 e0       	ldi	r24, 0x01	; 1
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	91 83       	std	Z+1, r25	; 0x01
    11c0:	80 83       	st	Z, r24
    11c2:	64 c0       	rjmp	.+200    	; 0x128c <shift_left+0x43a>
	else if (__tmp > 65535)
    11c4:	fe 01       	movw	r30, r28
    11c6:	e3 5b       	subi	r30, 0xB3	; 179
    11c8:	ff 4f       	sbci	r31, 0xFF	; 255
    11ca:	60 81       	ld	r22, Z
    11cc:	71 81       	ldd	r23, Z+1	; 0x01
    11ce:	82 81       	ldd	r24, Z+2	; 0x02
    11d0:	93 81       	ldd	r25, Z+3	; 0x03
    11d2:	20 e0       	ldi	r18, 0x00	; 0
    11d4:	3f ef       	ldi	r19, 0xFF	; 255
    11d6:	4f e7       	ldi	r20, 0x7F	; 127
    11d8:	57 e4       	ldi	r21, 0x47	; 71
    11da:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    11de:	18 16       	cp	r1, r24
    11e0:	0c f0       	brlt	.+2      	; 0x11e4 <shift_left+0x392>
    11e2:	43 c0       	rjmp	.+134    	; 0x126a <shift_left+0x418>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11e4:	fe 01       	movw	r30, r28
    11e6:	ef 5a       	subi	r30, 0xAF	; 175
    11e8:	ff 4f       	sbci	r31, 0xFF	; 255
    11ea:	60 81       	ld	r22, Z
    11ec:	71 81       	ldd	r23, Z+1	; 0x01
    11ee:	82 81       	ldd	r24, Z+2	; 0x02
    11f0:	93 81       	ldd	r25, Z+3	; 0x03
    11f2:	20 e0       	ldi	r18, 0x00	; 0
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	40 e2       	ldi	r20, 0x20	; 32
    11f8:	51 e4       	ldi	r21, 0x41	; 65
    11fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11fe:	dc 01       	movw	r26, r24
    1200:	cb 01       	movw	r24, r22
    1202:	8e 01       	movw	r16, r28
    1204:	05 5b       	subi	r16, 0xB5	; 181
    1206:	1f 4f       	sbci	r17, 0xFF	; 255
    1208:	bc 01       	movw	r22, r24
    120a:	cd 01       	movw	r24, r26
    120c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1210:	dc 01       	movw	r26, r24
    1212:	cb 01       	movw	r24, r22
    1214:	f8 01       	movw	r30, r16
    1216:	91 83       	std	Z+1, r25	; 0x01
    1218:	80 83       	st	Z, r24
    121a:	1f c0       	rjmp	.+62     	; 0x125a <shift_left+0x408>
    121c:	fe 01       	movw	r30, r28
    121e:	e7 5b       	subi	r30, 0xB7	; 183
    1220:	ff 4f       	sbci	r31, 0xFF	; 255
    1222:	88 ec       	ldi	r24, 0xC8	; 200
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	91 83       	std	Z+1, r25	; 0x01
    1228:	80 83       	st	Z, r24
    122a:	fe 01       	movw	r30, r28
    122c:	e7 5b       	subi	r30, 0xB7	; 183
    122e:	ff 4f       	sbci	r31, 0xFF	; 255
    1230:	80 81       	ld	r24, Z
    1232:	91 81       	ldd	r25, Z+1	; 0x01
    1234:	01 97       	sbiw	r24, 0x01	; 1
    1236:	f1 f7       	brne	.-4      	; 0x1234 <shift_left+0x3e2>
    1238:	fe 01       	movw	r30, r28
    123a:	e7 5b       	subi	r30, 0xB7	; 183
    123c:	ff 4f       	sbci	r31, 0xFF	; 255
    123e:	91 83       	std	Z+1, r25	; 0x01
    1240:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1242:	de 01       	movw	r26, r28
    1244:	a5 5b       	subi	r26, 0xB5	; 181
    1246:	bf 4f       	sbci	r27, 0xFF	; 255
    1248:	fe 01       	movw	r30, r28
    124a:	e5 5b       	subi	r30, 0xB5	; 181
    124c:	ff 4f       	sbci	r31, 0xFF	; 255
    124e:	80 81       	ld	r24, Z
    1250:	91 81       	ldd	r25, Z+1	; 0x01
    1252:	01 97       	sbiw	r24, 0x01	; 1
    1254:	11 96       	adiw	r26, 0x01	; 1
    1256:	9c 93       	st	X, r25
    1258:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    125a:	fe 01       	movw	r30, r28
    125c:	e5 5b       	subi	r30, 0xB5	; 181
    125e:	ff 4f       	sbci	r31, 0xFF	; 255
    1260:	80 81       	ld	r24, Z
    1262:	91 81       	ldd	r25, Z+1	; 0x01
    1264:	00 97       	sbiw	r24, 0x00	; 0
    1266:	d1 f6       	brne	.-76     	; 0x121c <shift_left+0x3ca>
    1268:	27 c0       	rjmp	.+78     	; 0x12b8 <shift_left+0x466>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    126a:	8e 01       	movw	r16, r28
    126c:	05 5b       	subi	r16, 0xB5	; 181
    126e:	1f 4f       	sbci	r17, 0xFF	; 255
    1270:	fe 01       	movw	r30, r28
    1272:	e3 5b       	subi	r30, 0xB3	; 179
    1274:	ff 4f       	sbci	r31, 0xFF	; 255
    1276:	60 81       	ld	r22, Z
    1278:	71 81       	ldd	r23, Z+1	; 0x01
    127a:	82 81       	ldd	r24, Z+2	; 0x02
    127c:	93 81       	ldd	r25, Z+3	; 0x03
    127e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1282:	dc 01       	movw	r26, r24
    1284:	cb 01       	movw	r24, r22
    1286:	f8 01       	movw	r30, r16
    1288:	91 83       	std	Z+1, r25	; 0x01
    128a:	80 83       	st	Z, r24
    128c:	de 01       	movw	r26, r28
    128e:	a9 5b       	subi	r26, 0xB9	; 185
    1290:	bf 4f       	sbci	r27, 0xFF	; 255
    1292:	fe 01       	movw	r30, r28
    1294:	e5 5b       	subi	r30, 0xB5	; 181
    1296:	ff 4f       	sbci	r31, 0xFF	; 255
    1298:	80 81       	ld	r24, Z
    129a:	91 81       	ldd	r25, Z+1	; 0x01
    129c:	8d 93       	st	X+, r24
    129e:	9c 93       	st	X, r25
    12a0:	fe 01       	movw	r30, r28
    12a2:	e9 5b       	subi	r30, 0xB9	; 185
    12a4:	ff 4f       	sbci	r31, 0xFF	; 255
    12a6:	80 81       	ld	r24, Z
    12a8:	91 81       	ldd	r25, Z+1	; 0x01
    12aa:	01 97       	sbiw	r24, 0x01	; 1
    12ac:	f1 f7       	brne	.-4      	; 0x12aa <shift_left+0x458>
    12ae:	fe 01       	movw	r30, r28
    12b0:	e9 5b       	subi	r30, 0xB9	; 185
    12b2:	ff 4f       	sbci	r31, 0xFF	; 255
    12b4:	91 83       	std	Z+1, r25	; 0x01
    12b6:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00001000;
    12b8:	e8 e3       	ldi	r30, 0x38	; 56
    12ba:	f0 e0       	ldi	r31, 0x00	; 0
    12bc:	88 e0       	ldi	r24, 0x08	; 8
    12be:	80 83       	st	Z, r24
    12c0:	fe 01       	movw	r30, r28
    12c2:	ed 5b       	subi	r30, 0xBD	; 189
    12c4:	ff 4f       	sbci	r31, 0xFF	; 255
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	aa e7       	ldi	r26, 0x7A	; 122
    12cc:	b3 e4       	ldi	r27, 0x43	; 67
    12ce:	80 83       	st	Z, r24
    12d0:	91 83       	std	Z+1, r25	; 0x01
    12d2:	a2 83       	std	Z+2, r26	; 0x02
    12d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12d6:	8e 01       	movw	r16, r28
    12d8:	01 5c       	subi	r16, 0xC1	; 193
    12da:	1f 4f       	sbci	r17, 0xFF	; 255
    12dc:	fe 01       	movw	r30, r28
    12de:	ed 5b       	subi	r30, 0xBD	; 189
    12e0:	ff 4f       	sbci	r31, 0xFF	; 255
    12e2:	60 81       	ld	r22, Z
    12e4:	71 81       	ldd	r23, Z+1	; 0x01
    12e6:	82 81       	ldd	r24, Z+2	; 0x02
    12e8:	93 81       	ldd	r25, Z+3	; 0x03
    12ea:	20 e0       	ldi	r18, 0x00	; 0
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	4a ef       	ldi	r20, 0xFA	; 250
    12f0:	54 e4       	ldi	r21, 0x44	; 68
    12f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12f6:	dc 01       	movw	r26, r24
    12f8:	cb 01       	movw	r24, r22
    12fa:	f8 01       	movw	r30, r16
    12fc:	80 83       	st	Z, r24
    12fe:	91 83       	std	Z+1, r25	; 0x01
    1300:	a2 83       	std	Z+2, r26	; 0x02
    1302:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1304:	fe 01       	movw	r30, r28
    1306:	ff 96       	adiw	r30, 0x3f	; 63
    1308:	60 81       	ld	r22, Z
    130a:	71 81       	ldd	r23, Z+1	; 0x01
    130c:	82 81       	ldd	r24, Z+2	; 0x02
    130e:	93 81       	ldd	r25, Z+3	; 0x03
    1310:	20 e0       	ldi	r18, 0x00	; 0
    1312:	30 e0       	ldi	r19, 0x00	; 0
    1314:	40 e8       	ldi	r20, 0x80	; 128
    1316:	5f e3       	ldi	r21, 0x3F	; 63
    1318:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    131c:	88 23       	and	r24, r24
    131e:	2c f4       	brge	.+10     	; 0x132a <shift_left+0x4d8>
		__ticks = 1;
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	9e af       	std	Y+62, r25	; 0x3e
    1326:	8d af       	std	Y+61, r24	; 0x3d
    1328:	46 c0       	rjmp	.+140    	; 0x13b6 <shift_left+0x564>
	else if (__tmp > 65535)
    132a:	fe 01       	movw	r30, r28
    132c:	ff 96       	adiw	r30, 0x3f	; 63
    132e:	60 81       	ld	r22, Z
    1330:	71 81       	ldd	r23, Z+1	; 0x01
    1332:	82 81       	ldd	r24, Z+2	; 0x02
    1334:	93 81       	ldd	r25, Z+3	; 0x03
    1336:	20 e0       	ldi	r18, 0x00	; 0
    1338:	3f ef       	ldi	r19, 0xFF	; 255
    133a:	4f e7       	ldi	r20, 0x7F	; 127
    133c:	57 e4       	ldi	r21, 0x47	; 71
    133e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1342:	18 16       	cp	r1, r24
    1344:	64 f5       	brge	.+88     	; 0x139e <shift_left+0x54c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1346:	fe 01       	movw	r30, r28
    1348:	ed 5b       	subi	r30, 0xBD	; 189
    134a:	ff 4f       	sbci	r31, 0xFF	; 255
    134c:	60 81       	ld	r22, Z
    134e:	71 81       	ldd	r23, Z+1	; 0x01
    1350:	82 81       	ldd	r24, Z+2	; 0x02
    1352:	93 81       	ldd	r25, Z+3	; 0x03
    1354:	20 e0       	ldi	r18, 0x00	; 0
    1356:	30 e0       	ldi	r19, 0x00	; 0
    1358:	40 e2       	ldi	r20, 0x20	; 32
    135a:	51 e4       	ldi	r21, 0x41	; 65
    135c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1360:	dc 01       	movw	r26, r24
    1362:	cb 01       	movw	r24, r22
    1364:	bc 01       	movw	r22, r24
    1366:	cd 01       	movw	r24, r26
    1368:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    136c:	dc 01       	movw	r26, r24
    136e:	cb 01       	movw	r24, r22
    1370:	9e af       	std	Y+62, r25	; 0x3e
    1372:	8d af       	std	Y+61, r24	; 0x3d
    1374:	0f c0       	rjmp	.+30     	; 0x1394 <shift_left+0x542>
    1376:	88 ec       	ldi	r24, 0xC8	; 200
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	9c af       	std	Y+60, r25	; 0x3c
    137c:	8b af       	std	Y+59, r24	; 0x3b
    137e:	8b ad       	ldd	r24, Y+59	; 0x3b
    1380:	9c ad       	ldd	r25, Y+60	; 0x3c
    1382:	01 97       	sbiw	r24, 0x01	; 1
    1384:	f1 f7       	brne	.-4      	; 0x1382 <shift_left+0x530>
    1386:	9c af       	std	Y+60, r25	; 0x3c
    1388:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    138a:	8d ad       	ldd	r24, Y+61	; 0x3d
    138c:	9e ad       	ldd	r25, Y+62	; 0x3e
    138e:	01 97       	sbiw	r24, 0x01	; 1
    1390:	9e af       	std	Y+62, r25	; 0x3e
    1392:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1394:	8d ad       	ldd	r24, Y+61	; 0x3d
    1396:	9e ad       	ldd	r25, Y+62	; 0x3e
    1398:	00 97       	sbiw	r24, 0x00	; 0
    139a:	69 f7       	brne	.-38     	; 0x1376 <shift_left+0x524>
    139c:	16 c0       	rjmp	.+44     	; 0x13ca <shift_left+0x578>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    139e:	fe 01       	movw	r30, r28
    13a0:	ff 96       	adiw	r30, 0x3f	; 63
    13a2:	60 81       	ld	r22, Z
    13a4:	71 81       	ldd	r23, Z+1	; 0x01
    13a6:	82 81       	ldd	r24, Z+2	; 0x02
    13a8:	93 81       	ldd	r25, Z+3	; 0x03
    13aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13ae:	dc 01       	movw	r26, r24
    13b0:	cb 01       	movw	r24, r22
    13b2:	9e af       	std	Y+62, r25	; 0x3e
    13b4:	8d af       	std	Y+61, r24	; 0x3d
    13b6:	8d ad       	ldd	r24, Y+61	; 0x3d
    13b8:	9e ad       	ldd	r25, Y+62	; 0x3e
    13ba:	9a af       	std	Y+58, r25	; 0x3a
    13bc:	89 af       	std	Y+57, r24	; 0x39
    13be:	89 ad       	ldd	r24, Y+57	; 0x39
    13c0:	9a ad       	ldd	r25, Y+58	; 0x3a
    13c2:	01 97       	sbiw	r24, 0x01	; 1
    13c4:	f1 f7       	brne	.-4      	; 0x13c2 <shift_left+0x570>
    13c6:	9a af       	std	Y+58, r25	; 0x3a
    13c8:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(250);
		PORTB = 0b00010000;
    13ca:	e8 e3       	ldi	r30, 0x38	; 56
    13cc:	f0 e0       	ldi	r31, 0x00	; 0
    13ce:	80 e1       	ldi	r24, 0x10	; 16
    13d0:	80 83       	st	Z, r24
    13d2:	80 e0       	ldi	r24, 0x00	; 0
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	aa e7       	ldi	r26, 0x7A	; 122
    13d8:	b3 e4       	ldi	r27, 0x43	; 67
    13da:	8d ab       	std	Y+53, r24	; 0x35
    13dc:	9e ab       	std	Y+54, r25	; 0x36
    13de:	af ab       	std	Y+55, r26	; 0x37
    13e0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13e2:	6d a9       	ldd	r22, Y+53	; 0x35
    13e4:	7e a9       	ldd	r23, Y+54	; 0x36
    13e6:	8f a9       	ldd	r24, Y+55	; 0x37
    13e8:	98 ad       	ldd	r25, Y+56	; 0x38
    13ea:	20 e0       	ldi	r18, 0x00	; 0
    13ec:	30 e0       	ldi	r19, 0x00	; 0
    13ee:	4a ef       	ldi	r20, 0xFA	; 250
    13f0:	54 e4       	ldi	r21, 0x44	; 68
    13f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13f6:	dc 01       	movw	r26, r24
    13f8:	cb 01       	movw	r24, r22
    13fa:	89 ab       	std	Y+49, r24	; 0x31
    13fc:	9a ab       	std	Y+50, r25	; 0x32
    13fe:	ab ab       	std	Y+51, r26	; 0x33
    1400:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1402:	69 a9       	ldd	r22, Y+49	; 0x31
    1404:	7a a9       	ldd	r23, Y+50	; 0x32
    1406:	8b a9       	ldd	r24, Y+51	; 0x33
    1408:	9c a9       	ldd	r25, Y+52	; 0x34
    140a:	20 e0       	ldi	r18, 0x00	; 0
    140c:	30 e0       	ldi	r19, 0x00	; 0
    140e:	40 e8       	ldi	r20, 0x80	; 128
    1410:	5f e3       	ldi	r21, 0x3F	; 63
    1412:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1416:	88 23       	and	r24, r24
    1418:	2c f4       	brge	.+10     	; 0x1424 <shift_left+0x5d2>
		__ticks = 1;
    141a:	81 e0       	ldi	r24, 0x01	; 1
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	98 ab       	std	Y+48, r25	; 0x30
    1420:	8f a7       	std	Y+47, r24	; 0x2f
    1422:	3f c0       	rjmp	.+126    	; 0x14a2 <shift_left+0x650>
	else if (__tmp > 65535)
    1424:	69 a9       	ldd	r22, Y+49	; 0x31
    1426:	7a a9       	ldd	r23, Y+50	; 0x32
    1428:	8b a9       	ldd	r24, Y+51	; 0x33
    142a:	9c a9       	ldd	r25, Y+52	; 0x34
    142c:	20 e0       	ldi	r18, 0x00	; 0
    142e:	3f ef       	ldi	r19, 0xFF	; 255
    1430:	4f e7       	ldi	r20, 0x7F	; 127
    1432:	57 e4       	ldi	r21, 0x47	; 71
    1434:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1438:	18 16       	cp	r1, r24
    143a:	4c f5       	brge	.+82     	; 0x148e <shift_left+0x63c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    143c:	6d a9       	ldd	r22, Y+53	; 0x35
    143e:	7e a9       	ldd	r23, Y+54	; 0x36
    1440:	8f a9       	ldd	r24, Y+55	; 0x37
    1442:	98 ad       	ldd	r25, Y+56	; 0x38
    1444:	20 e0       	ldi	r18, 0x00	; 0
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	40 e2       	ldi	r20, 0x20	; 32
    144a:	51 e4       	ldi	r21, 0x41	; 65
    144c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1450:	dc 01       	movw	r26, r24
    1452:	cb 01       	movw	r24, r22
    1454:	bc 01       	movw	r22, r24
    1456:	cd 01       	movw	r24, r26
    1458:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    145c:	dc 01       	movw	r26, r24
    145e:	cb 01       	movw	r24, r22
    1460:	98 ab       	std	Y+48, r25	; 0x30
    1462:	8f a7       	std	Y+47, r24	; 0x2f
    1464:	0f c0       	rjmp	.+30     	; 0x1484 <shift_left+0x632>
    1466:	88 ec       	ldi	r24, 0xC8	; 200
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	9e a7       	std	Y+46, r25	; 0x2e
    146c:	8d a7       	std	Y+45, r24	; 0x2d
    146e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1470:	9e a5       	ldd	r25, Y+46	; 0x2e
    1472:	01 97       	sbiw	r24, 0x01	; 1
    1474:	f1 f7       	brne	.-4      	; 0x1472 <shift_left+0x620>
    1476:	9e a7       	std	Y+46, r25	; 0x2e
    1478:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    147a:	8f a5       	ldd	r24, Y+47	; 0x2f
    147c:	98 a9       	ldd	r25, Y+48	; 0x30
    147e:	01 97       	sbiw	r24, 0x01	; 1
    1480:	98 ab       	std	Y+48, r25	; 0x30
    1482:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1484:	8f a5       	ldd	r24, Y+47	; 0x2f
    1486:	98 a9       	ldd	r25, Y+48	; 0x30
    1488:	00 97       	sbiw	r24, 0x00	; 0
    148a:	69 f7       	brne	.-38     	; 0x1466 <shift_left+0x614>
    148c:	14 c0       	rjmp	.+40     	; 0x14b6 <shift_left+0x664>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    148e:	69 a9       	ldd	r22, Y+49	; 0x31
    1490:	7a a9       	ldd	r23, Y+50	; 0x32
    1492:	8b a9       	ldd	r24, Y+51	; 0x33
    1494:	9c a9       	ldd	r25, Y+52	; 0x34
    1496:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    149a:	dc 01       	movw	r26, r24
    149c:	cb 01       	movw	r24, r22
    149e:	98 ab       	std	Y+48, r25	; 0x30
    14a0:	8f a7       	std	Y+47, r24	; 0x2f
    14a2:	8f a5       	ldd	r24, Y+47	; 0x2f
    14a4:	98 a9       	ldd	r25, Y+48	; 0x30
    14a6:	9c a7       	std	Y+44, r25	; 0x2c
    14a8:	8b a7       	std	Y+43, r24	; 0x2b
    14aa:	8b a5       	ldd	r24, Y+43	; 0x2b
    14ac:	9c a5       	ldd	r25, Y+44	; 0x2c
    14ae:	01 97       	sbiw	r24, 0x01	; 1
    14b0:	f1 f7       	brne	.-4      	; 0x14ae <shift_left+0x65c>
    14b2:	9c a7       	std	Y+44, r25	; 0x2c
    14b4:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(250);
		PORTB = 0b00100000;
    14b6:	e8 e3       	ldi	r30, 0x38	; 56
    14b8:	f0 e0       	ldi	r31, 0x00	; 0
    14ba:	80 e2       	ldi	r24, 0x20	; 32
    14bc:	80 83       	st	Z, r24
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	aa e7       	ldi	r26, 0x7A	; 122
    14c4:	b3 e4       	ldi	r27, 0x43	; 67
    14c6:	8f a3       	std	Y+39, r24	; 0x27
    14c8:	98 a7       	std	Y+40, r25	; 0x28
    14ca:	a9 a7       	std	Y+41, r26	; 0x29
    14cc:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14ce:	6f a1       	ldd	r22, Y+39	; 0x27
    14d0:	78 a5       	ldd	r23, Y+40	; 0x28
    14d2:	89 a5       	ldd	r24, Y+41	; 0x29
    14d4:	9a a5       	ldd	r25, Y+42	; 0x2a
    14d6:	20 e0       	ldi	r18, 0x00	; 0
    14d8:	30 e0       	ldi	r19, 0x00	; 0
    14da:	4a ef       	ldi	r20, 0xFA	; 250
    14dc:	54 e4       	ldi	r21, 0x44	; 68
    14de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14e2:	dc 01       	movw	r26, r24
    14e4:	cb 01       	movw	r24, r22
    14e6:	8b a3       	std	Y+35, r24	; 0x23
    14e8:	9c a3       	std	Y+36, r25	; 0x24
    14ea:	ad a3       	std	Y+37, r26	; 0x25
    14ec:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    14ee:	6b a1       	ldd	r22, Y+35	; 0x23
    14f0:	7c a1       	ldd	r23, Y+36	; 0x24
    14f2:	8d a1       	ldd	r24, Y+37	; 0x25
    14f4:	9e a1       	ldd	r25, Y+38	; 0x26
    14f6:	20 e0       	ldi	r18, 0x00	; 0
    14f8:	30 e0       	ldi	r19, 0x00	; 0
    14fa:	40 e8       	ldi	r20, 0x80	; 128
    14fc:	5f e3       	ldi	r21, 0x3F	; 63
    14fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1502:	88 23       	and	r24, r24
    1504:	2c f4       	brge	.+10     	; 0x1510 <shift_left+0x6be>
		__ticks = 1;
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	9a a3       	std	Y+34, r25	; 0x22
    150c:	89 a3       	std	Y+33, r24	; 0x21
    150e:	3f c0       	rjmp	.+126    	; 0x158e <shift_left+0x73c>
	else if (__tmp > 65535)
    1510:	6b a1       	ldd	r22, Y+35	; 0x23
    1512:	7c a1       	ldd	r23, Y+36	; 0x24
    1514:	8d a1       	ldd	r24, Y+37	; 0x25
    1516:	9e a1       	ldd	r25, Y+38	; 0x26
    1518:	20 e0       	ldi	r18, 0x00	; 0
    151a:	3f ef       	ldi	r19, 0xFF	; 255
    151c:	4f e7       	ldi	r20, 0x7F	; 127
    151e:	57 e4       	ldi	r21, 0x47	; 71
    1520:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1524:	18 16       	cp	r1, r24
    1526:	4c f5       	brge	.+82     	; 0x157a <shift_left+0x728>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1528:	6f a1       	ldd	r22, Y+39	; 0x27
    152a:	78 a5       	ldd	r23, Y+40	; 0x28
    152c:	89 a5       	ldd	r24, Y+41	; 0x29
    152e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1530:	20 e0       	ldi	r18, 0x00	; 0
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	40 e2       	ldi	r20, 0x20	; 32
    1536:	51 e4       	ldi	r21, 0x41	; 65
    1538:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    153c:	dc 01       	movw	r26, r24
    153e:	cb 01       	movw	r24, r22
    1540:	bc 01       	movw	r22, r24
    1542:	cd 01       	movw	r24, r26
    1544:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1548:	dc 01       	movw	r26, r24
    154a:	cb 01       	movw	r24, r22
    154c:	9a a3       	std	Y+34, r25	; 0x22
    154e:	89 a3       	std	Y+33, r24	; 0x21
    1550:	0f c0       	rjmp	.+30     	; 0x1570 <shift_left+0x71e>
    1552:	88 ec       	ldi	r24, 0xC8	; 200
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	98 a3       	std	Y+32, r25	; 0x20
    1558:	8f 8f       	std	Y+31, r24	; 0x1f
    155a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    155c:	98 a1       	ldd	r25, Y+32	; 0x20
    155e:	01 97       	sbiw	r24, 0x01	; 1
    1560:	f1 f7       	brne	.-4      	; 0x155e <shift_left+0x70c>
    1562:	98 a3       	std	Y+32, r25	; 0x20
    1564:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1566:	89 a1       	ldd	r24, Y+33	; 0x21
    1568:	9a a1       	ldd	r25, Y+34	; 0x22
    156a:	01 97       	sbiw	r24, 0x01	; 1
    156c:	9a a3       	std	Y+34, r25	; 0x22
    156e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1570:	89 a1       	ldd	r24, Y+33	; 0x21
    1572:	9a a1       	ldd	r25, Y+34	; 0x22
    1574:	00 97       	sbiw	r24, 0x00	; 0
    1576:	69 f7       	brne	.-38     	; 0x1552 <shift_left+0x700>
    1578:	14 c0       	rjmp	.+40     	; 0x15a2 <shift_left+0x750>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    157a:	6b a1       	ldd	r22, Y+35	; 0x23
    157c:	7c a1       	ldd	r23, Y+36	; 0x24
    157e:	8d a1       	ldd	r24, Y+37	; 0x25
    1580:	9e a1       	ldd	r25, Y+38	; 0x26
    1582:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1586:	dc 01       	movw	r26, r24
    1588:	cb 01       	movw	r24, r22
    158a:	9a a3       	std	Y+34, r25	; 0x22
    158c:	89 a3       	std	Y+33, r24	; 0x21
    158e:	89 a1       	ldd	r24, Y+33	; 0x21
    1590:	9a a1       	ldd	r25, Y+34	; 0x22
    1592:	9e 8f       	std	Y+30, r25	; 0x1e
    1594:	8d 8f       	std	Y+29, r24	; 0x1d
    1596:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1598:	9e 8d       	ldd	r25, Y+30	; 0x1e
    159a:	01 97       	sbiw	r24, 0x01	; 1
    159c:	f1 f7       	brne	.-4      	; 0x159a <shift_left+0x748>
    159e:	9e 8f       	std	Y+30, r25	; 0x1e
    15a0:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(250);
		PORTB = 0b01000000;
    15a2:	e8 e3       	ldi	r30, 0x38	; 56
    15a4:	f0 e0       	ldi	r31, 0x00	; 0
    15a6:	80 e4       	ldi	r24, 0x40	; 64
    15a8:	80 83       	st	Z, r24
    15aa:	80 e0       	ldi	r24, 0x00	; 0
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	aa e7       	ldi	r26, 0x7A	; 122
    15b0:	b3 e4       	ldi	r27, 0x43	; 67
    15b2:	89 8f       	std	Y+25, r24	; 0x19
    15b4:	9a 8f       	std	Y+26, r25	; 0x1a
    15b6:	ab 8f       	std	Y+27, r26	; 0x1b
    15b8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15ba:	69 8d       	ldd	r22, Y+25	; 0x19
    15bc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    15be:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15c0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15c2:	20 e0       	ldi	r18, 0x00	; 0
    15c4:	30 e0       	ldi	r19, 0x00	; 0
    15c6:	4a ef       	ldi	r20, 0xFA	; 250
    15c8:	54 e4       	ldi	r21, 0x44	; 68
    15ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15ce:	dc 01       	movw	r26, r24
    15d0:	cb 01       	movw	r24, r22
    15d2:	8d 8b       	std	Y+21, r24	; 0x15
    15d4:	9e 8b       	std	Y+22, r25	; 0x16
    15d6:	af 8b       	std	Y+23, r26	; 0x17
    15d8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    15da:	6d 89       	ldd	r22, Y+21	; 0x15
    15dc:	7e 89       	ldd	r23, Y+22	; 0x16
    15de:	8f 89       	ldd	r24, Y+23	; 0x17
    15e0:	98 8d       	ldd	r25, Y+24	; 0x18
    15e2:	20 e0       	ldi	r18, 0x00	; 0
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	40 e8       	ldi	r20, 0x80	; 128
    15e8:	5f e3       	ldi	r21, 0x3F	; 63
    15ea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15ee:	88 23       	and	r24, r24
    15f0:	2c f4       	brge	.+10     	; 0x15fc <shift_left+0x7aa>
		__ticks = 1;
    15f2:	81 e0       	ldi	r24, 0x01	; 1
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	9c 8b       	std	Y+20, r25	; 0x14
    15f8:	8b 8b       	std	Y+19, r24	; 0x13
    15fa:	3f c0       	rjmp	.+126    	; 0x167a <shift_left+0x828>
	else if (__tmp > 65535)
    15fc:	6d 89       	ldd	r22, Y+21	; 0x15
    15fe:	7e 89       	ldd	r23, Y+22	; 0x16
    1600:	8f 89       	ldd	r24, Y+23	; 0x17
    1602:	98 8d       	ldd	r25, Y+24	; 0x18
    1604:	20 e0       	ldi	r18, 0x00	; 0
    1606:	3f ef       	ldi	r19, 0xFF	; 255
    1608:	4f e7       	ldi	r20, 0x7F	; 127
    160a:	57 e4       	ldi	r21, 0x47	; 71
    160c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1610:	18 16       	cp	r1, r24
    1612:	4c f5       	brge	.+82     	; 0x1666 <shift_left+0x814>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1614:	69 8d       	ldd	r22, Y+25	; 0x19
    1616:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1618:	8b 8d       	ldd	r24, Y+27	; 0x1b
    161a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    161c:	20 e0       	ldi	r18, 0x00	; 0
    161e:	30 e0       	ldi	r19, 0x00	; 0
    1620:	40 e2       	ldi	r20, 0x20	; 32
    1622:	51 e4       	ldi	r21, 0x41	; 65
    1624:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1628:	dc 01       	movw	r26, r24
    162a:	cb 01       	movw	r24, r22
    162c:	bc 01       	movw	r22, r24
    162e:	cd 01       	movw	r24, r26
    1630:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1634:	dc 01       	movw	r26, r24
    1636:	cb 01       	movw	r24, r22
    1638:	9c 8b       	std	Y+20, r25	; 0x14
    163a:	8b 8b       	std	Y+19, r24	; 0x13
    163c:	0f c0       	rjmp	.+30     	; 0x165c <shift_left+0x80a>
    163e:	88 ec       	ldi	r24, 0xC8	; 200
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	9a 8b       	std	Y+18, r25	; 0x12
    1644:	89 8b       	std	Y+17, r24	; 0x11
    1646:	89 89       	ldd	r24, Y+17	; 0x11
    1648:	9a 89       	ldd	r25, Y+18	; 0x12
    164a:	01 97       	sbiw	r24, 0x01	; 1
    164c:	f1 f7       	brne	.-4      	; 0x164a <shift_left+0x7f8>
    164e:	9a 8b       	std	Y+18, r25	; 0x12
    1650:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1652:	8b 89       	ldd	r24, Y+19	; 0x13
    1654:	9c 89       	ldd	r25, Y+20	; 0x14
    1656:	01 97       	sbiw	r24, 0x01	; 1
    1658:	9c 8b       	std	Y+20, r25	; 0x14
    165a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    165c:	8b 89       	ldd	r24, Y+19	; 0x13
    165e:	9c 89       	ldd	r25, Y+20	; 0x14
    1660:	00 97       	sbiw	r24, 0x00	; 0
    1662:	69 f7       	brne	.-38     	; 0x163e <shift_left+0x7ec>
    1664:	14 c0       	rjmp	.+40     	; 0x168e <shift_left+0x83c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1666:	6d 89       	ldd	r22, Y+21	; 0x15
    1668:	7e 89       	ldd	r23, Y+22	; 0x16
    166a:	8f 89       	ldd	r24, Y+23	; 0x17
    166c:	98 8d       	ldd	r25, Y+24	; 0x18
    166e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1672:	dc 01       	movw	r26, r24
    1674:	cb 01       	movw	r24, r22
    1676:	9c 8b       	std	Y+20, r25	; 0x14
    1678:	8b 8b       	std	Y+19, r24	; 0x13
    167a:	8b 89       	ldd	r24, Y+19	; 0x13
    167c:	9c 89       	ldd	r25, Y+20	; 0x14
    167e:	98 8b       	std	Y+16, r25	; 0x10
    1680:	8f 87       	std	Y+15, r24	; 0x0f
    1682:	8f 85       	ldd	r24, Y+15	; 0x0f
    1684:	98 89       	ldd	r25, Y+16	; 0x10
    1686:	01 97       	sbiw	r24, 0x01	; 1
    1688:	f1 f7       	brne	.-4      	; 0x1686 <shift_left+0x834>
    168a:	98 8b       	std	Y+16, r25	; 0x10
    168c:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(250);
		PORTB = 0b10000000;
    168e:	e8 e3       	ldi	r30, 0x38	; 56
    1690:	f0 e0       	ldi	r31, 0x00	; 0
    1692:	80 e8       	ldi	r24, 0x80	; 128
    1694:	80 83       	st	Z, r24
    1696:	80 e0       	ldi	r24, 0x00	; 0
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	aa e7       	ldi	r26, 0x7A	; 122
    169c:	b3 e4       	ldi	r27, 0x43	; 67
    169e:	8b 87       	std	Y+11, r24	; 0x0b
    16a0:	9c 87       	std	Y+12, r25	; 0x0c
    16a2:	ad 87       	std	Y+13, r26	; 0x0d
    16a4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    16a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    16aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    16ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    16ae:	20 e0       	ldi	r18, 0x00	; 0
    16b0:	30 e0       	ldi	r19, 0x00	; 0
    16b2:	4a ef       	ldi	r20, 0xFA	; 250
    16b4:	54 e4       	ldi	r21, 0x44	; 68
    16b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16ba:	dc 01       	movw	r26, r24
    16bc:	cb 01       	movw	r24, r22
    16be:	8f 83       	std	Y+7, r24	; 0x07
    16c0:	98 87       	std	Y+8, r25	; 0x08
    16c2:	a9 87       	std	Y+9, r26	; 0x09
    16c4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    16c6:	6f 81       	ldd	r22, Y+7	; 0x07
    16c8:	78 85       	ldd	r23, Y+8	; 0x08
    16ca:	89 85       	ldd	r24, Y+9	; 0x09
    16cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    16ce:	20 e0       	ldi	r18, 0x00	; 0
    16d0:	30 e0       	ldi	r19, 0x00	; 0
    16d2:	40 e8       	ldi	r20, 0x80	; 128
    16d4:	5f e3       	ldi	r21, 0x3F	; 63
    16d6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16da:	88 23       	and	r24, r24
    16dc:	2c f4       	brge	.+10     	; 0x16e8 <shift_left+0x896>
		__ticks = 1;
    16de:	81 e0       	ldi	r24, 0x01	; 1
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	9e 83       	std	Y+6, r25	; 0x06
    16e4:	8d 83       	std	Y+5, r24	; 0x05
    16e6:	3f c0       	rjmp	.+126    	; 0x1766 <shift_left+0x914>
	else if (__tmp > 65535)
    16e8:	6f 81       	ldd	r22, Y+7	; 0x07
    16ea:	78 85       	ldd	r23, Y+8	; 0x08
    16ec:	89 85       	ldd	r24, Y+9	; 0x09
    16ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    16f0:	20 e0       	ldi	r18, 0x00	; 0
    16f2:	3f ef       	ldi	r19, 0xFF	; 255
    16f4:	4f e7       	ldi	r20, 0x7F	; 127
    16f6:	57 e4       	ldi	r21, 0x47	; 71
    16f8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16fc:	18 16       	cp	r1, r24
    16fe:	4c f5       	brge	.+82     	; 0x1752 <shift_left+0x900>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1700:	6b 85       	ldd	r22, Y+11	; 0x0b
    1702:	7c 85       	ldd	r23, Y+12	; 0x0c
    1704:	8d 85       	ldd	r24, Y+13	; 0x0d
    1706:	9e 85       	ldd	r25, Y+14	; 0x0e
    1708:	20 e0       	ldi	r18, 0x00	; 0
    170a:	30 e0       	ldi	r19, 0x00	; 0
    170c:	40 e2       	ldi	r20, 0x20	; 32
    170e:	51 e4       	ldi	r21, 0x41	; 65
    1710:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1714:	dc 01       	movw	r26, r24
    1716:	cb 01       	movw	r24, r22
    1718:	bc 01       	movw	r22, r24
    171a:	cd 01       	movw	r24, r26
    171c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1720:	dc 01       	movw	r26, r24
    1722:	cb 01       	movw	r24, r22
    1724:	9e 83       	std	Y+6, r25	; 0x06
    1726:	8d 83       	std	Y+5, r24	; 0x05
    1728:	0f c0       	rjmp	.+30     	; 0x1748 <shift_left+0x8f6>
    172a:	88 ec       	ldi	r24, 0xC8	; 200
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	9c 83       	std	Y+4, r25	; 0x04
    1730:	8b 83       	std	Y+3, r24	; 0x03
    1732:	8b 81       	ldd	r24, Y+3	; 0x03
    1734:	9c 81       	ldd	r25, Y+4	; 0x04
    1736:	01 97       	sbiw	r24, 0x01	; 1
    1738:	f1 f7       	brne	.-4      	; 0x1736 <shift_left+0x8e4>
    173a:	9c 83       	std	Y+4, r25	; 0x04
    173c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    173e:	8d 81       	ldd	r24, Y+5	; 0x05
    1740:	9e 81       	ldd	r25, Y+6	; 0x06
    1742:	01 97       	sbiw	r24, 0x01	; 1
    1744:	9e 83       	std	Y+6, r25	; 0x06
    1746:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1748:	8d 81       	ldd	r24, Y+5	; 0x05
    174a:	9e 81       	ldd	r25, Y+6	; 0x06
    174c:	00 97       	sbiw	r24, 0x00	; 0
    174e:	69 f7       	brne	.-38     	; 0x172a <shift_left+0x8d8>
    1750:	14 c0       	rjmp	.+40     	; 0x177a <shift_left+0x928>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1752:	6f 81       	ldd	r22, Y+7	; 0x07
    1754:	78 85       	ldd	r23, Y+8	; 0x08
    1756:	89 85       	ldd	r24, Y+9	; 0x09
    1758:	9a 85       	ldd	r25, Y+10	; 0x0a
    175a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    175e:	dc 01       	movw	r26, r24
    1760:	cb 01       	movw	r24, r22
    1762:	9e 83       	std	Y+6, r25	; 0x06
    1764:	8d 83       	std	Y+5, r24	; 0x05
    1766:	8d 81       	ldd	r24, Y+5	; 0x05
    1768:	9e 81       	ldd	r25, Y+6	; 0x06
    176a:	9a 83       	std	Y+2, r25	; 0x02
    176c:	89 83       	std	Y+1, r24	; 0x01
    176e:	89 81       	ldd	r24, Y+1	; 0x01
    1770:	9a 81       	ldd	r25, Y+2	; 0x02
    1772:	01 97       	sbiw	r24, 0x01	; 1
    1774:	f1 f7       	brne	.-4      	; 0x1772 <shift_left+0x920>
    1776:	9a 83       	std	Y+2, r25	; 0x02
    1778:	89 83       	std	Y+1, r24	; 0x01
	}
}

void shift_left()
{
	while(GET_BIT(PINC, 1)==0)
    177a:	e3 e3       	ldi	r30, 0x33	; 51
    177c:	f0 e0       	ldi	r31, 0x00	; 0
    177e:	80 81       	ld	r24, Z
    1780:	86 95       	lsr	r24
    1782:	88 2f       	mov	r24, r24
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	81 70       	andi	r24, 0x01	; 1
    1788:	90 70       	andi	r25, 0x00	; 0
    178a:	00 97       	sbiw	r24, 0x00	; 0
    178c:	09 f4       	brne	.+2      	; 0x1790 <shift_left+0x93e>
    178e:	6f cb       	rjmp	.-2338   	; 0xe6e <shift_left+0x1c>
		PORTB = 0b01000000;
		_delay_ms(250);
		PORTB = 0b10000000;
		_delay_ms(250);
	}
}
    1790:	c0 59       	subi	r28, 0x90	; 144
    1792:	df 4f       	sbci	r29, 0xFF	; 255
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	f8 94       	cli
    1798:	de bf       	out	0x3e, r29	; 62
    179a:	0f be       	out	0x3f, r0	; 63
    179c:	cd bf       	out	0x3d, r28	; 61
    179e:	cf 91       	pop	r28
    17a0:	df 91       	pop	r29
    17a2:	1f 91       	pop	r17
    17a4:	0f 91       	pop	r16
    17a6:	08 95       	ret

000017a8 <shift_right>:

void shift_right()
{
    17a8:	0f 93       	push	r16
    17aa:	1f 93       	push	r17
    17ac:	df 93       	push	r29
    17ae:	cf 93       	push	r28
    17b0:	cd b7       	in	r28, 0x3d	; 61
    17b2:	de b7       	in	r29, 0x3e	; 62
    17b4:	c0 57       	subi	r28, 0x70	; 112
    17b6:	d0 40       	sbci	r29, 0x00	; 0
    17b8:	0f b6       	in	r0, 0x3f	; 63
    17ba:	f8 94       	cli
    17bc:	de bf       	out	0x3e, r29	; 62
    17be:	0f be       	out	0x3f, r0	; 63
    17c0:	cd bf       	out	0x3d, r28	; 61
    17c2:	86 c4       	rjmp	.+2316   	; 0x20d0 <shift_right+0x928>
	while(GET_BIT(PINC, 2)==0)
	{
		PORTB = 0b10000000;
    17c4:	e8 e3       	ldi	r30, 0x38	; 56
    17c6:	f0 e0       	ldi	r31, 0x00	; 0
    17c8:	80 e8       	ldi	r24, 0x80	; 128
    17ca:	80 83       	st	Z, r24
    17cc:	fe 01       	movw	r30, r28
    17ce:	e3 59       	subi	r30, 0x93	; 147
    17d0:	ff 4f       	sbci	r31, 0xFF	; 255
    17d2:	80 e0       	ldi	r24, 0x00	; 0
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	aa e7       	ldi	r26, 0x7A	; 122
    17d8:	b3 e4       	ldi	r27, 0x43	; 67
    17da:	80 83       	st	Z, r24
    17dc:	91 83       	std	Z+1, r25	; 0x01
    17de:	a2 83       	std	Z+2, r26	; 0x02
    17e0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17e2:	8e 01       	movw	r16, r28
    17e4:	07 59       	subi	r16, 0x97	; 151
    17e6:	1f 4f       	sbci	r17, 0xFF	; 255
    17e8:	fe 01       	movw	r30, r28
    17ea:	e3 59       	subi	r30, 0x93	; 147
    17ec:	ff 4f       	sbci	r31, 0xFF	; 255
    17ee:	60 81       	ld	r22, Z
    17f0:	71 81       	ldd	r23, Z+1	; 0x01
    17f2:	82 81       	ldd	r24, Z+2	; 0x02
    17f4:	93 81       	ldd	r25, Z+3	; 0x03
    17f6:	20 e0       	ldi	r18, 0x00	; 0
    17f8:	30 e0       	ldi	r19, 0x00	; 0
    17fa:	4a ef       	ldi	r20, 0xFA	; 250
    17fc:	54 e4       	ldi	r21, 0x44	; 68
    17fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1802:	dc 01       	movw	r26, r24
    1804:	cb 01       	movw	r24, r22
    1806:	f8 01       	movw	r30, r16
    1808:	80 83       	st	Z, r24
    180a:	91 83       	std	Z+1, r25	; 0x01
    180c:	a2 83       	std	Z+2, r26	; 0x02
    180e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1810:	fe 01       	movw	r30, r28
    1812:	e7 59       	subi	r30, 0x97	; 151
    1814:	ff 4f       	sbci	r31, 0xFF	; 255
    1816:	60 81       	ld	r22, Z
    1818:	71 81       	ldd	r23, Z+1	; 0x01
    181a:	82 81       	ldd	r24, Z+2	; 0x02
    181c:	93 81       	ldd	r25, Z+3	; 0x03
    181e:	20 e0       	ldi	r18, 0x00	; 0
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	40 e8       	ldi	r20, 0x80	; 128
    1824:	5f e3       	ldi	r21, 0x3F	; 63
    1826:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    182a:	88 23       	and	r24, r24
    182c:	44 f4       	brge	.+16     	; 0x183e <shift_right+0x96>
		__ticks = 1;
    182e:	fe 01       	movw	r30, r28
    1830:	e9 59       	subi	r30, 0x99	; 153
    1832:	ff 4f       	sbci	r31, 0xFF	; 255
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	90 e0       	ldi	r25, 0x00	; 0
    1838:	91 83       	std	Z+1, r25	; 0x01
    183a:	80 83       	st	Z, r24
    183c:	64 c0       	rjmp	.+200    	; 0x1906 <shift_right+0x15e>
	else if (__tmp > 65535)
    183e:	fe 01       	movw	r30, r28
    1840:	e7 59       	subi	r30, 0x97	; 151
    1842:	ff 4f       	sbci	r31, 0xFF	; 255
    1844:	60 81       	ld	r22, Z
    1846:	71 81       	ldd	r23, Z+1	; 0x01
    1848:	82 81       	ldd	r24, Z+2	; 0x02
    184a:	93 81       	ldd	r25, Z+3	; 0x03
    184c:	20 e0       	ldi	r18, 0x00	; 0
    184e:	3f ef       	ldi	r19, 0xFF	; 255
    1850:	4f e7       	ldi	r20, 0x7F	; 127
    1852:	57 e4       	ldi	r21, 0x47	; 71
    1854:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1858:	18 16       	cp	r1, r24
    185a:	0c f0       	brlt	.+2      	; 0x185e <shift_right+0xb6>
    185c:	43 c0       	rjmp	.+134    	; 0x18e4 <shift_right+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    185e:	fe 01       	movw	r30, r28
    1860:	e3 59       	subi	r30, 0x93	; 147
    1862:	ff 4f       	sbci	r31, 0xFF	; 255
    1864:	60 81       	ld	r22, Z
    1866:	71 81       	ldd	r23, Z+1	; 0x01
    1868:	82 81       	ldd	r24, Z+2	; 0x02
    186a:	93 81       	ldd	r25, Z+3	; 0x03
    186c:	20 e0       	ldi	r18, 0x00	; 0
    186e:	30 e0       	ldi	r19, 0x00	; 0
    1870:	40 e2       	ldi	r20, 0x20	; 32
    1872:	51 e4       	ldi	r21, 0x41	; 65
    1874:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1878:	dc 01       	movw	r26, r24
    187a:	cb 01       	movw	r24, r22
    187c:	8e 01       	movw	r16, r28
    187e:	09 59       	subi	r16, 0x99	; 153
    1880:	1f 4f       	sbci	r17, 0xFF	; 255
    1882:	bc 01       	movw	r22, r24
    1884:	cd 01       	movw	r24, r26
    1886:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    188a:	dc 01       	movw	r26, r24
    188c:	cb 01       	movw	r24, r22
    188e:	f8 01       	movw	r30, r16
    1890:	91 83       	std	Z+1, r25	; 0x01
    1892:	80 83       	st	Z, r24
    1894:	1f c0       	rjmp	.+62     	; 0x18d4 <shift_right+0x12c>
    1896:	fe 01       	movw	r30, r28
    1898:	eb 59       	subi	r30, 0x9B	; 155
    189a:	ff 4f       	sbci	r31, 0xFF	; 255
    189c:	88 ec       	ldi	r24, 0xC8	; 200
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	91 83       	std	Z+1, r25	; 0x01
    18a2:	80 83       	st	Z, r24
    18a4:	fe 01       	movw	r30, r28
    18a6:	eb 59       	subi	r30, 0x9B	; 155
    18a8:	ff 4f       	sbci	r31, 0xFF	; 255
    18aa:	80 81       	ld	r24, Z
    18ac:	91 81       	ldd	r25, Z+1	; 0x01
    18ae:	01 97       	sbiw	r24, 0x01	; 1
    18b0:	f1 f7       	brne	.-4      	; 0x18ae <shift_right+0x106>
    18b2:	fe 01       	movw	r30, r28
    18b4:	eb 59       	subi	r30, 0x9B	; 155
    18b6:	ff 4f       	sbci	r31, 0xFF	; 255
    18b8:	91 83       	std	Z+1, r25	; 0x01
    18ba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18bc:	de 01       	movw	r26, r28
    18be:	a9 59       	subi	r26, 0x99	; 153
    18c0:	bf 4f       	sbci	r27, 0xFF	; 255
    18c2:	fe 01       	movw	r30, r28
    18c4:	e9 59       	subi	r30, 0x99	; 153
    18c6:	ff 4f       	sbci	r31, 0xFF	; 255
    18c8:	80 81       	ld	r24, Z
    18ca:	91 81       	ldd	r25, Z+1	; 0x01
    18cc:	01 97       	sbiw	r24, 0x01	; 1
    18ce:	11 96       	adiw	r26, 0x01	; 1
    18d0:	9c 93       	st	X, r25
    18d2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18d4:	fe 01       	movw	r30, r28
    18d6:	e9 59       	subi	r30, 0x99	; 153
    18d8:	ff 4f       	sbci	r31, 0xFF	; 255
    18da:	80 81       	ld	r24, Z
    18dc:	91 81       	ldd	r25, Z+1	; 0x01
    18de:	00 97       	sbiw	r24, 0x00	; 0
    18e0:	d1 f6       	brne	.-76     	; 0x1896 <shift_right+0xee>
    18e2:	27 c0       	rjmp	.+78     	; 0x1932 <shift_right+0x18a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18e4:	8e 01       	movw	r16, r28
    18e6:	09 59       	subi	r16, 0x99	; 153
    18e8:	1f 4f       	sbci	r17, 0xFF	; 255
    18ea:	fe 01       	movw	r30, r28
    18ec:	e7 59       	subi	r30, 0x97	; 151
    18ee:	ff 4f       	sbci	r31, 0xFF	; 255
    18f0:	60 81       	ld	r22, Z
    18f2:	71 81       	ldd	r23, Z+1	; 0x01
    18f4:	82 81       	ldd	r24, Z+2	; 0x02
    18f6:	93 81       	ldd	r25, Z+3	; 0x03
    18f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18fc:	dc 01       	movw	r26, r24
    18fe:	cb 01       	movw	r24, r22
    1900:	f8 01       	movw	r30, r16
    1902:	91 83       	std	Z+1, r25	; 0x01
    1904:	80 83       	st	Z, r24
    1906:	de 01       	movw	r26, r28
    1908:	ad 59       	subi	r26, 0x9D	; 157
    190a:	bf 4f       	sbci	r27, 0xFF	; 255
    190c:	fe 01       	movw	r30, r28
    190e:	e9 59       	subi	r30, 0x99	; 153
    1910:	ff 4f       	sbci	r31, 0xFF	; 255
    1912:	80 81       	ld	r24, Z
    1914:	91 81       	ldd	r25, Z+1	; 0x01
    1916:	8d 93       	st	X+, r24
    1918:	9c 93       	st	X, r25
    191a:	fe 01       	movw	r30, r28
    191c:	ed 59       	subi	r30, 0x9D	; 157
    191e:	ff 4f       	sbci	r31, 0xFF	; 255
    1920:	80 81       	ld	r24, Z
    1922:	91 81       	ldd	r25, Z+1	; 0x01
    1924:	01 97       	sbiw	r24, 0x01	; 1
    1926:	f1 f7       	brne	.-4      	; 0x1924 <shift_right+0x17c>
    1928:	fe 01       	movw	r30, r28
    192a:	ed 59       	subi	r30, 0x9D	; 157
    192c:	ff 4f       	sbci	r31, 0xFF	; 255
    192e:	91 83       	std	Z+1, r25	; 0x01
    1930:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b01000000;
    1932:	e8 e3       	ldi	r30, 0x38	; 56
    1934:	f0 e0       	ldi	r31, 0x00	; 0
    1936:	80 e4       	ldi	r24, 0x40	; 64
    1938:	80 83       	st	Z, r24
    193a:	fe 01       	movw	r30, r28
    193c:	e1 5a       	subi	r30, 0xA1	; 161
    193e:	ff 4f       	sbci	r31, 0xFF	; 255
    1940:	80 e0       	ldi	r24, 0x00	; 0
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	aa e7       	ldi	r26, 0x7A	; 122
    1946:	b3 e4       	ldi	r27, 0x43	; 67
    1948:	80 83       	st	Z, r24
    194a:	91 83       	std	Z+1, r25	; 0x01
    194c:	a2 83       	std	Z+2, r26	; 0x02
    194e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1950:	8e 01       	movw	r16, r28
    1952:	05 5a       	subi	r16, 0xA5	; 165
    1954:	1f 4f       	sbci	r17, 0xFF	; 255
    1956:	fe 01       	movw	r30, r28
    1958:	e1 5a       	subi	r30, 0xA1	; 161
    195a:	ff 4f       	sbci	r31, 0xFF	; 255
    195c:	60 81       	ld	r22, Z
    195e:	71 81       	ldd	r23, Z+1	; 0x01
    1960:	82 81       	ldd	r24, Z+2	; 0x02
    1962:	93 81       	ldd	r25, Z+3	; 0x03
    1964:	20 e0       	ldi	r18, 0x00	; 0
    1966:	30 e0       	ldi	r19, 0x00	; 0
    1968:	4a ef       	ldi	r20, 0xFA	; 250
    196a:	54 e4       	ldi	r21, 0x44	; 68
    196c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1970:	dc 01       	movw	r26, r24
    1972:	cb 01       	movw	r24, r22
    1974:	f8 01       	movw	r30, r16
    1976:	80 83       	st	Z, r24
    1978:	91 83       	std	Z+1, r25	; 0x01
    197a:	a2 83       	std	Z+2, r26	; 0x02
    197c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    197e:	fe 01       	movw	r30, r28
    1980:	e5 5a       	subi	r30, 0xA5	; 165
    1982:	ff 4f       	sbci	r31, 0xFF	; 255
    1984:	60 81       	ld	r22, Z
    1986:	71 81       	ldd	r23, Z+1	; 0x01
    1988:	82 81       	ldd	r24, Z+2	; 0x02
    198a:	93 81       	ldd	r25, Z+3	; 0x03
    198c:	20 e0       	ldi	r18, 0x00	; 0
    198e:	30 e0       	ldi	r19, 0x00	; 0
    1990:	40 e8       	ldi	r20, 0x80	; 128
    1992:	5f e3       	ldi	r21, 0x3F	; 63
    1994:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1998:	88 23       	and	r24, r24
    199a:	44 f4       	brge	.+16     	; 0x19ac <shift_right+0x204>
		__ticks = 1;
    199c:	fe 01       	movw	r30, r28
    199e:	e7 5a       	subi	r30, 0xA7	; 167
    19a0:	ff 4f       	sbci	r31, 0xFF	; 255
    19a2:	81 e0       	ldi	r24, 0x01	; 1
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	91 83       	std	Z+1, r25	; 0x01
    19a8:	80 83       	st	Z, r24
    19aa:	64 c0       	rjmp	.+200    	; 0x1a74 <shift_right+0x2cc>
	else if (__tmp > 65535)
    19ac:	fe 01       	movw	r30, r28
    19ae:	e5 5a       	subi	r30, 0xA5	; 165
    19b0:	ff 4f       	sbci	r31, 0xFF	; 255
    19b2:	60 81       	ld	r22, Z
    19b4:	71 81       	ldd	r23, Z+1	; 0x01
    19b6:	82 81       	ldd	r24, Z+2	; 0x02
    19b8:	93 81       	ldd	r25, Z+3	; 0x03
    19ba:	20 e0       	ldi	r18, 0x00	; 0
    19bc:	3f ef       	ldi	r19, 0xFF	; 255
    19be:	4f e7       	ldi	r20, 0x7F	; 127
    19c0:	57 e4       	ldi	r21, 0x47	; 71
    19c2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19c6:	18 16       	cp	r1, r24
    19c8:	0c f0       	brlt	.+2      	; 0x19cc <shift_right+0x224>
    19ca:	43 c0       	rjmp	.+134    	; 0x1a52 <shift_right+0x2aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19cc:	fe 01       	movw	r30, r28
    19ce:	e1 5a       	subi	r30, 0xA1	; 161
    19d0:	ff 4f       	sbci	r31, 0xFF	; 255
    19d2:	60 81       	ld	r22, Z
    19d4:	71 81       	ldd	r23, Z+1	; 0x01
    19d6:	82 81       	ldd	r24, Z+2	; 0x02
    19d8:	93 81       	ldd	r25, Z+3	; 0x03
    19da:	20 e0       	ldi	r18, 0x00	; 0
    19dc:	30 e0       	ldi	r19, 0x00	; 0
    19de:	40 e2       	ldi	r20, 0x20	; 32
    19e0:	51 e4       	ldi	r21, 0x41	; 65
    19e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19e6:	dc 01       	movw	r26, r24
    19e8:	cb 01       	movw	r24, r22
    19ea:	8e 01       	movw	r16, r28
    19ec:	07 5a       	subi	r16, 0xA7	; 167
    19ee:	1f 4f       	sbci	r17, 0xFF	; 255
    19f0:	bc 01       	movw	r22, r24
    19f2:	cd 01       	movw	r24, r26
    19f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19f8:	dc 01       	movw	r26, r24
    19fa:	cb 01       	movw	r24, r22
    19fc:	f8 01       	movw	r30, r16
    19fe:	91 83       	std	Z+1, r25	; 0x01
    1a00:	80 83       	st	Z, r24
    1a02:	1f c0       	rjmp	.+62     	; 0x1a42 <shift_right+0x29a>
    1a04:	fe 01       	movw	r30, r28
    1a06:	e9 5a       	subi	r30, 0xA9	; 169
    1a08:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0a:	88 ec       	ldi	r24, 0xC8	; 200
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	91 83       	std	Z+1, r25	; 0x01
    1a10:	80 83       	st	Z, r24
    1a12:	fe 01       	movw	r30, r28
    1a14:	e9 5a       	subi	r30, 0xA9	; 169
    1a16:	ff 4f       	sbci	r31, 0xFF	; 255
    1a18:	80 81       	ld	r24, Z
    1a1a:	91 81       	ldd	r25, Z+1	; 0x01
    1a1c:	01 97       	sbiw	r24, 0x01	; 1
    1a1e:	f1 f7       	brne	.-4      	; 0x1a1c <shift_right+0x274>
    1a20:	fe 01       	movw	r30, r28
    1a22:	e9 5a       	subi	r30, 0xA9	; 169
    1a24:	ff 4f       	sbci	r31, 0xFF	; 255
    1a26:	91 83       	std	Z+1, r25	; 0x01
    1a28:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a2a:	de 01       	movw	r26, r28
    1a2c:	a7 5a       	subi	r26, 0xA7	; 167
    1a2e:	bf 4f       	sbci	r27, 0xFF	; 255
    1a30:	fe 01       	movw	r30, r28
    1a32:	e7 5a       	subi	r30, 0xA7	; 167
    1a34:	ff 4f       	sbci	r31, 0xFF	; 255
    1a36:	80 81       	ld	r24, Z
    1a38:	91 81       	ldd	r25, Z+1	; 0x01
    1a3a:	01 97       	sbiw	r24, 0x01	; 1
    1a3c:	11 96       	adiw	r26, 0x01	; 1
    1a3e:	9c 93       	st	X, r25
    1a40:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a42:	fe 01       	movw	r30, r28
    1a44:	e7 5a       	subi	r30, 0xA7	; 167
    1a46:	ff 4f       	sbci	r31, 0xFF	; 255
    1a48:	80 81       	ld	r24, Z
    1a4a:	91 81       	ldd	r25, Z+1	; 0x01
    1a4c:	00 97       	sbiw	r24, 0x00	; 0
    1a4e:	d1 f6       	brne	.-76     	; 0x1a04 <shift_right+0x25c>
    1a50:	27 c0       	rjmp	.+78     	; 0x1aa0 <shift_right+0x2f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a52:	8e 01       	movw	r16, r28
    1a54:	07 5a       	subi	r16, 0xA7	; 167
    1a56:	1f 4f       	sbci	r17, 0xFF	; 255
    1a58:	fe 01       	movw	r30, r28
    1a5a:	e5 5a       	subi	r30, 0xA5	; 165
    1a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a5e:	60 81       	ld	r22, Z
    1a60:	71 81       	ldd	r23, Z+1	; 0x01
    1a62:	82 81       	ldd	r24, Z+2	; 0x02
    1a64:	93 81       	ldd	r25, Z+3	; 0x03
    1a66:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a6a:	dc 01       	movw	r26, r24
    1a6c:	cb 01       	movw	r24, r22
    1a6e:	f8 01       	movw	r30, r16
    1a70:	91 83       	std	Z+1, r25	; 0x01
    1a72:	80 83       	st	Z, r24
    1a74:	de 01       	movw	r26, r28
    1a76:	ab 5a       	subi	r26, 0xAB	; 171
    1a78:	bf 4f       	sbci	r27, 0xFF	; 255
    1a7a:	fe 01       	movw	r30, r28
    1a7c:	e7 5a       	subi	r30, 0xA7	; 167
    1a7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a80:	80 81       	ld	r24, Z
    1a82:	91 81       	ldd	r25, Z+1	; 0x01
    1a84:	8d 93       	st	X+, r24
    1a86:	9c 93       	st	X, r25
    1a88:	fe 01       	movw	r30, r28
    1a8a:	eb 5a       	subi	r30, 0xAB	; 171
    1a8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8e:	80 81       	ld	r24, Z
    1a90:	91 81       	ldd	r25, Z+1	; 0x01
    1a92:	01 97       	sbiw	r24, 0x01	; 1
    1a94:	f1 f7       	brne	.-4      	; 0x1a92 <shift_right+0x2ea>
    1a96:	fe 01       	movw	r30, r28
    1a98:	eb 5a       	subi	r30, 0xAB	; 171
    1a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a9c:	91 83       	std	Z+1, r25	; 0x01
    1a9e:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00100000;
    1aa0:	e8 e3       	ldi	r30, 0x38	; 56
    1aa2:	f0 e0       	ldi	r31, 0x00	; 0
    1aa4:	80 e2       	ldi	r24, 0x20	; 32
    1aa6:	80 83       	st	Z, r24
    1aa8:	fe 01       	movw	r30, r28
    1aaa:	ef 5a       	subi	r30, 0xAF	; 175
    1aac:	ff 4f       	sbci	r31, 0xFF	; 255
    1aae:	80 e0       	ldi	r24, 0x00	; 0
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	aa e7       	ldi	r26, 0x7A	; 122
    1ab4:	b3 e4       	ldi	r27, 0x43	; 67
    1ab6:	80 83       	st	Z, r24
    1ab8:	91 83       	std	Z+1, r25	; 0x01
    1aba:	a2 83       	std	Z+2, r26	; 0x02
    1abc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1abe:	8e 01       	movw	r16, r28
    1ac0:	03 5b       	subi	r16, 0xB3	; 179
    1ac2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac4:	fe 01       	movw	r30, r28
    1ac6:	ef 5a       	subi	r30, 0xAF	; 175
    1ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aca:	60 81       	ld	r22, Z
    1acc:	71 81       	ldd	r23, Z+1	; 0x01
    1ace:	82 81       	ldd	r24, Z+2	; 0x02
    1ad0:	93 81       	ldd	r25, Z+3	; 0x03
    1ad2:	20 e0       	ldi	r18, 0x00	; 0
    1ad4:	30 e0       	ldi	r19, 0x00	; 0
    1ad6:	4a ef       	ldi	r20, 0xFA	; 250
    1ad8:	54 e4       	ldi	r21, 0x44	; 68
    1ada:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ade:	dc 01       	movw	r26, r24
    1ae0:	cb 01       	movw	r24, r22
    1ae2:	f8 01       	movw	r30, r16
    1ae4:	80 83       	st	Z, r24
    1ae6:	91 83       	std	Z+1, r25	; 0x01
    1ae8:	a2 83       	std	Z+2, r26	; 0x02
    1aea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1aec:	fe 01       	movw	r30, r28
    1aee:	e3 5b       	subi	r30, 0xB3	; 179
    1af0:	ff 4f       	sbci	r31, 0xFF	; 255
    1af2:	60 81       	ld	r22, Z
    1af4:	71 81       	ldd	r23, Z+1	; 0x01
    1af6:	82 81       	ldd	r24, Z+2	; 0x02
    1af8:	93 81       	ldd	r25, Z+3	; 0x03
    1afa:	20 e0       	ldi	r18, 0x00	; 0
    1afc:	30 e0       	ldi	r19, 0x00	; 0
    1afe:	40 e8       	ldi	r20, 0x80	; 128
    1b00:	5f e3       	ldi	r21, 0x3F	; 63
    1b02:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b06:	88 23       	and	r24, r24
    1b08:	44 f4       	brge	.+16     	; 0x1b1a <shift_right+0x372>
		__ticks = 1;
    1b0a:	fe 01       	movw	r30, r28
    1b0c:	e5 5b       	subi	r30, 0xB5	; 181
    1b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b10:	81 e0       	ldi	r24, 0x01	; 1
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	91 83       	std	Z+1, r25	; 0x01
    1b16:	80 83       	st	Z, r24
    1b18:	64 c0       	rjmp	.+200    	; 0x1be2 <shift_right+0x43a>
	else if (__tmp > 65535)
    1b1a:	fe 01       	movw	r30, r28
    1b1c:	e3 5b       	subi	r30, 0xB3	; 179
    1b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b20:	60 81       	ld	r22, Z
    1b22:	71 81       	ldd	r23, Z+1	; 0x01
    1b24:	82 81       	ldd	r24, Z+2	; 0x02
    1b26:	93 81       	ldd	r25, Z+3	; 0x03
    1b28:	20 e0       	ldi	r18, 0x00	; 0
    1b2a:	3f ef       	ldi	r19, 0xFF	; 255
    1b2c:	4f e7       	ldi	r20, 0x7F	; 127
    1b2e:	57 e4       	ldi	r21, 0x47	; 71
    1b30:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b34:	18 16       	cp	r1, r24
    1b36:	0c f0       	brlt	.+2      	; 0x1b3a <shift_right+0x392>
    1b38:	43 c0       	rjmp	.+134    	; 0x1bc0 <shift_right+0x418>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b3a:	fe 01       	movw	r30, r28
    1b3c:	ef 5a       	subi	r30, 0xAF	; 175
    1b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b40:	60 81       	ld	r22, Z
    1b42:	71 81       	ldd	r23, Z+1	; 0x01
    1b44:	82 81       	ldd	r24, Z+2	; 0x02
    1b46:	93 81       	ldd	r25, Z+3	; 0x03
    1b48:	20 e0       	ldi	r18, 0x00	; 0
    1b4a:	30 e0       	ldi	r19, 0x00	; 0
    1b4c:	40 e2       	ldi	r20, 0x20	; 32
    1b4e:	51 e4       	ldi	r21, 0x41	; 65
    1b50:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b54:	dc 01       	movw	r26, r24
    1b56:	cb 01       	movw	r24, r22
    1b58:	8e 01       	movw	r16, r28
    1b5a:	05 5b       	subi	r16, 0xB5	; 181
    1b5c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b5e:	bc 01       	movw	r22, r24
    1b60:	cd 01       	movw	r24, r26
    1b62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b66:	dc 01       	movw	r26, r24
    1b68:	cb 01       	movw	r24, r22
    1b6a:	f8 01       	movw	r30, r16
    1b6c:	91 83       	std	Z+1, r25	; 0x01
    1b6e:	80 83       	st	Z, r24
    1b70:	1f c0       	rjmp	.+62     	; 0x1bb0 <shift_right+0x408>
    1b72:	fe 01       	movw	r30, r28
    1b74:	e7 5b       	subi	r30, 0xB7	; 183
    1b76:	ff 4f       	sbci	r31, 0xFF	; 255
    1b78:	88 ec       	ldi	r24, 0xC8	; 200
    1b7a:	90 e0       	ldi	r25, 0x00	; 0
    1b7c:	91 83       	std	Z+1, r25	; 0x01
    1b7e:	80 83       	st	Z, r24
    1b80:	fe 01       	movw	r30, r28
    1b82:	e7 5b       	subi	r30, 0xB7	; 183
    1b84:	ff 4f       	sbci	r31, 0xFF	; 255
    1b86:	80 81       	ld	r24, Z
    1b88:	91 81       	ldd	r25, Z+1	; 0x01
    1b8a:	01 97       	sbiw	r24, 0x01	; 1
    1b8c:	f1 f7       	brne	.-4      	; 0x1b8a <shift_right+0x3e2>
    1b8e:	fe 01       	movw	r30, r28
    1b90:	e7 5b       	subi	r30, 0xB7	; 183
    1b92:	ff 4f       	sbci	r31, 0xFF	; 255
    1b94:	91 83       	std	Z+1, r25	; 0x01
    1b96:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b98:	de 01       	movw	r26, r28
    1b9a:	a5 5b       	subi	r26, 0xB5	; 181
    1b9c:	bf 4f       	sbci	r27, 0xFF	; 255
    1b9e:	fe 01       	movw	r30, r28
    1ba0:	e5 5b       	subi	r30, 0xB5	; 181
    1ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba4:	80 81       	ld	r24, Z
    1ba6:	91 81       	ldd	r25, Z+1	; 0x01
    1ba8:	01 97       	sbiw	r24, 0x01	; 1
    1baa:	11 96       	adiw	r26, 0x01	; 1
    1bac:	9c 93       	st	X, r25
    1bae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bb0:	fe 01       	movw	r30, r28
    1bb2:	e5 5b       	subi	r30, 0xB5	; 181
    1bb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb6:	80 81       	ld	r24, Z
    1bb8:	91 81       	ldd	r25, Z+1	; 0x01
    1bba:	00 97       	sbiw	r24, 0x00	; 0
    1bbc:	d1 f6       	brne	.-76     	; 0x1b72 <shift_right+0x3ca>
    1bbe:	27 c0       	rjmp	.+78     	; 0x1c0e <shift_right+0x466>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bc0:	8e 01       	movw	r16, r28
    1bc2:	05 5b       	subi	r16, 0xB5	; 181
    1bc4:	1f 4f       	sbci	r17, 0xFF	; 255
    1bc6:	fe 01       	movw	r30, r28
    1bc8:	e3 5b       	subi	r30, 0xB3	; 179
    1bca:	ff 4f       	sbci	r31, 0xFF	; 255
    1bcc:	60 81       	ld	r22, Z
    1bce:	71 81       	ldd	r23, Z+1	; 0x01
    1bd0:	82 81       	ldd	r24, Z+2	; 0x02
    1bd2:	93 81       	ldd	r25, Z+3	; 0x03
    1bd4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bd8:	dc 01       	movw	r26, r24
    1bda:	cb 01       	movw	r24, r22
    1bdc:	f8 01       	movw	r30, r16
    1bde:	91 83       	std	Z+1, r25	; 0x01
    1be0:	80 83       	st	Z, r24
    1be2:	de 01       	movw	r26, r28
    1be4:	a9 5b       	subi	r26, 0xB9	; 185
    1be6:	bf 4f       	sbci	r27, 0xFF	; 255
    1be8:	fe 01       	movw	r30, r28
    1bea:	e5 5b       	subi	r30, 0xB5	; 181
    1bec:	ff 4f       	sbci	r31, 0xFF	; 255
    1bee:	80 81       	ld	r24, Z
    1bf0:	91 81       	ldd	r25, Z+1	; 0x01
    1bf2:	8d 93       	st	X+, r24
    1bf4:	9c 93       	st	X, r25
    1bf6:	fe 01       	movw	r30, r28
    1bf8:	e9 5b       	subi	r30, 0xB9	; 185
    1bfa:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfc:	80 81       	ld	r24, Z
    1bfe:	91 81       	ldd	r25, Z+1	; 0x01
    1c00:	01 97       	sbiw	r24, 0x01	; 1
    1c02:	f1 f7       	brne	.-4      	; 0x1c00 <shift_right+0x458>
    1c04:	fe 01       	movw	r30, r28
    1c06:	e9 5b       	subi	r30, 0xB9	; 185
    1c08:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0a:	91 83       	std	Z+1, r25	; 0x01
    1c0c:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00010000;
    1c0e:	e8 e3       	ldi	r30, 0x38	; 56
    1c10:	f0 e0       	ldi	r31, 0x00	; 0
    1c12:	80 e1       	ldi	r24, 0x10	; 16
    1c14:	80 83       	st	Z, r24
    1c16:	fe 01       	movw	r30, r28
    1c18:	ed 5b       	subi	r30, 0xBD	; 189
    1c1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1c:	80 e0       	ldi	r24, 0x00	; 0
    1c1e:	90 e0       	ldi	r25, 0x00	; 0
    1c20:	aa e7       	ldi	r26, 0x7A	; 122
    1c22:	b3 e4       	ldi	r27, 0x43	; 67
    1c24:	80 83       	st	Z, r24
    1c26:	91 83       	std	Z+1, r25	; 0x01
    1c28:	a2 83       	std	Z+2, r26	; 0x02
    1c2a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c2c:	8e 01       	movw	r16, r28
    1c2e:	01 5c       	subi	r16, 0xC1	; 193
    1c30:	1f 4f       	sbci	r17, 0xFF	; 255
    1c32:	fe 01       	movw	r30, r28
    1c34:	ed 5b       	subi	r30, 0xBD	; 189
    1c36:	ff 4f       	sbci	r31, 0xFF	; 255
    1c38:	60 81       	ld	r22, Z
    1c3a:	71 81       	ldd	r23, Z+1	; 0x01
    1c3c:	82 81       	ldd	r24, Z+2	; 0x02
    1c3e:	93 81       	ldd	r25, Z+3	; 0x03
    1c40:	20 e0       	ldi	r18, 0x00	; 0
    1c42:	30 e0       	ldi	r19, 0x00	; 0
    1c44:	4a ef       	ldi	r20, 0xFA	; 250
    1c46:	54 e4       	ldi	r21, 0x44	; 68
    1c48:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c4c:	dc 01       	movw	r26, r24
    1c4e:	cb 01       	movw	r24, r22
    1c50:	f8 01       	movw	r30, r16
    1c52:	80 83       	st	Z, r24
    1c54:	91 83       	std	Z+1, r25	; 0x01
    1c56:	a2 83       	std	Z+2, r26	; 0x02
    1c58:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c5a:	fe 01       	movw	r30, r28
    1c5c:	ff 96       	adiw	r30, 0x3f	; 63
    1c5e:	60 81       	ld	r22, Z
    1c60:	71 81       	ldd	r23, Z+1	; 0x01
    1c62:	82 81       	ldd	r24, Z+2	; 0x02
    1c64:	93 81       	ldd	r25, Z+3	; 0x03
    1c66:	20 e0       	ldi	r18, 0x00	; 0
    1c68:	30 e0       	ldi	r19, 0x00	; 0
    1c6a:	40 e8       	ldi	r20, 0x80	; 128
    1c6c:	5f e3       	ldi	r21, 0x3F	; 63
    1c6e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c72:	88 23       	and	r24, r24
    1c74:	2c f4       	brge	.+10     	; 0x1c80 <shift_right+0x4d8>
		__ticks = 1;
    1c76:	81 e0       	ldi	r24, 0x01	; 1
    1c78:	90 e0       	ldi	r25, 0x00	; 0
    1c7a:	9e af       	std	Y+62, r25	; 0x3e
    1c7c:	8d af       	std	Y+61, r24	; 0x3d
    1c7e:	46 c0       	rjmp	.+140    	; 0x1d0c <shift_right+0x564>
	else if (__tmp > 65535)
    1c80:	fe 01       	movw	r30, r28
    1c82:	ff 96       	adiw	r30, 0x3f	; 63
    1c84:	60 81       	ld	r22, Z
    1c86:	71 81       	ldd	r23, Z+1	; 0x01
    1c88:	82 81       	ldd	r24, Z+2	; 0x02
    1c8a:	93 81       	ldd	r25, Z+3	; 0x03
    1c8c:	20 e0       	ldi	r18, 0x00	; 0
    1c8e:	3f ef       	ldi	r19, 0xFF	; 255
    1c90:	4f e7       	ldi	r20, 0x7F	; 127
    1c92:	57 e4       	ldi	r21, 0x47	; 71
    1c94:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c98:	18 16       	cp	r1, r24
    1c9a:	64 f5       	brge	.+88     	; 0x1cf4 <shift_right+0x54c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c9c:	fe 01       	movw	r30, r28
    1c9e:	ed 5b       	subi	r30, 0xBD	; 189
    1ca0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca2:	60 81       	ld	r22, Z
    1ca4:	71 81       	ldd	r23, Z+1	; 0x01
    1ca6:	82 81       	ldd	r24, Z+2	; 0x02
    1ca8:	93 81       	ldd	r25, Z+3	; 0x03
    1caa:	20 e0       	ldi	r18, 0x00	; 0
    1cac:	30 e0       	ldi	r19, 0x00	; 0
    1cae:	40 e2       	ldi	r20, 0x20	; 32
    1cb0:	51 e4       	ldi	r21, 0x41	; 65
    1cb2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cb6:	dc 01       	movw	r26, r24
    1cb8:	cb 01       	movw	r24, r22
    1cba:	bc 01       	movw	r22, r24
    1cbc:	cd 01       	movw	r24, r26
    1cbe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cc2:	dc 01       	movw	r26, r24
    1cc4:	cb 01       	movw	r24, r22
    1cc6:	9e af       	std	Y+62, r25	; 0x3e
    1cc8:	8d af       	std	Y+61, r24	; 0x3d
    1cca:	0f c0       	rjmp	.+30     	; 0x1cea <shift_right+0x542>
    1ccc:	88 ec       	ldi	r24, 0xC8	; 200
    1cce:	90 e0       	ldi	r25, 0x00	; 0
    1cd0:	9c af       	std	Y+60, r25	; 0x3c
    1cd2:	8b af       	std	Y+59, r24	; 0x3b
    1cd4:	8b ad       	ldd	r24, Y+59	; 0x3b
    1cd6:	9c ad       	ldd	r25, Y+60	; 0x3c
    1cd8:	01 97       	sbiw	r24, 0x01	; 1
    1cda:	f1 f7       	brne	.-4      	; 0x1cd8 <shift_right+0x530>
    1cdc:	9c af       	std	Y+60, r25	; 0x3c
    1cde:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ce0:	8d ad       	ldd	r24, Y+61	; 0x3d
    1ce2:	9e ad       	ldd	r25, Y+62	; 0x3e
    1ce4:	01 97       	sbiw	r24, 0x01	; 1
    1ce6:	9e af       	std	Y+62, r25	; 0x3e
    1ce8:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cea:	8d ad       	ldd	r24, Y+61	; 0x3d
    1cec:	9e ad       	ldd	r25, Y+62	; 0x3e
    1cee:	00 97       	sbiw	r24, 0x00	; 0
    1cf0:	69 f7       	brne	.-38     	; 0x1ccc <shift_right+0x524>
    1cf2:	16 c0       	rjmp	.+44     	; 0x1d20 <shift_right+0x578>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cf4:	fe 01       	movw	r30, r28
    1cf6:	ff 96       	adiw	r30, 0x3f	; 63
    1cf8:	60 81       	ld	r22, Z
    1cfa:	71 81       	ldd	r23, Z+1	; 0x01
    1cfc:	82 81       	ldd	r24, Z+2	; 0x02
    1cfe:	93 81       	ldd	r25, Z+3	; 0x03
    1d00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d04:	dc 01       	movw	r26, r24
    1d06:	cb 01       	movw	r24, r22
    1d08:	9e af       	std	Y+62, r25	; 0x3e
    1d0a:	8d af       	std	Y+61, r24	; 0x3d
    1d0c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1d0e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1d10:	9a af       	std	Y+58, r25	; 0x3a
    1d12:	89 af       	std	Y+57, r24	; 0x39
    1d14:	89 ad       	ldd	r24, Y+57	; 0x39
    1d16:	9a ad       	ldd	r25, Y+58	; 0x3a
    1d18:	01 97       	sbiw	r24, 0x01	; 1
    1d1a:	f1 f7       	brne	.-4      	; 0x1d18 <shift_right+0x570>
    1d1c:	9a af       	std	Y+58, r25	; 0x3a
    1d1e:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(250);
		PORTB = 0b00001000;
    1d20:	e8 e3       	ldi	r30, 0x38	; 56
    1d22:	f0 e0       	ldi	r31, 0x00	; 0
    1d24:	88 e0       	ldi	r24, 0x08	; 8
    1d26:	80 83       	st	Z, r24
    1d28:	80 e0       	ldi	r24, 0x00	; 0
    1d2a:	90 e0       	ldi	r25, 0x00	; 0
    1d2c:	aa e7       	ldi	r26, 0x7A	; 122
    1d2e:	b3 e4       	ldi	r27, 0x43	; 67
    1d30:	8d ab       	std	Y+53, r24	; 0x35
    1d32:	9e ab       	std	Y+54, r25	; 0x36
    1d34:	af ab       	std	Y+55, r26	; 0x37
    1d36:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d38:	6d a9       	ldd	r22, Y+53	; 0x35
    1d3a:	7e a9       	ldd	r23, Y+54	; 0x36
    1d3c:	8f a9       	ldd	r24, Y+55	; 0x37
    1d3e:	98 ad       	ldd	r25, Y+56	; 0x38
    1d40:	20 e0       	ldi	r18, 0x00	; 0
    1d42:	30 e0       	ldi	r19, 0x00	; 0
    1d44:	4a ef       	ldi	r20, 0xFA	; 250
    1d46:	54 e4       	ldi	r21, 0x44	; 68
    1d48:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d4c:	dc 01       	movw	r26, r24
    1d4e:	cb 01       	movw	r24, r22
    1d50:	89 ab       	std	Y+49, r24	; 0x31
    1d52:	9a ab       	std	Y+50, r25	; 0x32
    1d54:	ab ab       	std	Y+51, r26	; 0x33
    1d56:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1d58:	69 a9       	ldd	r22, Y+49	; 0x31
    1d5a:	7a a9       	ldd	r23, Y+50	; 0x32
    1d5c:	8b a9       	ldd	r24, Y+51	; 0x33
    1d5e:	9c a9       	ldd	r25, Y+52	; 0x34
    1d60:	20 e0       	ldi	r18, 0x00	; 0
    1d62:	30 e0       	ldi	r19, 0x00	; 0
    1d64:	40 e8       	ldi	r20, 0x80	; 128
    1d66:	5f e3       	ldi	r21, 0x3F	; 63
    1d68:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d6c:	88 23       	and	r24, r24
    1d6e:	2c f4       	brge	.+10     	; 0x1d7a <shift_right+0x5d2>
		__ticks = 1;
    1d70:	81 e0       	ldi	r24, 0x01	; 1
    1d72:	90 e0       	ldi	r25, 0x00	; 0
    1d74:	98 ab       	std	Y+48, r25	; 0x30
    1d76:	8f a7       	std	Y+47, r24	; 0x2f
    1d78:	3f c0       	rjmp	.+126    	; 0x1df8 <shift_right+0x650>
	else if (__tmp > 65535)
    1d7a:	69 a9       	ldd	r22, Y+49	; 0x31
    1d7c:	7a a9       	ldd	r23, Y+50	; 0x32
    1d7e:	8b a9       	ldd	r24, Y+51	; 0x33
    1d80:	9c a9       	ldd	r25, Y+52	; 0x34
    1d82:	20 e0       	ldi	r18, 0x00	; 0
    1d84:	3f ef       	ldi	r19, 0xFF	; 255
    1d86:	4f e7       	ldi	r20, 0x7F	; 127
    1d88:	57 e4       	ldi	r21, 0x47	; 71
    1d8a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d8e:	18 16       	cp	r1, r24
    1d90:	4c f5       	brge	.+82     	; 0x1de4 <shift_right+0x63c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d92:	6d a9       	ldd	r22, Y+53	; 0x35
    1d94:	7e a9       	ldd	r23, Y+54	; 0x36
    1d96:	8f a9       	ldd	r24, Y+55	; 0x37
    1d98:	98 ad       	ldd	r25, Y+56	; 0x38
    1d9a:	20 e0       	ldi	r18, 0x00	; 0
    1d9c:	30 e0       	ldi	r19, 0x00	; 0
    1d9e:	40 e2       	ldi	r20, 0x20	; 32
    1da0:	51 e4       	ldi	r21, 0x41	; 65
    1da2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1da6:	dc 01       	movw	r26, r24
    1da8:	cb 01       	movw	r24, r22
    1daa:	bc 01       	movw	r22, r24
    1dac:	cd 01       	movw	r24, r26
    1dae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1db2:	dc 01       	movw	r26, r24
    1db4:	cb 01       	movw	r24, r22
    1db6:	98 ab       	std	Y+48, r25	; 0x30
    1db8:	8f a7       	std	Y+47, r24	; 0x2f
    1dba:	0f c0       	rjmp	.+30     	; 0x1dda <shift_right+0x632>
    1dbc:	88 ec       	ldi	r24, 0xC8	; 200
    1dbe:	90 e0       	ldi	r25, 0x00	; 0
    1dc0:	9e a7       	std	Y+46, r25	; 0x2e
    1dc2:	8d a7       	std	Y+45, r24	; 0x2d
    1dc4:	8d a5       	ldd	r24, Y+45	; 0x2d
    1dc6:	9e a5       	ldd	r25, Y+46	; 0x2e
    1dc8:	01 97       	sbiw	r24, 0x01	; 1
    1dca:	f1 f7       	brne	.-4      	; 0x1dc8 <shift_right+0x620>
    1dcc:	9e a7       	std	Y+46, r25	; 0x2e
    1dce:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dd0:	8f a5       	ldd	r24, Y+47	; 0x2f
    1dd2:	98 a9       	ldd	r25, Y+48	; 0x30
    1dd4:	01 97       	sbiw	r24, 0x01	; 1
    1dd6:	98 ab       	std	Y+48, r25	; 0x30
    1dd8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dda:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ddc:	98 a9       	ldd	r25, Y+48	; 0x30
    1dde:	00 97       	sbiw	r24, 0x00	; 0
    1de0:	69 f7       	brne	.-38     	; 0x1dbc <shift_right+0x614>
    1de2:	14 c0       	rjmp	.+40     	; 0x1e0c <shift_right+0x664>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1de4:	69 a9       	ldd	r22, Y+49	; 0x31
    1de6:	7a a9       	ldd	r23, Y+50	; 0x32
    1de8:	8b a9       	ldd	r24, Y+51	; 0x33
    1dea:	9c a9       	ldd	r25, Y+52	; 0x34
    1dec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1df0:	dc 01       	movw	r26, r24
    1df2:	cb 01       	movw	r24, r22
    1df4:	98 ab       	std	Y+48, r25	; 0x30
    1df6:	8f a7       	std	Y+47, r24	; 0x2f
    1df8:	8f a5       	ldd	r24, Y+47	; 0x2f
    1dfa:	98 a9       	ldd	r25, Y+48	; 0x30
    1dfc:	9c a7       	std	Y+44, r25	; 0x2c
    1dfe:	8b a7       	std	Y+43, r24	; 0x2b
    1e00:	8b a5       	ldd	r24, Y+43	; 0x2b
    1e02:	9c a5       	ldd	r25, Y+44	; 0x2c
    1e04:	01 97       	sbiw	r24, 0x01	; 1
    1e06:	f1 f7       	brne	.-4      	; 0x1e04 <shift_right+0x65c>
    1e08:	9c a7       	std	Y+44, r25	; 0x2c
    1e0a:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(250);
		PORTB = 0b00000100;
    1e0c:	e8 e3       	ldi	r30, 0x38	; 56
    1e0e:	f0 e0       	ldi	r31, 0x00	; 0
    1e10:	84 e0       	ldi	r24, 0x04	; 4
    1e12:	80 83       	st	Z, r24
    1e14:	80 e0       	ldi	r24, 0x00	; 0
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	aa e7       	ldi	r26, 0x7A	; 122
    1e1a:	b3 e4       	ldi	r27, 0x43	; 67
    1e1c:	8f a3       	std	Y+39, r24	; 0x27
    1e1e:	98 a7       	std	Y+40, r25	; 0x28
    1e20:	a9 a7       	std	Y+41, r26	; 0x29
    1e22:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e24:	6f a1       	ldd	r22, Y+39	; 0x27
    1e26:	78 a5       	ldd	r23, Y+40	; 0x28
    1e28:	89 a5       	ldd	r24, Y+41	; 0x29
    1e2a:	9a a5       	ldd	r25, Y+42	; 0x2a
    1e2c:	20 e0       	ldi	r18, 0x00	; 0
    1e2e:	30 e0       	ldi	r19, 0x00	; 0
    1e30:	4a ef       	ldi	r20, 0xFA	; 250
    1e32:	54 e4       	ldi	r21, 0x44	; 68
    1e34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e38:	dc 01       	movw	r26, r24
    1e3a:	cb 01       	movw	r24, r22
    1e3c:	8b a3       	std	Y+35, r24	; 0x23
    1e3e:	9c a3       	std	Y+36, r25	; 0x24
    1e40:	ad a3       	std	Y+37, r26	; 0x25
    1e42:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1e44:	6b a1       	ldd	r22, Y+35	; 0x23
    1e46:	7c a1       	ldd	r23, Y+36	; 0x24
    1e48:	8d a1       	ldd	r24, Y+37	; 0x25
    1e4a:	9e a1       	ldd	r25, Y+38	; 0x26
    1e4c:	20 e0       	ldi	r18, 0x00	; 0
    1e4e:	30 e0       	ldi	r19, 0x00	; 0
    1e50:	40 e8       	ldi	r20, 0x80	; 128
    1e52:	5f e3       	ldi	r21, 0x3F	; 63
    1e54:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e58:	88 23       	and	r24, r24
    1e5a:	2c f4       	brge	.+10     	; 0x1e66 <shift_right+0x6be>
		__ticks = 1;
    1e5c:	81 e0       	ldi	r24, 0x01	; 1
    1e5e:	90 e0       	ldi	r25, 0x00	; 0
    1e60:	9a a3       	std	Y+34, r25	; 0x22
    1e62:	89 a3       	std	Y+33, r24	; 0x21
    1e64:	3f c0       	rjmp	.+126    	; 0x1ee4 <shift_right+0x73c>
	else if (__tmp > 65535)
    1e66:	6b a1       	ldd	r22, Y+35	; 0x23
    1e68:	7c a1       	ldd	r23, Y+36	; 0x24
    1e6a:	8d a1       	ldd	r24, Y+37	; 0x25
    1e6c:	9e a1       	ldd	r25, Y+38	; 0x26
    1e6e:	20 e0       	ldi	r18, 0x00	; 0
    1e70:	3f ef       	ldi	r19, 0xFF	; 255
    1e72:	4f e7       	ldi	r20, 0x7F	; 127
    1e74:	57 e4       	ldi	r21, 0x47	; 71
    1e76:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e7a:	18 16       	cp	r1, r24
    1e7c:	4c f5       	brge	.+82     	; 0x1ed0 <shift_right+0x728>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e7e:	6f a1       	ldd	r22, Y+39	; 0x27
    1e80:	78 a5       	ldd	r23, Y+40	; 0x28
    1e82:	89 a5       	ldd	r24, Y+41	; 0x29
    1e84:	9a a5       	ldd	r25, Y+42	; 0x2a
    1e86:	20 e0       	ldi	r18, 0x00	; 0
    1e88:	30 e0       	ldi	r19, 0x00	; 0
    1e8a:	40 e2       	ldi	r20, 0x20	; 32
    1e8c:	51 e4       	ldi	r21, 0x41	; 65
    1e8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e92:	dc 01       	movw	r26, r24
    1e94:	cb 01       	movw	r24, r22
    1e96:	bc 01       	movw	r22, r24
    1e98:	cd 01       	movw	r24, r26
    1e9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e9e:	dc 01       	movw	r26, r24
    1ea0:	cb 01       	movw	r24, r22
    1ea2:	9a a3       	std	Y+34, r25	; 0x22
    1ea4:	89 a3       	std	Y+33, r24	; 0x21
    1ea6:	0f c0       	rjmp	.+30     	; 0x1ec6 <shift_right+0x71e>
    1ea8:	88 ec       	ldi	r24, 0xC8	; 200
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	98 a3       	std	Y+32, r25	; 0x20
    1eae:	8f 8f       	std	Y+31, r24	; 0x1f
    1eb0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1eb2:	98 a1       	ldd	r25, Y+32	; 0x20
    1eb4:	01 97       	sbiw	r24, 0x01	; 1
    1eb6:	f1 f7       	brne	.-4      	; 0x1eb4 <shift_right+0x70c>
    1eb8:	98 a3       	std	Y+32, r25	; 0x20
    1eba:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ebc:	89 a1       	ldd	r24, Y+33	; 0x21
    1ebe:	9a a1       	ldd	r25, Y+34	; 0x22
    1ec0:	01 97       	sbiw	r24, 0x01	; 1
    1ec2:	9a a3       	std	Y+34, r25	; 0x22
    1ec4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ec6:	89 a1       	ldd	r24, Y+33	; 0x21
    1ec8:	9a a1       	ldd	r25, Y+34	; 0x22
    1eca:	00 97       	sbiw	r24, 0x00	; 0
    1ecc:	69 f7       	brne	.-38     	; 0x1ea8 <shift_right+0x700>
    1ece:	14 c0       	rjmp	.+40     	; 0x1ef8 <shift_right+0x750>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ed0:	6b a1       	ldd	r22, Y+35	; 0x23
    1ed2:	7c a1       	ldd	r23, Y+36	; 0x24
    1ed4:	8d a1       	ldd	r24, Y+37	; 0x25
    1ed6:	9e a1       	ldd	r25, Y+38	; 0x26
    1ed8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1edc:	dc 01       	movw	r26, r24
    1ede:	cb 01       	movw	r24, r22
    1ee0:	9a a3       	std	Y+34, r25	; 0x22
    1ee2:	89 a3       	std	Y+33, r24	; 0x21
    1ee4:	89 a1       	ldd	r24, Y+33	; 0x21
    1ee6:	9a a1       	ldd	r25, Y+34	; 0x22
    1ee8:	9e 8f       	std	Y+30, r25	; 0x1e
    1eea:	8d 8f       	std	Y+29, r24	; 0x1d
    1eec:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1eee:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1ef0:	01 97       	sbiw	r24, 0x01	; 1
    1ef2:	f1 f7       	brne	.-4      	; 0x1ef0 <shift_right+0x748>
    1ef4:	9e 8f       	std	Y+30, r25	; 0x1e
    1ef6:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(250);
		PORTB = 0b00000010;
    1ef8:	e8 e3       	ldi	r30, 0x38	; 56
    1efa:	f0 e0       	ldi	r31, 0x00	; 0
    1efc:	82 e0       	ldi	r24, 0x02	; 2
    1efe:	80 83       	st	Z, r24
    1f00:	80 e0       	ldi	r24, 0x00	; 0
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	aa e7       	ldi	r26, 0x7A	; 122
    1f06:	b3 e4       	ldi	r27, 0x43	; 67
    1f08:	89 8f       	std	Y+25, r24	; 0x19
    1f0a:	9a 8f       	std	Y+26, r25	; 0x1a
    1f0c:	ab 8f       	std	Y+27, r26	; 0x1b
    1f0e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f10:	69 8d       	ldd	r22, Y+25	; 0x19
    1f12:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f14:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f16:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1f18:	20 e0       	ldi	r18, 0x00	; 0
    1f1a:	30 e0       	ldi	r19, 0x00	; 0
    1f1c:	4a ef       	ldi	r20, 0xFA	; 250
    1f1e:	54 e4       	ldi	r21, 0x44	; 68
    1f20:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f24:	dc 01       	movw	r26, r24
    1f26:	cb 01       	movw	r24, r22
    1f28:	8d 8b       	std	Y+21, r24	; 0x15
    1f2a:	9e 8b       	std	Y+22, r25	; 0x16
    1f2c:	af 8b       	std	Y+23, r26	; 0x17
    1f2e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1f30:	6d 89       	ldd	r22, Y+21	; 0x15
    1f32:	7e 89       	ldd	r23, Y+22	; 0x16
    1f34:	8f 89       	ldd	r24, Y+23	; 0x17
    1f36:	98 8d       	ldd	r25, Y+24	; 0x18
    1f38:	20 e0       	ldi	r18, 0x00	; 0
    1f3a:	30 e0       	ldi	r19, 0x00	; 0
    1f3c:	40 e8       	ldi	r20, 0x80	; 128
    1f3e:	5f e3       	ldi	r21, 0x3F	; 63
    1f40:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f44:	88 23       	and	r24, r24
    1f46:	2c f4       	brge	.+10     	; 0x1f52 <shift_right+0x7aa>
		__ticks = 1;
    1f48:	81 e0       	ldi	r24, 0x01	; 1
    1f4a:	90 e0       	ldi	r25, 0x00	; 0
    1f4c:	9c 8b       	std	Y+20, r25	; 0x14
    1f4e:	8b 8b       	std	Y+19, r24	; 0x13
    1f50:	3f c0       	rjmp	.+126    	; 0x1fd0 <shift_right+0x828>
	else if (__tmp > 65535)
    1f52:	6d 89       	ldd	r22, Y+21	; 0x15
    1f54:	7e 89       	ldd	r23, Y+22	; 0x16
    1f56:	8f 89       	ldd	r24, Y+23	; 0x17
    1f58:	98 8d       	ldd	r25, Y+24	; 0x18
    1f5a:	20 e0       	ldi	r18, 0x00	; 0
    1f5c:	3f ef       	ldi	r19, 0xFF	; 255
    1f5e:	4f e7       	ldi	r20, 0x7F	; 127
    1f60:	57 e4       	ldi	r21, 0x47	; 71
    1f62:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f66:	18 16       	cp	r1, r24
    1f68:	4c f5       	brge	.+82     	; 0x1fbc <shift_right+0x814>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f6a:	69 8d       	ldd	r22, Y+25	; 0x19
    1f6c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f6e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f70:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1f72:	20 e0       	ldi	r18, 0x00	; 0
    1f74:	30 e0       	ldi	r19, 0x00	; 0
    1f76:	40 e2       	ldi	r20, 0x20	; 32
    1f78:	51 e4       	ldi	r21, 0x41	; 65
    1f7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f7e:	dc 01       	movw	r26, r24
    1f80:	cb 01       	movw	r24, r22
    1f82:	bc 01       	movw	r22, r24
    1f84:	cd 01       	movw	r24, r26
    1f86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f8a:	dc 01       	movw	r26, r24
    1f8c:	cb 01       	movw	r24, r22
    1f8e:	9c 8b       	std	Y+20, r25	; 0x14
    1f90:	8b 8b       	std	Y+19, r24	; 0x13
    1f92:	0f c0       	rjmp	.+30     	; 0x1fb2 <shift_right+0x80a>
    1f94:	88 ec       	ldi	r24, 0xC8	; 200
    1f96:	90 e0       	ldi	r25, 0x00	; 0
    1f98:	9a 8b       	std	Y+18, r25	; 0x12
    1f9a:	89 8b       	std	Y+17, r24	; 0x11
    1f9c:	89 89       	ldd	r24, Y+17	; 0x11
    1f9e:	9a 89       	ldd	r25, Y+18	; 0x12
    1fa0:	01 97       	sbiw	r24, 0x01	; 1
    1fa2:	f1 f7       	brne	.-4      	; 0x1fa0 <shift_right+0x7f8>
    1fa4:	9a 8b       	std	Y+18, r25	; 0x12
    1fa6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fa8:	8b 89       	ldd	r24, Y+19	; 0x13
    1faa:	9c 89       	ldd	r25, Y+20	; 0x14
    1fac:	01 97       	sbiw	r24, 0x01	; 1
    1fae:	9c 8b       	std	Y+20, r25	; 0x14
    1fb0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fb2:	8b 89       	ldd	r24, Y+19	; 0x13
    1fb4:	9c 89       	ldd	r25, Y+20	; 0x14
    1fb6:	00 97       	sbiw	r24, 0x00	; 0
    1fb8:	69 f7       	brne	.-38     	; 0x1f94 <shift_right+0x7ec>
    1fba:	14 c0       	rjmp	.+40     	; 0x1fe4 <shift_right+0x83c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fbc:	6d 89       	ldd	r22, Y+21	; 0x15
    1fbe:	7e 89       	ldd	r23, Y+22	; 0x16
    1fc0:	8f 89       	ldd	r24, Y+23	; 0x17
    1fc2:	98 8d       	ldd	r25, Y+24	; 0x18
    1fc4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fc8:	dc 01       	movw	r26, r24
    1fca:	cb 01       	movw	r24, r22
    1fcc:	9c 8b       	std	Y+20, r25	; 0x14
    1fce:	8b 8b       	std	Y+19, r24	; 0x13
    1fd0:	8b 89       	ldd	r24, Y+19	; 0x13
    1fd2:	9c 89       	ldd	r25, Y+20	; 0x14
    1fd4:	98 8b       	std	Y+16, r25	; 0x10
    1fd6:	8f 87       	std	Y+15, r24	; 0x0f
    1fd8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fda:	98 89       	ldd	r25, Y+16	; 0x10
    1fdc:	01 97       	sbiw	r24, 0x01	; 1
    1fde:	f1 f7       	brne	.-4      	; 0x1fdc <shift_right+0x834>
    1fe0:	98 8b       	std	Y+16, r25	; 0x10
    1fe2:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(250);
		PORTB = 0b00000001;
    1fe4:	e8 e3       	ldi	r30, 0x38	; 56
    1fe6:	f0 e0       	ldi	r31, 0x00	; 0
    1fe8:	81 e0       	ldi	r24, 0x01	; 1
    1fea:	80 83       	st	Z, r24
    1fec:	80 e0       	ldi	r24, 0x00	; 0
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	aa e7       	ldi	r26, 0x7A	; 122
    1ff2:	b3 e4       	ldi	r27, 0x43	; 67
    1ff4:	8b 87       	std	Y+11, r24	; 0x0b
    1ff6:	9c 87       	std	Y+12, r25	; 0x0c
    1ff8:	ad 87       	std	Y+13, r26	; 0x0d
    1ffa:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ffc:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ffe:	7c 85       	ldd	r23, Y+12	; 0x0c
    2000:	8d 85       	ldd	r24, Y+13	; 0x0d
    2002:	9e 85       	ldd	r25, Y+14	; 0x0e
    2004:	20 e0       	ldi	r18, 0x00	; 0
    2006:	30 e0       	ldi	r19, 0x00	; 0
    2008:	4a ef       	ldi	r20, 0xFA	; 250
    200a:	54 e4       	ldi	r21, 0x44	; 68
    200c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2010:	dc 01       	movw	r26, r24
    2012:	cb 01       	movw	r24, r22
    2014:	8f 83       	std	Y+7, r24	; 0x07
    2016:	98 87       	std	Y+8, r25	; 0x08
    2018:	a9 87       	std	Y+9, r26	; 0x09
    201a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    201c:	6f 81       	ldd	r22, Y+7	; 0x07
    201e:	78 85       	ldd	r23, Y+8	; 0x08
    2020:	89 85       	ldd	r24, Y+9	; 0x09
    2022:	9a 85       	ldd	r25, Y+10	; 0x0a
    2024:	20 e0       	ldi	r18, 0x00	; 0
    2026:	30 e0       	ldi	r19, 0x00	; 0
    2028:	40 e8       	ldi	r20, 0x80	; 128
    202a:	5f e3       	ldi	r21, 0x3F	; 63
    202c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2030:	88 23       	and	r24, r24
    2032:	2c f4       	brge	.+10     	; 0x203e <shift_right+0x896>
		__ticks = 1;
    2034:	81 e0       	ldi	r24, 0x01	; 1
    2036:	90 e0       	ldi	r25, 0x00	; 0
    2038:	9e 83       	std	Y+6, r25	; 0x06
    203a:	8d 83       	std	Y+5, r24	; 0x05
    203c:	3f c0       	rjmp	.+126    	; 0x20bc <shift_right+0x914>
	else if (__tmp > 65535)
    203e:	6f 81       	ldd	r22, Y+7	; 0x07
    2040:	78 85       	ldd	r23, Y+8	; 0x08
    2042:	89 85       	ldd	r24, Y+9	; 0x09
    2044:	9a 85       	ldd	r25, Y+10	; 0x0a
    2046:	20 e0       	ldi	r18, 0x00	; 0
    2048:	3f ef       	ldi	r19, 0xFF	; 255
    204a:	4f e7       	ldi	r20, 0x7F	; 127
    204c:	57 e4       	ldi	r21, 0x47	; 71
    204e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2052:	18 16       	cp	r1, r24
    2054:	4c f5       	brge	.+82     	; 0x20a8 <shift_right+0x900>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2056:	6b 85       	ldd	r22, Y+11	; 0x0b
    2058:	7c 85       	ldd	r23, Y+12	; 0x0c
    205a:	8d 85       	ldd	r24, Y+13	; 0x0d
    205c:	9e 85       	ldd	r25, Y+14	; 0x0e
    205e:	20 e0       	ldi	r18, 0x00	; 0
    2060:	30 e0       	ldi	r19, 0x00	; 0
    2062:	40 e2       	ldi	r20, 0x20	; 32
    2064:	51 e4       	ldi	r21, 0x41	; 65
    2066:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    206a:	dc 01       	movw	r26, r24
    206c:	cb 01       	movw	r24, r22
    206e:	bc 01       	movw	r22, r24
    2070:	cd 01       	movw	r24, r26
    2072:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2076:	dc 01       	movw	r26, r24
    2078:	cb 01       	movw	r24, r22
    207a:	9e 83       	std	Y+6, r25	; 0x06
    207c:	8d 83       	std	Y+5, r24	; 0x05
    207e:	0f c0       	rjmp	.+30     	; 0x209e <shift_right+0x8f6>
    2080:	88 ec       	ldi	r24, 0xC8	; 200
    2082:	90 e0       	ldi	r25, 0x00	; 0
    2084:	9c 83       	std	Y+4, r25	; 0x04
    2086:	8b 83       	std	Y+3, r24	; 0x03
    2088:	8b 81       	ldd	r24, Y+3	; 0x03
    208a:	9c 81       	ldd	r25, Y+4	; 0x04
    208c:	01 97       	sbiw	r24, 0x01	; 1
    208e:	f1 f7       	brne	.-4      	; 0x208c <shift_right+0x8e4>
    2090:	9c 83       	std	Y+4, r25	; 0x04
    2092:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2094:	8d 81       	ldd	r24, Y+5	; 0x05
    2096:	9e 81       	ldd	r25, Y+6	; 0x06
    2098:	01 97       	sbiw	r24, 0x01	; 1
    209a:	9e 83       	std	Y+6, r25	; 0x06
    209c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    209e:	8d 81       	ldd	r24, Y+5	; 0x05
    20a0:	9e 81       	ldd	r25, Y+6	; 0x06
    20a2:	00 97       	sbiw	r24, 0x00	; 0
    20a4:	69 f7       	brne	.-38     	; 0x2080 <shift_right+0x8d8>
    20a6:	14 c0       	rjmp	.+40     	; 0x20d0 <shift_right+0x928>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20a8:	6f 81       	ldd	r22, Y+7	; 0x07
    20aa:	78 85       	ldd	r23, Y+8	; 0x08
    20ac:	89 85       	ldd	r24, Y+9	; 0x09
    20ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    20b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20b4:	dc 01       	movw	r26, r24
    20b6:	cb 01       	movw	r24, r22
    20b8:	9e 83       	std	Y+6, r25	; 0x06
    20ba:	8d 83       	std	Y+5, r24	; 0x05
    20bc:	8d 81       	ldd	r24, Y+5	; 0x05
    20be:	9e 81       	ldd	r25, Y+6	; 0x06
    20c0:	9a 83       	std	Y+2, r25	; 0x02
    20c2:	89 83       	std	Y+1, r24	; 0x01
    20c4:	89 81       	ldd	r24, Y+1	; 0x01
    20c6:	9a 81       	ldd	r25, Y+2	; 0x02
    20c8:	01 97       	sbiw	r24, 0x01	; 1
    20ca:	f1 f7       	brne	.-4      	; 0x20c8 <shift_right+0x920>
    20cc:	9a 83       	std	Y+2, r25	; 0x02
    20ce:	89 83       	std	Y+1, r24	; 0x01
	}
}

void shift_right()
{
	while(GET_BIT(PINC, 2)==0)
    20d0:	e3 e3       	ldi	r30, 0x33	; 51
    20d2:	f0 e0       	ldi	r31, 0x00	; 0
    20d4:	80 81       	ld	r24, Z
    20d6:	86 95       	lsr	r24
    20d8:	86 95       	lsr	r24
    20da:	88 2f       	mov	r24, r24
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	81 70       	andi	r24, 0x01	; 1
    20e0:	90 70       	andi	r25, 0x00	; 0
    20e2:	00 97       	sbiw	r24, 0x00	; 0
    20e4:	09 f4       	brne	.+2      	; 0x20e8 <shift_right+0x940>
    20e6:	6e cb       	rjmp	.-2340   	; 0x17c4 <shift_right+0x1c>
		PORTB = 0b00000010;
		_delay_ms(250);
		PORTB = 0b00000001;
		_delay_ms(250);
	}
}
    20e8:	c0 59       	subi	r28, 0x90	; 144
    20ea:	df 4f       	sbci	r29, 0xFF	; 255
    20ec:	0f b6       	in	r0, 0x3f	; 63
    20ee:	f8 94       	cli
    20f0:	de bf       	out	0x3e, r29	; 62
    20f2:	0f be       	out	0x3f, r0	; 63
    20f4:	cd bf       	out	0x3d, r28	; 61
    20f6:	cf 91       	pop	r28
    20f8:	df 91       	pop	r29
    20fa:	1f 91       	pop	r17
    20fc:	0f 91       	pop	r16
    20fe:	08 95       	ret

00002100 <LED_Converge>:

void LED_Converge()
{
    2100:	df 93       	push	r29
    2102:	cf 93       	push	r28
    2104:	cd b7       	in	r28, 0x3d	; 61
    2106:	de b7       	in	r29, 0x3e	; 62
    2108:	e8 97       	sbiw	r28, 0x38	; 56
    210a:	0f b6       	in	r0, 0x3f	; 63
    210c:	f8 94       	cli
    210e:	de bf       	out	0x3e, r29	; 62
    2110:	0f be       	out	0x3f, r0	; 63
    2112:	cd bf       	out	0x3d, r28	; 61
    2114:	d8 c1       	rjmp	.+944    	; 0x24c6 <LED_Converge+0x3c6>
	while(GET_BIT(PINC, 3)==0)
	{
		PORTB = 0b10000001;
    2116:	e8 e3       	ldi	r30, 0x38	; 56
    2118:	f0 e0       	ldi	r31, 0x00	; 0
    211a:	81 e8       	ldi	r24, 0x81	; 129
    211c:	80 83       	st	Z, r24
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	a6 e9       	ldi	r26, 0x96	; 150
    2124:	b3 e4       	ldi	r27, 0x43	; 67
    2126:	8d ab       	std	Y+53, r24	; 0x35
    2128:	9e ab       	std	Y+54, r25	; 0x36
    212a:	af ab       	std	Y+55, r26	; 0x37
    212c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    212e:	6d a9       	ldd	r22, Y+53	; 0x35
    2130:	7e a9       	ldd	r23, Y+54	; 0x36
    2132:	8f a9       	ldd	r24, Y+55	; 0x37
    2134:	98 ad       	ldd	r25, Y+56	; 0x38
    2136:	20 e0       	ldi	r18, 0x00	; 0
    2138:	30 e0       	ldi	r19, 0x00	; 0
    213a:	4a ef       	ldi	r20, 0xFA	; 250
    213c:	54 e4       	ldi	r21, 0x44	; 68
    213e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2142:	dc 01       	movw	r26, r24
    2144:	cb 01       	movw	r24, r22
    2146:	89 ab       	std	Y+49, r24	; 0x31
    2148:	9a ab       	std	Y+50, r25	; 0x32
    214a:	ab ab       	std	Y+51, r26	; 0x33
    214c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    214e:	69 a9       	ldd	r22, Y+49	; 0x31
    2150:	7a a9       	ldd	r23, Y+50	; 0x32
    2152:	8b a9       	ldd	r24, Y+51	; 0x33
    2154:	9c a9       	ldd	r25, Y+52	; 0x34
    2156:	20 e0       	ldi	r18, 0x00	; 0
    2158:	30 e0       	ldi	r19, 0x00	; 0
    215a:	40 e8       	ldi	r20, 0x80	; 128
    215c:	5f e3       	ldi	r21, 0x3F	; 63
    215e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2162:	88 23       	and	r24, r24
    2164:	2c f4       	brge	.+10     	; 0x2170 <LED_Converge+0x70>
		__ticks = 1;
    2166:	81 e0       	ldi	r24, 0x01	; 1
    2168:	90 e0       	ldi	r25, 0x00	; 0
    216a:	98 ab       	std	Y+48, r25	; 0x30
    216c:	8f a7       	std	Y+47, r24	; 0x2f
    216e:	3f c0       	rjmp	.+126    	; 0x21ee <LED_Converge+0xee>
	else if (__tmp > 65535)
    2170:	69 a9       	ldd	r22, Y+49	; 0x31
    2172:	7a a9       	ldd	r23, Y+50	; 0x32
    2174:	8b a9       	ldd	r24, Y+51	; 0x33
    2176:	9c a9       	ldd	r25, Y+52	; 0x34
    2178:	20 e0       	ldi	r18, 0x00	; 0
    217a:	3f ef       	ldi	r19, 0xFF	; 255
    217c:	4f e7       	ldi	r20, 0x7F	; 127
    217e:	57 e4       	ldi	r21, 0x47	; 71
    2180:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2184:	18 16       	cp	r1, r24
    2186:	4c f5       	brge	.+82     	; 0x21da <LED_Converge+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2188:	6d a9       	ldd	r22, Y+53	; 0x35
    218a:	7e a9       	ldd	r23, Y+54	; 0x36
    218c:	8f a9       	ldd	r24, Y+55	; 0x37
    218e:	98 ad       	ldd	r25, Y+56	; 0x38
    2190:	20 e0       	ldi	r18, 0x00	; 0
    2192:	30 e0       	ldi	r19, 0x00	; 0
    2194:	40 e2       	ldi	r20, 0x20	; 32
    2196:	51 e4       	ldi	r21, 0x41	; 65
    2198:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    219c:	dc 01       	movw	r26, r24
    219e:	cb 01       	movw	r24, r22
    21a0:	bc 01       	movw	r22, r24
    21a2:	cd 01       	movw	r24, r26
    21a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21a8:	dc 01       	movw	r26, r24
    21aa:	cb 01       	movw	r24, r22
    21ac:	98 ab       	std	Y+48, r25	; 0x30
    21ae:	8f a7       	std	Y+47, r24	; 0x2f
    21b0:	0f c0       	rjmp	.+30     	; 0x21d0 <LED_Converge+0xd0>
    21b2:	88 ec       	ldi	r24, 0xC8	; 200
    21b4:	90 e0       	ldi	r25, 0x00	; 0
    21b6:	9e a7       	std	Y+46, r25	; 0x2e
    21b8:	8d a7       	std	Y+45, r24	; 0x2d
    21ba:	8d a5       	ldd	r24, Y+45	; 0x2d
    21bc:	9e a5       	ldd	r25, Y+46	; 0x2e
    21be:	01 97       	sbiw	r24, 0x01	; 1
    21c0:	f1 f7       	brne	.-4      	; 0x21be <LED_Converge+0xbe>
    21c2:	9e a7       	std	Y+46, r25	; 0x2e
    21c4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21c6:	8f a5       	ldd	r24, Y+47	; 0x2f
    21c8:	98 a9       	ldd	r25, Y+48	; 0x30
    21ca:	01 97       	sbiw	r24, 0x01	; 1
    21cc:	98 ab       	std	Y+48, r25	; 0x30
    21ce:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21d0:	8f a5       	ldd	r24, Y+47	; 0x2f
    21d2:	98 a9       	ldd	r25, Y+48	; 0x30
    21d4:	00 97       	sbiw	r24, 0x00	; 0
    21d6:	69 f7       	brne	.-38     	; 0x21b2 <LED_Converge+0xb2>
    21d8:	14 c0       	rjmp	.+40     	; 0x2202 <LED_Converge+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21da:	69 a9       	ldd	r22, Y+49	; 0x31
    21dc:	7a a9       	ldd	r23, Y+50	; 0x32
    21de:	8b a9       	ldd	r24, Y+51	; 0x33
    21e0:	9c a9       	ldd	r25, Y+52	; 0x34
    21e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21e6:	dc 01       	movw	r26, r24
    21e8:	cb 01       	movw	r24, r22
    21ea:	98 ab       	std	Y+48, r25	; 0x30
    21ec:	8f a7       	std	Y+47, r24	; 0x2f
    21ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    21f0:	98 a9       	ldd	r25, Y+48	; 0x30
    21f2:	9c a7       	std	Y+44, r25	; 0x2c
    21f4:	8b a7       	std	Y+43, r24	; 0x2b
    21f6:	8b a5       	ldd	r24, Y+43	; 0x2b
    21f8:	9c a5       	ldd	r25, Y+44	; 0x2c
    21fa:	01 97       	sbiw	r24, 0x01	; 1
    21fc:	f1 f7       	brne	.-4      	; 0x21fa <LED_Converge+0xfa>
    21fe:	9c a7       	std	Y+44, r25	; 0x2c
    2200:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(300);
		PORTB = 0b01000010;
    2202:	e8 e3       	ldi	r30, 0x38	; 56
    2204:	f0 e0       	ldi	r31, 0x00	; 0
    2206:	82 e4       	ldi	r24, 0x42	; 66
    2208:	80 83       	st	Z, r24
    220a:	80 e0       	ldi	r24, 0x00	; 0
    220c:	90 e0       	ldi	r25, 0x00	; 0
    220e:	a6 e9       	ldi	r26, 0x96	; 150
    2210:	b3 e4       	ldi	r27, 0x43	; 67
    2212:	8f a3       	std	Y+39, r24	; 0x27
    2214:	98 a7       	std	Y+40, r25	; 0x28
    2216:	a9 a7       	std	Y+41, r26	; 0x29
    2218:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    221a:	6f a1       	ldd	r22, Y+39	; 0x27
    221c:	78 a5       	ldd	r23, Y+40	; 0x28
    221e:	89 a5       	ldd	r24, Y+41	; 0x29
    2220:	9a a5       	ldd	r25, Y+42	; 0x2a
    2222:	20 e0       	ldi	r18, 0x00	; 0
    2224:	30 e0       	ldi	r19, 0x00	; 0
    2226:	4a ef       	ldi	r20, 0xFA	; 250
    2228:	54 e4       	ldi	r21, 0x44	; 68
    222a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    222e:	dc 01       	movw	r26, r24
    2230:	cb 01       	movw	r24, r22
    2232:	8b a3       	std	Y+35, r24	; 0x23
    2234:	9c a3       	std	Y+36, r25	; 0x24
    2236:	ad a3       	std	Y+37, r26	; 0x25
    2238:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    223a:	6b a1       	ldd	r22, Y+35	; 0x23
    223c:	7c a1       	ldd	r23, Y+36	; 0x24
    223e:	8d a1       	ldd	r24, Y+37	; 0x25
    2240:	9e a1       	ldd	r25, Y+38	; 0x26
    2242:	20 e0       	ldi	r18, 0x00	; 0
    2244:	30 e0       	ldi	r19, 0x00	; 0
    2246:	40 e8       	ldi	r20, 0x80	; 128
    2248:	5f e3       	ldi	r21, 0x3F	; 63
    224a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    224e:	88 23       	and	r24, r24
    2250:	2c f4       	brge	.+10     	; 0x225c <LED_Converge+0x15c>
		__ticks = 1;
    2252:	81 e0       	ldi	r24, 0x01	; 1
    2254:	90 e0       	ldi	r25, 0x00	; 0
    2256:	9a a3       	std	Y+34, r25	; 0x22
    2258:	89 a3       	std	Y+33, r24	; 0x21
    225a:	3f c0       	rjmp	.+126    	; 0x22da <LED_Converge+0x1da>
	else if (__tmp > 65535)
    225c:	6b a1       	ldd	r22, Y+35	; 0x23
    225e:	7c a1       	ldd	r23, Y+36	; 0x24
    2260:	8d a1       	ldd	r24, Y+37	; 0x25
    2262:	9e a1       	ldd	r25, Y+38	; 0x26
    2264:	20 e0       	ldi	r18, 0x00	; 0
    2266:	3f ef       	ldi	r19, 0xFF	; 255
    2268:	4f e7       	ldi	r20, 0x7F	; 127
    226a:	57 e4       	ldi	r21, 0x47	; 71
    226c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2270:	18 16       	cp	r1, r24
    2272:	4c f5       	brge	.+82     	; 0x22c6 <LED_Converge+0x1c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2274:	6f a1       	ldd	r22, Y+39	; 0x27
    2276:	78 a5       	ldd	r23, Y+40	; 0x28
    2278:	89 a5       	ldd	r24, Y+41	; 0x29
    227a:	9a a5       	ldd	r25, Y+42	; 0x2a
    227c:	20 e0       	ldi	r18, 0x00	; 0
    227e:	30 e0       	ldi	r19, 0x00	; 0
    2280:	40 e2       	ldi	r20, 0x20	; 32
    2282:	51 e4       	ldi	r21, 0x41	; 65
    2284:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2288:	dc 01       	movw	r26, r24
    228a:	cb 01       	movw	r24, r22
    228c:	bc 01       	movw	r22, r24
    228e:	cd 01       	movw	r24, r26
    2290:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2294:	dc 01       	movw	r26, r24
    2296:	cb 01       	movw	r24, r22
    2298:	9a a3       	std	Y+34, r25	; 0x22
    229a:	89 a3       	std	Y+33, r24	; 0x21
    229c:	0f c0       	rjmp	.+30     	; 0x22bc <LED_Converge+0x1bc>
    229e:	88 ec       	ldi	r24, 0xC8	; 200
    22a0:	90 e0       	ldi	r25, 0x00	; 0
    22a2:	98 a3       	std	Y+32, r25	; 0x20
    22a4:	8f 8f       	std	Y+31, r24	; 0x1f
    22a6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    22a8:	98 a1       	ldd	r25, Y+32	; 0x20
    22aa:	01 97       	sbiw	r24, 0x01	; 1
    22ac:	f1 f7       	brne	.-4      	; 0x22aa <LED_Converge+0x1aa>
    22ae:	98 a3       	std	Y+32, r25	; 0x20
    22b0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22b2:	89 a1       	ldd	r24, Y+33	; 0x21
    22b4:	9a a1       	ldd	r25, Y+34	; 0x22
    22b6:	01 97       	sbiw	r24, 0x01	; 1
    22b8:	9a a3       	std	Y+34, r25	; 0x22
    22ba:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22bc:	89 a1       	ldd	r24, Y+33	; 0x21
    22be:	9a a1       	ldd	r25, Y+34	; 0x22
    22c0:	00 97       	sbiw	r24, 0x00	; 0
    22c2:	69 f7       	brne	.-38     	; 0x229e <LED_Converge+0x19e>
    22c4:	14 c0       	rjmp	.+40     	; 0x22ee <LED_Converge+0x1ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22c6:	6b a1       	ldd	r22, Y+35	; 0x23
    22c8:	7c a1       	ldd	r23, Y+36	; 0x24
    22ca:	8d a1       	ldd	r24, Y+37	; 0x25
    22cc:	9e a1       	ldd	r25, Y+38	; 0x26
    22ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22d2:	dc 01       	movw	r26, r24
    22d4:	cb 01       	movw	r24, r22
    22d6:	9a a3       	std	Y+34, r25	; 0x22
    22d8:	89 a3       	std	Y+33, r24	; 0x21
    22da:	89 a1       	ldd	r24, Y+33	; 0x21
    22dc:	9a a1       	ldd	r25, Y+34	; 0x22
    22de:	9e 8f       	std	Y+30, r25	; 0x1e
    22e0:	8d 8f       	std	Y+29, r24	; 0x1d
    22e2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    22e4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    22e6:	01 97       	sbiw	r24, 0x01	; 1
    22e8:	f1 f7       	brne	.-4      	; 0x22e6 <LED_Converge+0x1e6>
    22ea:	9e 8f       	std	Y+30, r25	; 0x1e
    22ec:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(300);
		PORTB = 0b00100100;
    22ee:	e8 e3       	ldi	r30, 0x38	; 56
    22f0:	f0 e0       	ldi	r31, 0x00	; 0
    22f2:	84 e2       	ldi	r24, 0x24	; 36
    22f4:	80 83       	st	Z, r24
    22f6:	80 e0       	ldi	r24, 0x00	; 0
    22f8:	90 e0       	ldi	r25, 0x00	; 0
    22fa:	a6 e9       	ldi	r26, 0x96	; 150
    22fc:	b3 e4       	ldi	r27, 0x43	; 67
    22fe:	89 8f       	std	Y+25, r24	; 0x19
    2300:	9a 8f       	std	Y+26, r25	; 0x1a
    2302:	ab 8f       	std	Y+27, r26	; 0x1b
    2304:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2306:	69 8d       	ldd	r22, Y+25	; 0x19
    2308:	7a 8d       	ldd	r23, Y+26	; 0x1a
    230a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    230c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    230e:	20 e0       	ldi	r18, 0x00	; 0
    2310:	30 e0       	ldi	r19, 0x00	; 0
    2312:	4a ef       	ldi	r20, 0xFA	; 250
    2314:	54 e4       	ldi	r21, 0x44	; 68
    2316:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    231a:	dc 01       	movw	r26, r24
    231c:	cb 01       	movw	r24, r22
    231e:	8d 8b       	std	Y+21, r24	; 0x15
    2320:	9e 8b       	std	Y+22, r25	; 0x16
    2322:	af 8b       	std	Y+23, r26	; 0x17
    2324:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2326:	6d 89       	ldd	r22, Y+21	; 0x15
    2328:	7e 89       	ldd	r23, Y+22	; 0x16
    232a:	8f 89       	ldd	r24, Y+23	; 0x17
    232c:	98 8d       	ldd	r25, Y+24	; 0x18
    232e:	20 e0       	ldi	r18, 0x00	; 0
    2330:	30 e0       	ldi	r19, 0x00	; 0
    2332:	40 e8       	ldi	r20, 0x80	; 128
    2334:	5f e3       	ldi	r21, 0x3F	; 63
    2336:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    233a:	88 23       	and	r24, r24
    233c:	2c f4       	brge	.+10     	; 0x2348 <LED_Converge+0x248>
		__ticks = 1;
    233e:	81 e0       	ldi	r24, 0x01	; 1
    2340:	90 e0       	ldi	r25, 0x00	; 0
    2342:	9c 8b       	std	Y+20, r25	; 0x14
    2344:	8b 8b       	std	Y+19, r24	; 0x13
    2346:	3f c0       	rjmp	.+126    	; 0x23c6 <LED_Converge+0x2c6>
	else if (__tmp > 65535)
    2348:	6d 89       	ldd	r22, Y+21	; 0x15
    234a:	7e 89       	ldd	r23, Y+22	; 0x16
    234c:	8f 89       	ldd	r24, Y+23	; 0x17
    234e:	98 8d       	ldd	r25, Y+24	; 0x18
    2350:	20 e0       	ldi	r18, 0x00	; 0
    2352:	3f ef       	ldi	r19, 0xFF	; 255
    2354:	4f e7       	ldi	r20, 0x7F	; 127
    2356:	57 e4       	ldi	r21, 0x47	; 71
    2358:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    235c:	18 16       	cp	r1, r24
    235e:	4c f5       	brge	.+82     	; 0x23b2 <LED_Converge+0x2b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2360:	69 8d       	ldd	r22, Y+25	; 0x19
    2362:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2364:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2366:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2368:	20 e0       	ldi	r18, 0x00	; 0
    236a:	30 e0       	ldi	r19, 0x00	; 0
    236c:	40 e2       	ldi	r20, 0x20	; 32
    236e:	51 e4       	ldi	r21, 0x41	; 65
    2370:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2374:	dc 01       	movw	r26, r24
    2376:	cb 01       	movw	r24, r22
    2378:	bc 01       	movw	r22, r24
    237a:	cd 01       	movw	r24, r26
    237c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2380:	dc 01       	movw	r26, r24
    2382:	cb 01       	movw	r24, r22
    2384:	9c 8b       	std	Y+20, r25	; 0x14
    2386:	8b 8b       	std	Y+19, r24	; 0x13
    2388:	0f c0       	rjmp	.+30     	; 0x23a8 <LED_Converge+0x2a8>
    238a:	88 ec       	ldi	r24, 0xC8	; 200
    238c:	90 e0       	ldi	r25, 0x00	; 0
    238e:	9a 8b       	std	Y+18, r25	; 0x12
    2390:	89 8b       	std	Y+17, r24	; 0x11
    2392:	89 89       	ldd	r24, Y+17	; 0x11
    2394:	9a 89       	ldd	r25, Y+18	; 0x12
    2396:	01 97       	sbiw	r24, 0x01	; 1
    2398:	f1 f7       	brne	.-4      	; 0x2396 <LED_Converge+0x296>
    239a:	9a 8b       	std	Y+18, r25	; 0x12
    239c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    239e:	8b 89       	ldd	r24, Y+19	; 0x13
    23a0:	9c 89       	ldd	r25, Y+20	; 0x14
    23a2:	01 97       	sbiw	r24, 0x01	; 1
    23a4:	9c 8b       	std	Y+20, r25	; 0x14
    23a6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23a8:	8b 89       	ldd	r24, Y+19	; 0x13
    23aa:	9c 89       	ldd	r25, Y+20	; 0x14
    23ac:	00 97       	sbiw	r24, 0x00	; 0
    23ae:	69 f7       	brne	.-38     	; 0x238a <LED_Converge+0x28a>
    23b0:	14 c0       	rjmp	.+40     	; 0x23da <LED_Converge+0x2da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23b2:	6d 89       	ldd	r22, Y+21	; 0x15
    23b4:	7e 89       	ldd	r23, Y+22	; 0x16
    23b6:	8f 89       	ldd	r24, Y+23	; 0x17
    23b8:	98 8d       	ldd	r25, Y+24	; 0x18
    23ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23be:	dc 01       	movw	r26, r24
    23c0:	cb 01       	movw	r24, r22
    23c2:	9c 8b       	std	Y+20, r25	; 0x14
    23c4:	8b 8b       	std	Y+19, r24	; 0x13
    23c6:	8b 89       	ldd	r24, Y+19	; 0x13
    23c8:	9c 89       	ldd	r25, Y+20	; 0x14
    23ca:	98 8b       	std	Y+16, r25	; 0x10
    23cc:	8f 87       	std	Y+15, r24	; 0x0f
    23ce:	8f 85       	ldd	r24, Y+15	; 0x0f
    23d0:	98 89       	ldd	r25, Y+16	; 0x10
    23d2:	01 97       	sbiw	r24, 0x01	; 1
    23d4:	f1 f7       	brne	.-4      	; 0x23d2 <LED_Converge+0x2d2>
    23d6:	98 8b       	std	Y+16, r25	; 0x10
    23d8:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(300);
		PORTB = 0b00011000;
    23da:	e8 e3       	ldi	r30, 0x38	; 56
    23dc:	f0 e0       	ldi	r31, 0x00	; 0
    23de:	88 e1       	ldi	r24, 0x18	; 24
    23e0:	80 83       	st	Z, r24
    23e2:	80 e0       	ldi	r24, 0x00	; 0
    23e4:	90 e0       	ldi	r25, 0x00	; 0
    23e6:	a6 e9       	ldi	r26, 0x96	; 150
    23e8:	b3 e4       	ldi	r27, 0x43	; 67
    23ea:	8b 87       	std	Y+11, r24	; 0x0b
    23ec:	9c 87       	std	Y+12, r25	; 0x0c
    23ee:	ad 87       	std	Y+13, r26	; 0x0d
    23f0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23f2:	6b 85       	ldd	r22, Y+11	; 0x0b
    23f4:	7c 85       	ldd	r23, Y+12	; 0x0c
    23f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    23f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    23fa:	20 e0       	ldi	r18, 0x00	; 0
    23fc:	30 e0       	ldi	r19, 0x00	; 0
    23fe:	4a ef       	ldi	r20, 0xFA	; 250
    2400:	54 e4       	ldi	r21, 0x44	; 68
    2402:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2406:	dc 01       	movw	r26, r24
    2408:	cb 01       	movw	r24, r22
    240a:	8f 83       	std	Y+7, r24	; 0x07
    240c:	98 87       	std	Y+8, r25	; 0x08
    240e:	a9 87       	std	Y+9, r26	; 0x09
    2410:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2412:	6f 81       	ldd	r22, Y+7	; 0x07
    2414:	78 85       	ldd	r23, Y+8	; 0x08
    2416:	89 85       	ldd	r24, Y+9	; 0x09
    2418:	9a 85       	ldd	r25, Y+10	; 0x0a
    241a:	20 e0       	ldi	r18, 0x00	; 0
    241c:	30 e0       	ldi	r19, 0x00	; 0
    241e:	40 e8       	ldi	r20, 0x80	; 128
    2420:	5f e3       	ldi	r21, 0x3F	; 63
    2422:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2426:	88 23       	and	r24, r24
    2428:	2c f4       	brge	.+10     	; 0x2434 <LED_Converge+0x334>
		__ticks = 1;
    242a:	81 e0       	ldi	r24, 0x01	; 1
    242c:	90 e0       	ldi	r25, 0x00	; 0
    242e:	9e 83       	std	Y+6, r25	; 0x06
    2430:	8d 83       	std	Y+5, r24	; 0x05
    2432:	3f c0       	rjmp	.+126    	; 0x24b2 <LED_Converge+0x3b2>
	else if (__tmp > 65535)
    2434:	6f 81       	ldd	r22, Y+7	; 0x07
    2436:	78 85       	ldd	r23, Y+8	; 0x08
    2438:	89 85       	ldd	r24, Y+9	; 0x09
    243a:	9a 85       	ldd	r25, Y+10	; 0x0a
    243c:	20 e0       	ldi	r18, 0x00	; 0
    243e:	3f ef       	ldi	r19, 0xFF	; 255
    2440:	4f e7       	ldi	r20, 0x7F	; 127
    2442:	57 e4       	ldi	r21, 0x47	; 71
    2444:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2448:	18 16       	cp	r1, r24
    244a:	4c f5       	brge	.+82     	; 0x249e <LED_Converge+0x39e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    244c:	6b 85       	ldd	r22, Y+11	; 0x0b
    244e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2450:	8d 85       	ldd	r24, Y+13	; 0x0d
    2452:	9e 85       	ldd	r25, Y+14	; 0x0e
    2454:	20 e0       	ldi	r18, 0x00	; 0
    2456:	30 e0       	ldi	r19, 0x00	; 0
    2458:	40 e2       	ldi	r20, 0x20	; 32
    245a:	51 e4       	ldi	r21, 0x41	; 65
    245c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2460:	dc 01       	movw	r26, r24
    2462:	cb 01       	movw	r24, r22
    2464:	bc 01       	movw	r22, r24
    2466:	cd 01       	movw	r24, r26
    2468:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    246c:	dc 01       	movw	r26, r24
    246e:	cb 01       	movw	r24, r22
    2470:	9e 83       	std	Y+6, r25	; 0x06
    2472:	8d 83       	std	Y+5, r24	; 0x05
    2474:	0f c0       	rjmp	.+30     	; 0x2494 <LED_Converge+0x394>
    2476:	88 ec       	ldi	r24, 0xC8	; 200
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	9c 83       	std	Y+4, r25	; 0x04
    247c:	8b 83       	std	Y+3, r24	; 0x03
    247e:	8b 81       	ldd	r24, Y+3	; 0x03
    2480:	9c 81       	ldd	r25, Y+4	; 0x04
    2482:	01 97       	sbiw	r24, 0x01	; 1
    2484:	f1 f7       	brne	.-4      	; 0x2482 <LED_Converge+0x382>
    2486:	9c 83       	std	Y+4, r25	; 0x04
    2488:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    248a:	8d 81       	ldd	r24, Y+5	; 0x05
    248c:	9e 81       	ldd	r25, Y+6	; 0x06
    248e:	01 97       	sbiw	r24, 0x01	; 1
    2490:	9e 83       	std	Y+6, r25	; 0x06
    2492:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2494:	8d 81       	ldd	r24, Y+5	; 0x05
    2496:	9e 81       	ldd	r25, Y+6	; 0x06
    2498:	00 97       	sbiw	r24, 0x00	; 0
    249a:	69 f7       	brne	.-38     	; 0x2476 <LED_Converge+0x376>
    249c:	14 c0       	rjmp	.+40     	; 0x24c6 <LED_Converge+0x3c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    249e:	6f 81       	ldd	r22, Y+7	; 0x07
    24a0:	78 85       	ldd	r23, Y+8	; 0x08
    24a2:	89 85       	ldd	r24, Y+9	; 0x09
    24a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    24a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24aa:	dc 01       	movw	r26, r24
    24ac:	cb 01       	movw	r24, r22
    24ae:	9e 83       	std	Y+6, r25	; 0x06
    24b0:	8d 83       	std	Y+5, r24	; 0x05
    24b2:	8d 81       	ldd	r24, Y+5	; 0x05
    24b4:	9e 81       	ldd	r25, Y+6	; 0x06
    24b6:	9a 83       	std	Y+2, r25	; 0x02
    24b8:	89 83       	std	Y+1, r24	; 0x01
    24ba:	89 81       	ldd	r24, Y+1	; 0x01
    24bc:	9a 81       	ldd	r25, Y+2	; 0x02
    24be:	01 97       	sbiw	r24, 0x01	; 1
    24c0:	f1 f7       	brne	.-4      	; 0x24be <LED_Converge+0x3be>
    24c2:	9a 83       	std	Y+2, r25	; 0x02
    24c4:	89 83       	std	Y+1, r24	; 0x01
	}
}

void LED_Converge()
{
	while(GET_BIT(PINC, 3)==0)
    24c6:	e3 e3       	ldi	r30, 0x33	; 51
    24c8:	f0 e0       	ldi	r31, 0x00	; 0
    24ca:	80 81       	ld	r24, Z
    24cc:	86 95       	lsr	r24
    24ce:	86 95       	lsr	r24
    24d0:	86 95       	lsr	r24
    24d2:	88 2f       	mov	r24, r24
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	81 70       	andi	r24, 0x01	; 1
    24d8:	90 70       	andi	r25, 0x00	; 0
    24da:	00 97       	sbiw	r24, 0x00	; 0
    24dc:	09 f4       	brne	.+2      	; 0x24e0 <LED_Converge+0x3e0>
    24de:	1b ce       	rjmp	.-970    	; 0x2116 <LED_Converge+0x16>
		PORTB = 0b00100100;
		_delay_ms(300);
		PORTB = 0b00011000;
		_delay_ms(300);
	}
}
    24e0:	e8 96       	adiw	r28, 0x38	; 56
    24e2:	0f b6       	in	r0, 0x3f	; 63
    24e4:	f8 94       	cli
    24e6:	de bf       	out	0x3e, r29	; 62
    24e8:	0f be       	out	0x3f, r0	; 63
    24ea:	cd bf       	out	0x3d, r28	; 61
    24ec:	cf 91       	pop	r28
    24ee:	df 91       	pop	r29
    24f0:	08 95       	ret

000024f2 <LED_Diverge>:

void LED_Diverge()
{
    24f2:	df 93       	push	r29
    24f4:	cf 93       	push	r28
    24f6:	cd b7       	in	r28, 0x3d	; 61
    24f8:	de b7       	in	r29, 0x3e	; 62
    24fa:	e8 97       	sbiw	r28, 0x38	; 56
    24fc:	0f b6       	in	r0, 0x3f	; 63
    24fe:	f8 94       	cli
    2500:	de bf       	out	0x3e, r29	; 62
    2502:	0f be       	out	0x3f, r0	; 63
    2504:	cd bf       	out	0x3d, r28	; 61
    2506:	d8 c1       	rjmp	.+944    	; 0x28b8 <LED_Diverge+0x3c6>
	while(GET_BIT(PINC, 4)==0)
	{
		PORTB = 0b00011000;
    2508:	e8 e3       	ldi	r30, 0x38	; 56
    250a:	f0 e0       	ldi	r31, 0x00	; 0
    250c:	88 e1       	ldi	r24, 0x18	; 24
    250e:	80 83       	st	Z, r24
    2510:	80 e0       	ldi	r24, 0x00	; 0
    2512:	90 e0       	ldi	r25, 0x00	; 0
    2514:	a6 e9       	ldi	r26, 0x96	; 150
    2516:	b3 e4       	ldi	r27, 0x43	; 67
    2518:	8d ab       	std	Y+53, r24	; 0x35
    251a:	9e ab       	std	Y+54, r25	; 0x36
    251c:	af ab       	std	Y+55, r26	; 0x37
    251e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2520:	6d a9       	ldd	r22, Y+53	; 0x35
    2522:	7e a9       	ldd	r23, Y+54	; 0x36
    2524:	8f a9       	ldd	r24, Y+55	; 0x37
    2526:	98 ad       	ldd	r25, Y+56	; 0x38
    2528:	20 e0       	ldi	r18, 0x00	; 0
    252a:	30 e0       	ldi	r19, 0x00	; 0
    252c:	4a ef       	ldi	r20, 0xFA	; 250
    252e:	54 e4       	ldi	r21, 0x44	; 68
    2530:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2534:	dc 01       	movw	r26, r24
    2536:	cb 01       	movw	r24, r22
    2538:	89 ab       	std	Y+49, r24	; 0x31
    253a:	9a ab       	std	Y+50, r25	; 0x32
    253c:	ab ab       	std	Y+51, r26	; 0x33
    253e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2540:	69 a9       	ldd	r22, Y+49	; 0x31
    2542:	7a a9       	ldd	r23, Y+50	; 0x32
    2544:	8b a9       	ldd	r24, Y+51	; 0x33
    2546:	9c a9       	ldd	r25, Y+52	; 0x34
    2548:	20 e0       	ldi	r18, 0x00	; 0
    254a:	30 e0       	ldi	r19, 0x00	; 0
    254c:	40 e8       	ldi	r20, 0x80	; 128
    254e:	5f e3       	ldi	r21, 0x3F	; 63
    2550:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2554:	88 23       	and	r24, r24
    2556:	2c f4       	brge	.+10     	; 0x2562 <LED_Diverge+0x70>
		__ticks = 1;
    2558:	81 e0       	ldi	r24, 0x01	; 1
    255a:	90 e0       	ldi	r25, 0x00	; 0
    255c:	98 ab       	std	Y+48, r25	; 0x30
    255e:	8f a7       	std	Y+47, r24	; 0x2f
    2560:	3f c0       	rjmp	.+126    	; 0x25e0 <LED_Diverge+0xee>
	else if (__tmp > 65535)
    2562:	69 a9       	ldd	r22, Y+49	; 0x31
    2564:	7a a9       	ldd	r23, Y+50	; 0x32
    2566:	8b a9       	ldd	r24, Y+51	; 0x33
    2568:	9c a9       	ldd	r25, Y+52	; 0x34
    256a:	20 e0       	ldi	r18, 0x00	; 0
    256c:	3f ef       	ldi	r19, 0xFF	; 255
    256e:	4f e7       	ldi	r20, 0x7F	; 127
    2570:	57 e4       	ldi	r21, 0x47	; 71
    2572:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2576:	18 16       	cp	r1, r24
    2578:	4c f5       	brge	.+82     	; 0x25cc <LED_Diverge+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    257a:	6d a9       	ldd	r22, Y+53	; 0x35
    257c:	7e a9       	ldd	r23, Y+54	; 0x36
    257e:	8f a9       	ldd	r24, Y+55	; 0x37
    2580:	98 ad       	ldd	r25, Y+56	; 0x38
    2582:	20 e0       	ldi	r18, 0x00	; 0
    2584:	30 e0       	ldi	r19, 0x00	; 0
    2586:	40 e2       	ldi	r20, 0x20	; 32
    2588:	51 e4       	ldi	r21, 0x41	; 65
    258a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    258e:	dc 01       	movw	r26, r24
    2590:	cb 01       	movw	r24, r22
    2592:	bc 01       	movw	r22, r24
    2594:	cd 01       	movw	r24, r26
    2596:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    259a:	dc 01       	movw	r26, r24
    259c:	cb 01       	movw	r24, r22
    259e:	98 ab       	std	Y+48, r25	; 0x30
    25a0:	8f a7       	std	Y+47, r24	; 0x2f
    25a2:	0f c0       	rjmp	.+30     	; 0x25c2 <LED_Diverge+0xd0>
    25a4:	88 ec       	ldi	r24, 0xC8	; 200
    25a6:	90 e0       	ldi	r25, 0x00	; 0
    25a8:	9e a7       	std	Y+46, r25	; 0x2e
    25aa:	8d a7       	std	Y+45, r24	; 0x2d
    25ac:	8d a5       	ldd	r24, Y+45	; 0x2d
    25ae:	9e a5       	ldd	r25, Y+46	; 0x2e
    25b0:	01 97       	sbiw	r24, 0x01	; 1
    25b2:	f1 f7       	brne	.-4      	; 0x25b0 <LED_Diverge+0xbe>
    25b4:	9e a7       	std	Y+46, r25	; 0x2e
    25b6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25b8:	8f a5       	ldd	r24, Y+47	; 0x2f
    25ba:	98 a9       	ldd	r25, Y+48	; 0x30
    25bc:	01 97       	sbiw	r24, 0x01	; 1
    25be:	98 ab       	std	Y+48, r25	; 0x30
    25c0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25c2:	8f a5       	ldd	r24, Y+47	; 0x2f
    25c4:	98 a9       	ldd	r25, Y+48	; 0x30
    25c6:	00 97       	sbiw	r24, 0x00	; 0
    25c8:	69 f7       	brne	.-38     	; 0x25a4 <LED_Diverge+0xb2>
    25ca:	14 c0       	rjmp	.+40     	; 0x25f4 <LED_Diverge+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25cc:	69 a9       	ldd	r22, Y+49	; 0x31
    25ce:	7a a9       	ldd	r23, Y+50	; 0x32
    25d0:	8b a9       	ldd	r24, Y+51	; 0x33
    25d2:	9c a9       	ldd	r25, Y+52	; 0x34
    25d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25d8:	dc 01       	movw	r26, r24
    25da:	cb 01       	movw	r24, r22
    25dc:	98 ab       	std	Y+48, r25	; 0x30
    25de:	8f a7       	std	Y+47, r24	; 0x2f
    25e0:	8f a5       	ldd	r24, Y+47	; 0x2f
    25e2:	98 a9       	ldd	r25, Y+48	; 0x30
    25e4:	9c a7       	std	Y+44, r25	; 0x2c
    25e6:	8b a7       	std	Y+43, r24	; 0x2b
    25e8:	8b a5       	ldd	r24, Y+43	; 0x2b
    25ea:	9c a5       	ldd	r25, Y+44	; 0x2c
    25ec:	01 97       	sbiw	r24, 0x01	; 1
    25ee:	f1 f7       	brne	.-4      	; 0x25ec <LED_Diverge+0xfa>
    25f0:	9c a7       	std	Y+44, r25	; 0x2c
    25f2:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(300);
		PORTB = 0b00100100;
    25f4:	e8 e3       	ldi	r30, 0x38	; 56
    25f6:	f0 e0       	ldi	r31, 0x00	; 0
    25f8:	84 e2       	ldi	r24, 0x24	; 36
    25fa:	80 83       	st	Z, r24
    25fc:	80 e0       	ldi	r24, 0x00	; 0
    25fe:	90 e0       	ldi	r25, 0x00	; 0
    2600:	a6 e9       	ldi	r26, 0x96	; 150
    2602:	b3 e4       	ldi	r27, 0x43	; 67
    2604:	8f a3       	std	Y+39, r24	; 0x27
    2606:	98 a7       	std	Y+40, r25	; 0x28
    2608:	a9 a7       	std	Y+41, r26	; 0x29
    260a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    260c:	6f a1       	ldd	r22, Y+39	; 0x27
    260e:	78 a5       	ldd	r23, Y+40	; 0x28
    2610:	89 a5       	ldd	r24, Y+41	; 0x29
    2612:	9a a5       	ldd	r25, Y+42	; 0x2a
    2614:	20 e0       	ldi	r18, 0x00	; 0
    2616:	30 e0       	ldi	r19, 0x00	; 0
    2618:	4a ef       	ldi	r20, 0xFA	; 250
    261a:	54 e4       	ldi	r21, 0x44	; 68
    261c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2620:	dc 01       	movw	r26, r24
    2622:	cb 01       	movw	r24, r22
    2624:	8b a3       	std	Y+35, r24	; 0x23
    2626:	9c a3       	std	Y+36, r25	; 0x24
    2628:	ad a3       	std	Y+37, r26	; 0x25
    262a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    262c:	6b a1       	ldd	r22, Y+35	; 0x23
    262e:	7c a1       	ldd	r23, Y+36	; 0x24
    2630:	8d a1       	ldd	r24, Y+37	; 0x25
    2632:	9e a1       	ldd	r25, Y+38	; 0x26
    2634:	20 e0       	ldi	r18, 0x00	; 0
    2636:	30 e0       	ldi	r19, 0x00	; 0
    2638:	40 e8       	ldi	r20, 0x80	; 128
    263a:	5f e3       	ldi	r21, 0x3F	; 63
    263c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2640:	88 23       	and	r24, r24
    2642:	2c f4       	brge	.+10     	; 0x264e <LED_Diverge+0x15c>
		__ticks = 1;
    2644:	81 e0       	ldi	r24, 0x01	; 1
    2646:	90 e0       	ldi	r25, 0x00	; 0
    2648:	9a a3       	std	Y+34, r25	; 0x22
    264a:	89 a3       	std	Y+33, r24	; 0x21
    264c:	3f c0       	rjmp	.+126    	; 0x26cc <LED_Diverge+0x1da>
	else if (__tmp > 65535)
    264e:	6b a1       	ldd	r22, Y+35	; 0x23
    2650:	7c a1       	ldd	r23, Y+36	; 0x24
    2652:	8d a1       	ldd	r24, Y+37	; 0x25
    2654:	9e a1       	ldd	r25, Y+38	; 0x26
    2656:	20 e0       	ldi	r18, 0x00	; 0
    2658:	3f ef       	ldi	r19, 0xFF	; 255
    265a:	4f e7       	ldi	r20, 0x7F	; 127
    265c:	57 e4       	ldi	r21, 0x47	; 71
    265e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2662:	18 16       	cp	r1, r24
    2664:	4c f5       	brge	.+82     	; 0x26b8 <LED_Diverge+0x1c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2666:	6f a1       	ldd	r22, Y+39	; 0x27
    2668:	78 a5       	ldd	r23, Y+40	; 0x28
    266a:	89 a5       	ldd	r24, Y+41	; 0x29
    266c:	9a a5       	ldd	r25, Y+42	; 0x2a
    266e:	20 e0       	ldi	r18, 0x00	; 0
    2670:	30 e0       	ldi	r19, 0x00	; 0
    2672:	40 e2       	ldi	r20, 0x20	; 32
    2674:	51 e4       	ldi	r21, 0x41	; 65
    2676:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    267a:	dc 01       	movw	r26, r24
    267c:	cb 01       	movw	r24, r22
    267e:	bc 01       	movw	r22, r24
    2680:	cd 01       	movw	r24, r26
    2682:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2686:	dc 01       	movw	r26, r24
    2688:	cb 01       	movw	r24, r22
    268a:	9a a3       	std	Y+34, r25	; 0x22
    268c:	89 a3       	std	Y+33, r24	; 0x21
    268e:	0f c0       	rjmp	.+30     	; 0x26ae <LED_Diverge+0x1bc>
    2690:	88 ec       	ldi	r24, 0xC8	; 200
    2692:	90 e0       	ldi	r25, 0x00	; 0
    2694:	98 a3       	std	Y+32, r25	; 0x20
    2696:	8f 8f       	std	Y+31, r24	; 0x1f
    2698:	8f 8d       	ldd	r24, Y+31	; 0x1f
    269a:	98 a1       	ldd	r25, Y+32	; 0x20
    269c:	01 97       	sbiw	r24, 0x01	; 1
    269e:	f1 f7       	brne	.-4      	; 0x269c <LED_Diverge+0x1aa>
    26a0:	98 a3       	std	Y+32, r25	; 0x20
    26a2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26a4:	89 a1       	ldd	r24, Y+33	; 0x21
    26a6:	9a a1       	ldd	r25, Y+34	; 0x22
    26a8:	01 97       	sbiw	r24, 0x01	; 1
    26aa:	9a a3       	std	Y+34, r25	; 0x22
    26ac:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26ae:	89 a1       	ldd	r24, Y+33	; 0x21
    26b0:	9a a1       	ldd	r25, Y+34	; 0x22
    26b2:	00 97       	sbiw	r24, 0x00	; 0
    26b4:	69 f7       	brne	.-38     	; 0x2690 <LED_Diverge+0x19e>
    26b6:	14 c0       	rjmp	.+40     	; 0x26e0 <LED_Diverge+0x1ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26b8:	6b a1       	ldd	r22, Y+35	; 0x23
    26ba:	7c a1       	ldd	r23, Y+36	; 0x24
    26bc:	8d a1       	ldd	r24, Y+37	; 0x25
    26be:	9e a1       	ldd	r25, Y+38	; 0x26
    26c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26c4:	dc 01       	movw	r26, r24
    26c6:	cb 01       	movw	r24, r22
    26c8:	9a a3       	std	Y+34, r25	; 0x22
    26ca:	89 a3       	std	Y+33, r24	; 0x21
    26cc:	89 a1       	ldd	r24, Y+33	; 0x21
    26ce:	9a a1       	ldd	r25, Y+34	; 0x22
    26d0:	9e 8f       	std	Y+30, r25	; 0x1e
    26d2:	8d 8f       	std	Y+29, r24	; 0x1d
    26d4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    26d6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    26d8:	01 97       	sbiw	r24, 0x01	; 1
    26da:	f1 f7       	brne	.-4      	; 0x26d8 <LED_Diverge+0x1e6>
    26dc:	9e 8f       	std	Y+30, r25	; 0x1e
    26de:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(300);
		PORTB = 0b01000010;
    26e0:	e8 e3       	ldi	r30, 0x38	; 56
    26e2:	f0 e0       	ldi	r31, 0x00	; 0
    26e4:	82 e4       	ldi	r24, 0x42	; 66
    26e6:	80 83       	st	Z, r24
    26e8:	80 e0       	ldi	r24, 0x00	; 0
    26ea:	90 e0       	ldi	r25, 0x00	; 0
    26ec:	a6 e9       	ldi	r26, 0x96	; 150
    26ee:	b3 e4       	ldi	r27, 0x43	; 67
    26f0:	89 8f       	std	Y+25, r24	; 0x19
    26f2:	9a 8f       	std	Y+26, r25	; 0x1a
    26f4:	ab 8f       	std	Y+27, r26	; 0x1b
    26f6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26f8:	69 8d       	ldd	r22, Y+25	; 0x19
    26fa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26fc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26fe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2700:	20 e0       	ldi	r18, 0x00	; 0
    2702:	30 e0       	ldi	r19, 0x00	; 0
    2704:	4a ef       	ldi	r20, 0xFA	; 250
    2706:	54 e4       	ldi	r21, 0x44	; 68
    2708:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    270c:	dc 01       	movw	r26, r24
    270e:	cb 01       	movw	r24, r22
    2710:	8d 8b       	std	Y+21, r24	; 0x15
    2712:	9e 8b       	std	Y+22, r25	; 0x16
    2714:	af 8b       	std	Y+23, r26	; 0x17
    2716:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2718:	6d 89       	ldd	r22, Y+21	; 0x15
    271a:	7e 89       	ldd	r23, Y+22	; 0x16
    271c:	8f 89       	ldd	r24, Y+23	; 0x17
    271e:	98 8d       	ldd	r25, Y+24	; 0x18
    2720:	20 e0       	ldi	r18, 0x00	; 0
    2722:	30 e0       	ldi	r19, 0x00	; 0
    2724:	40 e8       	ldi	r20, 0x80	; 128
    2726:	5f e3       	ldi	r21, 0x3F	; 63
    2728:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    272c:	88 23       	and	r24, r24
    272e:	2c f4       	brge	.+10     	; 0x273a <LED_Diverge+0x248>
		__ticks = 1;
    2730:	81 e0       	ldi	r24, 0x01	; 1
    2732:	90 e0       	ldi	r25, 0x00	; 0
    2734:	9c 8b       	std	Y+20, r25	; 0x14
    2736:	8b 8b       	std	Y+19, r24	; 0x13
    2738:	3f c0       	rjmp	.+126    	; 0x27b8 <LED_Diverge+0x2c6>
	else if (__tmp > 65535)
    273a:	6d 89       	ldd	r22, Y+21	; 0x15
    273c:	7e 89       	ldd	r23, Y+22	; 0x16
    273e:	8f 89       	ldd	r24, Y+23	; 0x17
    2740:	98 8d       	ldd	r25, Y+24	; 0x18
    2742:	20 e0       	ldi	r18, 0x00	; 0
    2744:	3f ef       	ldi	r19, 0xFF	; 255
    2746:	4f e7       	ldi	r20, 0x7F	; 127
    2748:	57 e4       	ldi	r21, 0x47	; 71
    274a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    274e:	18 16       	cp	r1, r24
    2750:	4c f5       	brge	.+82     	; 0x27a4 <LED_Diverge+0x2b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2752:	69 8d       	ldd	r22, Y+25	; 0x19
    2754:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2756:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2758:	9c 8d       	ldd	r25, Y+28	; 0x1c
    275a:	20 e0       	ldi	r18, 0x00	; 0
    275c:	30 e0       	ldi	r19, 0x00	; 0
    275e:	40 e2       	ldi	r20, 0x20	; 32
    2760:	51 e4       	ldi	r21, 0x41	; 65
    2762:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2766:	dc 01       	movw	r26, r24
    2768:	cb 01       	movw	r24, r22
    276a:	bc 01       	movw	r22, r24
    276c:	cd 01       	movw	r24, r26
    276e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2772:	dc 01       	movw	r26, r24
    2774:	cb 01       	movw	r24, r22
    2776:	9c 8b       	std	Y+20, r25	; 0x14
    2778:	8b 8b       	std	Y+19, r24	; 0x13
    277a:	0f c0       	rjmp	.+30     	; 0x279a <LED_Diverge+0x2a8>
    277c:	88 ec       	ldi	r24, 0xC8	; 200
    277e:	90 e0       	ldi	r25, 0x00	; 0
    2780:	9a 8b       	std	Y+18, r25	; 0x12
    2782:	89 8b       	std	Y+17, r24	; 0x11
    2784:	89 89       	ldd	r24, Y+17	; 0x11
    2786:	9a 89       	ldd	r25, Y+18	; 0x12
    2788:	01 97       	sbiw	r24, 0x01	; 1
    278a:	f1 f7       	brne	.-4      	; 0x2788 <LED_Diverge+0x296>
    278c:	9a 8b       	std	Y+18, r25	; 0x12
    278e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2790:	8b 89       	ldd	r24, Y+19	; 0x13
    2792:	9c 89       	ldd	r25, Y+20	; 0x14
    2794:	01 97       	sbiw	r24, 0x01	; 1
    2796:	9c 8b       	std	Y+20, r25	; 0x14
    2798:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    279a:	8b 89       	ldd	r24, Y+19	; 0x13
    279c:	9c 89       	ldd	r25, Y+20	; 0x14
    279e:	00 97       	sbiw	r24, 0x00	; 0
    27a0:	69 f7       	brne	.-38     	; 0x277c <LED_Diverge+0x28a>
    27a2:	14 c0       	rjmp	.+40     	; 0x27cc <LED_Diverge+0x2da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27a4:	6d 89       	ldd	r22, Y+21	; 0x15
    27a6:	7e 89       	ldd	r23, Y+22	; 0x16
    27a8:	8f 89       	ldd	r24, Y+23	; 0x17
    27aa:	98 8d       	ldd	r25, Y+24	; 0x18
    27ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27b0:	dc 01       	movw	r26, r24
    27b2:	cb 01       	movw	r24, r22
    27b4:	9c 8b       	std	Y+20, r25	; 0x14
    27b6:	8b 8b       	std	Y+19, r24	; 0x13
    27b8:	8b 89       	ldd	r24, Y+19	; 0x13
    27ba:	9c 89       	ldd	r25, Y+20	; 0x14
    27bc:	98 8b       	std	Y+16, r25	; 0x10
    27be:	8f 87       	std	Y+15, r24	; 0x0f
    27c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    27c2:	98 89       	ldd	r25, Y+16	; 0x10
    27c4:	01 97       	sbiw	r24, 0x01	; 1
    27c6:	f1 f7       	brne	.-4      	; 0x27c4 <LED_Diverge+0x2d2>
    27c8:	98 8b       	std	Y+16, r25	; 0x10
    27ca:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(300);
		PORTB = 0b10000001;
    27cc:	e8 e3       	ldi	r30, 0x38	; 56
    27ce:	f0 e0       	ldi	r31, 0x00	; 0
    27d0:	81 e8       	ldi	r24, 0x81	; 129
    27d2:	80 83       	st	Z, r24
    27d4:	80 e0       	ldi	r24, 0x00	; 0
    27d6:	90 e0       	ldi	r25, 0x00	; 0
    27d8:	a6 e9       	ldi	r26, 0x96	; 150
    27da:	b3 e4       	ldi	r27, 0x43	; 67
    27dc:	8b 87       	std	Y+11, r24	; 0x0b
    27de:	9c 87       	std	Y+12, r25	; 0x0c
    27e0:	ad 87       	std	Y+13, r26	; 0x0d
    27e2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    27e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    27e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    27ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    27ec:	20 e0       	ldi	r18, 0x00	; 0
    27ee:	30 e0       	ldi	r19, 0x00	; 0
    27f0:	4a ef       	ldi	r20, 0xFA	; 250
    27f2:	54 e4       	ldi	r21, 0x44	; 68
    27f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27f8:	dc 01       	movw	r26, r24
    27fa:	cb 01       	movw	r24, r22
    27fc:	8f 83       	std	Y+7, r24	; 0x07
    27fe:	98 87       	std	Y+8, r25	; 0x08
    2800:	a9 87       	std	Y+9, r26	; 0x09
    2802:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2804:	6f 81       	ldd	r22, Y+7	; 0x07
    2806:	78 85       	ldd	r23, Y+8	; 0x08
    2808:	89 85       	ldd	r24, Y+9	; 0x09
    280a:	9a 85       	ldd	r25, Y+10	; 0x0a
    280c:	20 e0       	ldi	r18, 0x00	; 0
    280e:	30 e0       	ldi	r19, 0x00	; 0
    2810:	40 e8       	ldi	r20, 0x80	; 128
    2812:	5f e3       	ldi	r21, 0x3F	; 63
    2814:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2818:	88 23       	and	r24, r24
    281a:	2c f4       	brge	.+10     	; 0x2826 <LED_Diverge+0x334>
		__ticks = 1;
    281c:	81 e0       	ldi	r24, 0x01	; 1
    281e:	90 e0       	ldi	r25, 0x00	; 0
    2820:	9e 83       	std	Y+6, r25	; 0x06
    2822:	8d 83       	std	Y+5, r24	; 0x05
    2824:	3f c0       	rjmp	.+126    	; 0x28a4 <LED_Diverge+0x3b2>
	else if (__tmp > 65535)
    2826:	6f 81       	ldd	r22, Y+7	; 0x07
    2828:	78 85       	ldd	r23, Y+8	; 0x08
    282a:	89 85       	ldd	r24, Y+9	; 0x09
    282c:	9a 85       	ldd	r25, Y+10	; 0x0a
    282e:	20 e0       	ldi	r18, 0x00	; 0
    2830:	3f ef       	ldi	r19, 0xFF	; 255
    2832:	4f e7       	ldi	r20, 0x7F	; 127
    2834:	57 e4       	ldi	r21, 0x47	; 71
    2836:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    283a:	18 16       	cp	r1, r24
    283c:	4c f5       	brge	.+82     	; 0x2890 <LED_Diverge+0x39e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    283e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2840:	7c 85       	ldd	r23, Y+12	; 0x0c
    2842:	8d 85       	ldd	r24, Y+13	; 0x0d
    2844:	9e 85       	ldd	r25, Y+14	; 0x0e
    2846:	20 e0       	ldi	r18, 0x00	; 0
    2848:	30 e0       	ldi	r19, 0x00	; 0
    284a:	40 e2       	ldi	r20, 0x20	; 32
    284c:	51 e4       	ldi	r21, 0x41	; 65
    284e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2852:	dc 01       	movw	r26, r24
    2854:	cb 01       	movw	r24, r22
    2856:	bc 01       	movw	r22, r24
    2858:	cd 01       	movw	r24, r26
    285a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    285e:	dc 01       	movw	r26, r24
    2860:	cb 01       	movw	r24, r22
    2862:	9e 83       	std	Y+6, r25	; 0x06
    2864:	8d 83       	std	Y+5, r24	; 0x05
    2866:	0f c0       	rjmp	.+30     	; 0x2886 <LED_Diverge+0x394>
    2868:	88 ec       	ldi	r24, 0xC8	; 200
    286a:	90 e0       	ldi	r25, 0x00	; 0
    286c:	9c 83       	std	Y+4, r25	; 0x04
    286e:	8b 83       	std	Y+3, r24	; 0x03
    2870:	8b 81       	ldd	r24, Y+3	; 0x03
    2872:	9c 81       	ldd	r25, Y+4	; 0x04
    2874:	01 97       	sbiw	r24, 0x01	; 1
    2876:	f1 f7       	brne	.-4      	; 0x2874 <LED_Diverge+0x382>
    2878:	9c 83       	std	Y+4, r25	; 0x04
    287a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    287c:	8d 81       	ldd	r24, Y+5	; 0x05
    287e:	9e 81       	ldd	r25, Y+6	; 0x06
    2880:	01 97       	sbiw	r24, 0x01	; 1
    2882:	9e 83       	std	Y+6, r25	; 0x06
    2884:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2886:	8d 81       	ldd	r24, Y+5	; 0x05
    2888:	9e 81       	ldd	r25, Y+6	; 0x06
    288a:	00 97       	sbiw	r24, 0x00	; 0
    288c:	69 f7       	brne	.-38     	; 0x2868 <LED_Diverge+0x376>
    288e:	14 c0       	rjmp	.+40     	; 0x28b8 <LED_Diverge+0x3c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2890:	6f 81       	ldd	r22, Y+7	; 0x07
    2892:	78 85       	ldd	r23, Y+8	; 0x08
    2894:	89 85       	ldd	r24, Y+9	; 0x09
    2896:	9a 85       	ldd	r25, Y+10	; 0x0a
    2898:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    289c:	dc 01       	movw	r26, r24
    289e:	cb 01       	movw	r24, r22
    28a0:	9e 83       	std	Y+6, r25	; 0x06
    28a2:	8d 83       	std	Y+5, r24	; 0x05
    28a4:	8d 81       	ldd	r24, Y+5	; 0x05
    28a6:	9e 81       	ldd	r25, Y+6	; 0x06
    28a8:	9a 83       	std	Y+2, r25	; 0x02
    28aa:	89 83       	std	Y+1, r24	; 0x01
    28ac:	89 81       	ldd	r24, Y+1	; 0x01
    28ae:	9a 81       	ldd	r25, Y+2	; 0x02
    28b0:	01 97       	sbiw	r24, 0x01	; 1
    28b2:	f1 f7       	brne	.-4      	; 0x28b0 <LED_Diverge+0x3be>
    28b4:	9a 83       	std	Y+2, r25	; 0x02
    28b6:	89 83       	std	Y+1, r24	; 0x01
	}
}

void LED_Diverge()
{
	while(GET_BIT(PINC, 4)==0)
    28b8:	e3 e3       	ldi	r30, 0x33	; 51
    28ba:	f0 e0       	ldi	r31, 0x00	; 0
    28bc:	80 81       	ld	r24, Z
    28be:	82 95       	swap	r24
    28c0:	8f 70       	andi	r24, 0x0F	; 15
    28c2:	88 2f       	mov	r24, r24
    28c4:	90 e0       	ldi	r25, 0x00	; 0
    28c6:	81 70       	andi	r24, 0x01	; 1
    28c8:	90 70       	andi	r25, 0x00	; 0
    28ca:	00 97       	sbiw	r24, 0x00	; 0
    28cc:	09 f4       	brne	.+2      	; 0x28d0 <LED_Diverge+0x3de>
    28ce:	1c ce       	rjmp	.-968    	; 0x2508 <LED_Diverge+0x16>
		PORTB = 0b01000010;
		_delay_ms(300);
		PORTB = 0b10000001;
		_delay_ms(300);
	}
}
    28d0:	e8 96       	adiw	r28, 0x38	; 56
    28d2:	0f b6       	in	r0, 0x3f	; 63
    28d4:	f8 94       	cli
    28d6:	de bf       	out	0x3e, r29	; 62
    28d8:	0f be       	out	0x3f, r0	; 63
    28da:	cd bf       	out	0x3d, r28	; 61
    28dc:	cf 91       	pop	r28
    28de:	df 91       	pop	r29
    28e0:	08 95       	ret

000028e2 <ping_pong>:

void ping_pong()
{
    28e2:	0f 93       	push	r16
    28e4:	1f 93       	push	r17
    28e6:	df 93       	push	r29
    28e8:	cf 93       	push	r28
    28ea:	cd b7       	in	r28, 0x3d	; 61
    28ec:	de b7       	in	r29, 0x3e	; 62
    28ee:	c4 5c       	subi	r28, 0xC4	; 196
    28f0:	d0 40       	sbci	r29, 0x00	; 0
    28f2:	0f b6       	in	r0, 0x3f	; 63
    28f4:	f8 94       	cli
    28f6:	de bf       	out	0x3e, r29	; 62
    28f8:	0f be       	out	0x3f, r0	; 63
    28fa:	cd bf       	out	0x3d, r28	; 61
    28fc:	0c 94 50 1d 	jmp	0x3aa0	; 0x3aa0 <ping_pong+0x11be>
	while(GET_BIT(PINC, 5)==0)
	{
		PORTB = 0b00000001;
    2900:	e8 e3       	ldi	r30, 0x38	; 56
    2902:	f0 e0       	ldi	r31, 0x00	; 0
    2904:	81 e0       	ldi	r24, 0x01	; 1
    2906:	80 83       	st	Z, r24
    2908:	fe 01       	movw	r30, r28
    290a:	ef 53       	subi	r30, 0x3F	; 63
    290c:	ff 4f       	sbci	r31, 0xFF	; 255
    290e:	80 e0       	ldi	r24, 0x00	; 0
    2910:	90 e0       	ldi	r25, 0x00	; 0
    2912:	aa e7       	ldi	r26, 0x7A	; 122
    2914:	b3 e4       	ldi	r27, 0x43	; 67
    2916:	80 83       	st	Z, r24
    2918:	91 83       	std	Z+1, r25	; 0x01
    291a:	a2 83       	std	Z+2, r26	; 0x02
    291c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    291e:	8e 01       	movw	r16, r28
    2920:	03 54       	subi	r16, 0x43	; 67
    2922:	1f 4f       	sbci	r17, 0xFF	; 255
    2924:	fe 01       	movw	r30, r28
    2926:	ef 53       	subi	r30, 0x3F	; 63
    2928:	ff 4f       	sbci	r31, 0xFF	; 255
    292a:	60 81       	ld	r22, Z
    292c:	71 81       	ldd	r23, Z+1	; 0x01
    292e:	82 81       	ldd	r24, Z+2	; 0x02
    2930:	93 81       	ldd	r25, Z+3	; 0x03
    2932:	20 e0       	ldi	r18, 0x00	; 0
    2934:	30 e0       	ldi	r19, 0x00	; 0
    2936:	4a ef       	ldi	r20, 0xFA	; 250
    2938:	54 e4       	ldi	r21, 0x44	; 68
    293a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    293e:	dc 01       	movw	r26, r24
    2940:	cb 01       	movw	r24, r22
    2942:	f8 01       	movw	r30, r16
    2944:	80 83       	st	Z, r24
    2946:	91 83       	std	Z+1, r25	; 0x01
    2948:	a2 83       	std	Z+2, r26	; 0x02
    294a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    294c:	fe 01       	movw	r30, r28
    294e:	e3 54       	subi	r30, 0x43	; 67
    2950:	ff 4f       	sbci	r31, 0xFF	; 255
    2952:	60 81       	ld	r22, Z
    2954:	71 81       	ldd	r23, Z+1	; 0x01
    2956:	82 81       	ldd	r24, Z+2	; 0x02
    2958:	93 81       	ldd	r25, Z+3	; 0x03
    295a:	20 e0       	ldi	r18, 0x00	; 0
    295c:	30 e0       	ldi	r19, 0x00	; 0
    295e:	40 e8       	ldi	r20, 0x80	; 128
    2960:	5f e3       	ldi	r21, 0x3F	; 63
    2962:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2966:	88 23       	and	r24, r24
    2968:	44 f4       	brge	.+16     	; 0x297a <ping_pong+0x98>
		__ticks = 1;
    296a:	fe 01       	movw	r30, r28
    296c:	e5 54       	subi	r30, 0x45	; 69
    296e:	ff 4f       	sbci	r31, 0xFF	; 255
    2970:	81 e0       	ldi	r24, 0x01	; 1
    2972:	90 e0       	ldi	r25, 0x00	; 0
    2974:	91 83       	std	Z+1, r25	; 0x01
    2976:	80 83       	st	Z, r24
    2978:	64 c0       	rjmp	.+200    	; 0x2a42 <ping_pong+0x160>
	else if (__tmp > 65535)
    297a:	fe 01       	movw	r30, r28
    297c:	e3 54       	subi	r30, 0x43	; 67
    297e:	ff 4f       	sbci	r31, 0xFF	; 255
    2980:	60 81       	ld	r22, Z
    2982:	71 81       	ldd	r23, Z+1	; 0x01
    2984:	82 81       	ldd	r24, Z+2	; 0x02
    2986:	93 81       	ldd	r25, Z+3	; 0x03
    2988:	20 e0       	ldi	r18, 0x00	; 0
    298a:	3f ef       	ldi	r19, 0xFF	; 255
    298c:	4f e7       	ldi	r20, 0x7F	; 127
    298e:	57 e4       	ldi	r21, 0x47	; 71
    2990:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2994:	18 16       	cp	r1, r24
    2996:	0c f0       	brlt	.+2      	; 0x299a <ping_pong+0xb8>
    2998:	43 c0       	rjmp	.+134    	; 0x2a20 <ping_pong+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    299a:	fe 01       	movw	r30, r28
    299c:	ef 53       	subi	r30, 0x3F	; 63
    299e:	ff 4f       	sbci	r31, 0xFF	; 255
    29a0:	60 81       	ld	r22, Z
    29a2:	71 81       	ldd	r23, Z+1	; 0x01
    29a4:	82 81       	ldd	r24, Z+2	; 0x02
    29a6:	93 81       	ldd	r25, Z+3	; 0x03
    29a8:	20 e0       	ldi	r18, 0x00	; 0
    29aa:	30 e0       	ldi	r19, 0x00	; 0
    29ac:	40 e2       	ldi	r20, 0x20	; 32
    29ae:	51 e4       	ldi	r21, 0x41	; 65
    29b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29b4:	dc 01       	movw	r26, r24
    29b6:	cb 01       	movw	r24, r22
    29b8:	8e 01       	movw	r16, r28
    29ba:	05 54       	subi	r16, 0x45	; 69
    29bc:	1f 4f       	sbci	r17, 0xFF	; 255
    29be:	bc 01       	movw	r22, r24
    29c0:	cd 01       	movw	r24, r26
    29c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29c6:	dc 01       	movw	r26, r24
    29c8:	cb 01       	movw	r24, r22
    29ca:	f8 01       	movw	r30, r16
    29cc:	91 83       	std	Z+1, r25	; 0x01
    29ce:	80 83       	st	Z, r24
    29d0:	1f c0       	rjmp	.+62     	; 0x2a10 <ping_pong+0x12e>
    29d2:	fe 01       	movw	r30, r28
    29d4:	e7 54       	subi	r30, 0x47	; 71
    29d6:	ff 4f       	sbci	r31, 0xFF	; 255
    29d8:	88 ec       	ldi	r24, 0xC8	; 200
    29da:	90 e0       	ldi	r25, 0x00	; 0
    29dc:	91 83       	std	Z+1, r25	; 0x01
    29de:	80 83       	st	Z, r24
    29e0:	fe 01       	movw	r30, r28
    29e2:	e7 54       	subi	r30, 0x47	; 71
    29e4:	ff 4f       	sbci	r31, 0xFF	; 255
    29e6:	80 81       	ld	r24, Z
    29e8:	91 81       	ldd	r25, Z+1	; 0x01
    29ea:	01 97       	sbiw	r24, 0x01	; 1
    29ec:	f1 f7       	brne	.-4      	; 0x29ea <ping_pong+0x108>
    29ee:	fe 01       	movw	r30, r28
    29f0:	e7 54       	subi	r30, 0x47	; 71
    29f2:	ff 4f       	sbci	r31, 0xFF	; 255
    29f4:	91 83       	std	Z+1, r25	; 0x01
    29f6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29f8:	de 01       	movw	r26, r28
    29fa:	a5 54       	subi	r26, 0x45	; 69
    29fc:	bf 4f       	sbci	r27, 0xFF	; 255
    29fe:	fe 01       	movw	r30, r28
    2a00:	e5 54       	subi	r30, 0x45	; 69
    2a02:	ff 4f       	sbci	r31, 0xFF	; 255
    2a04:	80 81       	ld	r24, Z
    2a06:	91 81       	ldd	r25, Z+1	; 0x01
    2a08:	01 97       	sbiw	r24, 0x01	; 1
    2a0a:	11 96       	adiw	r26, 0x01	; 1
    2a0c:	9c 93       	st	X, r25
    2a0e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a10:	fe 01       	movw	r30, r28
    2a12:	e5 54       	subi	r30, 0x45	; 69
    2a14:	ff 4f       	sbci	r31, 0xFF	; 255
    2a16:	80 81       	ld	r24, Z
    2a18:	91 81       	ldd	r25, Z+1	; 0x01
    2a1a:	00 97       	sbiw	r24, 0x00	; 0
    2a1c:	d1 f6       	brne	.-76     	; 0x29d2 <ping_pong+0xf0>
    2a1e:	27 c0       	rjmp	.+78     	; 0x2a6e <ping_pong+0x18c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a20:	8e 01       	movw	r16, r28
    2a22:	05 54       	subi	r16, 0x45	; 69
    2a24:	1f 4f       	sbci	r17, 0xFF	; 255
    2a26:	fe 01       	movw	r30, r28
    2a28:	e3 54       	subi	r30, 0x43	; 67
    2a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a2c:	60 81       	ld	r22, Z
    2a2e:	71 81       	ldd	r23, Z+1	; 0x01
    2a30:	82 81       	ldd	r24, Z+2	; 0x02
    2a32:	93 81       	ldd	r25, Z+3	; 0x03
    2a34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a38:	dc 01       	movw	r26, r24
    2a3a:	cb 01       	movw	r24, r22
    2a3c:	f8 01       	movw	r30, r16
    2a3e:	91 83       	std	Z+1, r25	; 0x01
    2a40:	80 83       	st	Z, r24
    2a42:	de 01       	movw	r26, r28
    2a44:	a9 54       	subi	r26, 0x49	; 73
    2a46:	bf 4f       	sbci	r27, 0xFF	; 255
    2a48:	fe 01       	movw	r30, r28
    2a4a:	e5 54       	subi	r30, 0x45	; 69
    2a4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a4e:	80 81       	ld	r24, Z
    2a50:	91 81       	ldd	r25, Z+1	; 0x01
    2a52:	8d 93       	st	X+, r24
    2a54:	9c 93       	st	X, r25
    2a56:	fe 01       	movw	r30, r28
    2a58:	e9 54       	subi	r30, 0x49	; 73
    2a5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a5c:	80 81       	ld	r24, Z
    2a5e:	91 81       	ldd	r25, Z+1	; 0x01
    2a60:	01 97       	sbiw	r24, 0x01	; 1
    2a62:	f1 f7       	brne	.-4      	; 0x2a60 <ping_pong+0x17e>
    2a64:	fe 01       	movw	r30, r28
    2a66:	e9 54       	subi	r30, 0x49	; 73
    2a68:	ff 4f       	sbci	r31, 0xFF	; 255
    2a6a:	91 83       	std	Z+1, r25	; 0x01
    2a6c:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00000010;
    2a6e:	e8 e3       	ldi	r30, 0x38	; 56
    2a70:	f0 e0       	ldi	r31, 0x00	; 0
    2a72:	82 e0       	ldi	r24, 0x02	; 2
    2a74:	80 83       	st	Z, r24
    2a76:	fe 01       	movw	r30, r28
    2a78:	ed 54       	subi	r30, 0x4D	; 77
    2a7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7c:	80 e0       	ldi	r24, 0x00	; 0
    2a7e:	90 e0       	ldi	r25, 0x00	; 0
    2a80:	aa e7       	ldi	r26, 0x7A	; 122
    2a82:	b3 e4       	ldi	r27, 0x43	; 67
    2a84:	80 83       	st	Z, r24
    2a86:	91 83       	std	Z+1, r25	; 0x01
    2a88:	a2 83       	std	Z+2, r26	; 0x02
    2a8a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a8c:	8e 01       	movw	r16, r28
    2a8e:	01 55       	subi	r16, 0x51	; 81
    2a90:	1f 4f       	sbci	r17, 0xFF	; 255
    2a92:	fe 01       	movw	r30, r28
    2a94:	ed 54       	subi	r30, 0x4D	; 77
    2a96:	ff 4f       	sbci	r31, 0xFF	; 255
    2a98:	60 81       	ld	r22, Z
    2a9a:	71 81       	ldd	r23, Z+1	; 0x01
    2a9c:	82 81       	ldd	r24, Z+2	; 0x02
    2a9e:	93 81       	ldd	r25, Z+3	; 0x03
    2aa0:	20 e0       	ldi	r18, 0x00	; 0
    2aa2:	30 e0       	ldi	r19, 0x00	; 0
    2aa4:	4a ef       	ldi	r20, 0xFA	; 250
    2aa6:	54 e4       	ldi	r21, 0x44	; 68
    2aa8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2aac:	dc 01       	movw	r26, r24
    2aae:	cb 01       	movw	r24, r22
    2ab0:	f8 01       	movw	r30, r16
    2ab2:	80 83       	st	Z, r24
    2ab4:	91 83       	std	Z+1, r25	; 0x01
    2ab6:	a2 83       	std	Z+2, r26	; 0x02
    2ab8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2aba:	fe 01       	movw	r30, r28
    2abc:	e1 55       	subi	r30, 0x51	; 81
    2abe:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac0:	60 81       	ld	r22, Z
    2ac2:	71 81       	ldd	r23, Z+1	; 0x01
    2ac4:	82 81       	ldd	r24, Z+2	; 0x02
    2ac6:	93 81       	ldd	r25, Z+3	; 0x03
    2ac8:	20 e0       	ldi	r18, 0x00	; 0
    2aca:	30 e0       	ldi	r19, 0x00	; 0
    2acc:	40 e8       	ldi	r20, 0x80	; 128
    2ace:	5f e3       	ldi	r21, 0x3F	; 63
    2ad0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ad4:	88 23       	and	r24, r24
    2ad6:	44 f4       	brge	.+16     	; 0x2ae8 <ping_pong+0x206>
		__ticks = 1;
    2ad8:	fe 01       	movw	r30, r28
    2ada:	e3 55       	subi	r30, 0x53	; 83
    2adc:	ff 4f       	sbci	r31, 0xFF	; 255
    2ade:	81 e0       	ldi	r24, 0x01	; 1
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	91 83       	std	Z+1, r25	; 0x01
    2ae4:	80 83       	st	Z, r24
    2ae6:	64 c0       	rjmp	.+200    	; 0x2bb0 <ping_pong+0x2ce>
	else if (__tmp > 65535)
    2ae8:	fe 01       	movw	r30, r28
    2aea:	e1 55       	subi	r30, 0x51	; 81
    2aec:	ff 4f       	sbci	r31, 0xFF	; 255
    2aee:	60 81       	ld	r22, Z
    2af0:	71 81       	ldd	r23, Z+1	; 0x01
    2af2:	82 81       	ldd	r24, Z+2	; 0x02
    2af4:	93 81       	ldd	r25, Z+3	; 0x03
    2af6:	20 e0       	ldi	r18, 0x00	; 0
    2af8:	3f ef       	ldi	r19, 0xFF	; 255
    2afa:	4f e7       	ldi	r20, 0x7F	; 127
    2afc:	57 e4       	ldi	r21, 0x47	; 71
    2afe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b02:	18 16       	cp	r1, r24
    2b04:	0c f0       	brlt	.+2      	; 0x2b08 <ping_pong+0x226>
    2b06:	43 c0       	rjmp	.+134    	; 0x2b8e <ping_pong+0x2ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b08:	fe 01       	movw	r30, r28
    2b0a:	ed 54       	subi	r30, 0x4D	; 77
    2b0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b0e:	60 81       	ld	r22, Z
    2b10:	71 81       	ldd	r23, Z+1	; 0x01
    2b12:	82 81       	ldd	r24, Z+2	; 0x02
    2b14:	93 81       	ldd	r25, Z+3	; 0x03
    2b16:	20 e0       	ldi	r18, 0x00	; 0
    2b18:	30 e0       	ldi	r19, 0x00	; 0
    2b1a:	40 e2       	ldi	r20, 0x20	; 32
    2b1c:	51 e4       	ldi	r21, 0x41	; 65
    2b1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b22:	dc 01       	movw	r26, r24
    2b24:	cb 01       	movw	r24, r22
    2b26:	8e 01       	movw	r16, r28
    2b28:	03 55       	subi	r16, 0x53	; 83
    2b2a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b2c:	bc 01       	movw	r22, r24
    2b2e:	cd 01       	movw	r24, r26
    2b30:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b34:	dc 01       	movw	r26, r24
    2b36:	cb 01       	movw	r24, r22
    2b38:	f8 01       	movw	r30, r16
    2b3a:	91 83       	std	Z+1, r25	; 0x01
    2b3c:	80 83       	st	Z, r24
    2b3e:	1f c0       	rjmp	.+62     	; 0x2b7e <ping_pong+0x29c>
    2b40:	fe 01       	movw	r30, r28
    2b42:	e5 55       	subi	r30, 0x55	; 85
    2b44:	ff 4f       	sbci	r31, 0xFF	; 255
    2b46:	88 ec       	ldi	r24, 0xC8	; 200
    2b48:	90 e0       	ldi	r25, 0x00	; 0
    2b4a:	91 83       	std	Z+1, r25	; 0x01
    2b4c:	80 83       	st	Z, r24
    2b4e:	fe 01       	movw	r30, r28
    2b50:	e5 55       	subi	r30, 0x55	; 85
    2b52:	ff 4f       	sbci	r31, 0xFF	; 255
    2b54:	80 81       	ld	r24, Z
    2b56:	91 81       	ldd	r25, Z+1	; 0x01
    2b58:	01 97       	sbiw	r24, 0x01	; 1
    2b5a:	f1 f7       	brne	.-4      	; 0x2b58 <ping_pong+0x276>
    2b5c:	fe 01       	movw	r30, r28
    2b5e:	e5 55       	subi	r30, 0x55	; 85
    2b60:	ff 4f       	sbci	r31, 0xFF	; 255
    2b62:	91 83       	std	Z+1, r25	; 0x01
    2b64:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b66:	de 01       	movw	r26, r28
    2b68:	a3 55       	subi	r26, 0x53	; 83
    2b6a:	bf 4f       	sbci	r27, 0xFF	; 255
    2b6c:	fe 01       	movw	r30, r28
    2b6e:	e3 55       	subi	r30, 0x53	; 83
    2b70:	ff 4f       	sbci	r31, 0xFF	; 255
    2b72:	80 81       	ld	r24, Z
    2b74:	91 81       	ldd	r25, Z+1	; 0x01
    2b76:	01 97       	sbiw	r24, 0x01	; 1
    2b78:	11 96       	adiw	r26, 0x01	; 1
    2b7a:	9c 93       	st	X, r25
    2b7c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b7e:	fe 01       	movw	r30, r28
    2b80:	e3 55       	subi	r30, 0x53	; 83
    2b82:	ff 4f       	sbci	r31, 0xFF	; 255
    2b84:	80 81       	ld	r24, Z
    2b86:	91 81       	ldd	r25, Z+1	; 0x01
    2b88:	00 97       	sbiw	r24, 0x00	; 0
    2b8a:	d1 f6       	brne	.-76     	; 0x2b40 <ping_pong+0x25e>
    2b8c:	27 c0       	rjmp	.+78     	; 0x2bdc <ping_pong+0x2fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b8e:	8e 01       	movw	r16, r28
    2b90:	03 55       	subi	r16, 0x53	; 83
    2b92:	1f 4f       	sbci	r17, 0xFF	; 255
    2b94:	fe 01       	movw	r30, r28
    2b96:	e1 55       	subi	r30, 0x51	; 81
    2b98:	ff 4f       	sbci	r31, 0xFF	; 255
    2b9a:	60 81       	ld	r22, Z
    2b9c:	71 81       	ldd	r23, Z+1	; 0x01
    2b9e:	82 81       	ldd	r24, Z+2	; 0x02
    2ba0:	93 81       	ldd	r25, Z+3	; 0x03
    2ba2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ba6:	dc 01       	movw	r26, r24
    2ba8:	cb 01       	movw	r24, r22
    2baa:	f8 01       	movw	r30, r16
    2bac:	91 83       	std	Z+1, r25	; 0x01
    2bae:	80 83       	st	Z, r24
    2bb0:	de 01       	movw	r26, r28
    2bb2:	a7 55       	subi	r26, 0x57	; 87
    2bb4:	bf 4f       	sbci	r27, 0xFF	; 255
    2bb6:	fe 01       	movw	r30, r28
    2bb8:	e3 55       	subi	r30, 0x53	; 83
    2bba:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbc:	80 81       	ld	r24, Z
    2bbe:	91 81       	ldd	r25, Z+1	; 0x01
    2bc0:	8d 93       	st	X+, r24
    2bc2:	9c 93       	st	X, r25
    2bc4:	fe 01       	movw	r30, r28
    2bc6:	e7 55       	subi	r30, 0x57	; 87
    2bc8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bca:	80 81       	ld	r24, Z
    2bcc:	91 81       	ldd	r25, Z+1	; 0x01
    2bce:	01 97       	sbiw	r24, 0x01	; 1
    2bd0:	f1 f7       	brne	.-4      	; 0x2bce <ping_pong+0x2ec>
    2bd2:	fe 01       	movw	r30, r28
    2bd4:	e7 55       	subi	r30, 0x57	; 87
    2bd6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd8:	91 83       	std	Z+1, r25	; 0x01
    2bda:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00000100;
    2bdc:	e8 e3       	ldi	r30, 0x38	; 56
    2bde:	f0 e0       	ldi	r31, 0x00	; 0
    2be0:	84 e0       	ldi	r24, 0x04	; 4
    2be2:	80 83       	st	Z, r24
    2be4:	fe 01       	movw	r30, r28
    2be6:	eb 55       	subi	r30, 0x5B	; 91
    2be8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bea:	80 e0       	ldi	r24, 0x00	; 0
    2bec:	90 e0       	ldi	r25, 0x00	; 0
    2bee:	aa e7       	ldi	r26, 0x7A	; 122
    2bf0:	b3 e4       	ldi	r27, 0x43	; 67
    2bf2:	80 83       	st	Z, r24
    2bf4:	91 83       	std	Z+1, r25	; 0x01
    2bf6:	a2 83       	std	Z+2, r26	; 0x02
    2bf8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bfa:	8e 01       	movw	r16, r28
    2bfc:	0f 55       	subi	r16, 0x5F	; 95
    2bfe:	1f 4f       	sbci	r17, 0xFF	; 255
    2c00:	fe 01       	movw	r30, r28
    2c02:	eb 55       	subi	r30, 0x5B	; 91
    2c04:	ff 4f       	sbci	r31, 0xFF	; 255
    2c06:	60 81       	ld	r22, Z
    2c08:	71 81       	ldd	r23, Z+1	; 0x01
    2c0a:	82 81       	ldd	r24, Z+2	; 0x02
    2c0c:	93 81       	ldd	r25, Z+3	; 0x03
    2c0e:	20 e0       	ldi	r18, 0x00	; 0
    2c10:	30 e0       	ldi	r19, 0x00	; 0
    2c12:	4a ef       	ldi	r20, 0xFA	; 250
    2c14:	54 e4       	ldi	r21, 0x44	; 68
    2c16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c1a:	dc 01       	movw	r26, r24
    2c1c:	cb 01       	movw	r24, r22
    2c1e:	f8 01       	movw	r30, r16
    2c20:	80 83       	st	Z, r24
    2c22:	91 83       	std	Z+1, r25	; 0x01
    2c24:	a2 83       	std	Z+2, r26	; 0x02
    2c26:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c28:	fe 01       	movw	r30, r28
    2c2a:	ef 55       	subi	r30, 0x5F	; 95
    2c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2e:	60 81       	ld	r22, Z
    2c30:	71 81       	ldd	r23, Z+1	; 0x01
    2c32:	82 81       	ldd	r24, Z+2	; 0x02
    2c34:	93 81       	ldd	r25, Z+3	; 0x03
    2c36:	20 e0       	ldi	r18, 0x00	; 0
    2c38:	30 e0       	ldi	r19, 0x00	; 0
    2c3a:	40 e8       	ldi	r20, 0x80	; 128
    2c3c:	5f e3       	ldi	r21, 0x3F	; 63
    2c3e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c42:	88 23       	and	r24, r24
    2c44:	44 f4       	brge	.+16     	; 0x2c56 <ping_pong+0x374>
		__ticks = 1;
    2c46:	fe 01       	movw	r30, r28
    2c48:	e1 56       	subi	r30, 0x61	; 97
    2c4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4c:	81 e0       	ldi	r24, 0x01	; 1
    2c4e:	90 e0       	ldi	r25, 0x00	; 0
    2c50:	91 83       	std	Z+1, r25	; 0x01
    2c52:	80 83       	st	Z, r24
    2c54:	64 c0       	rjmp	.+200    	; 0x2d1e <ping_pong+0x43c>
	else if (__tmp > 65535)
    2c56:	fe 01       	movw	r30, r28
    2c58:	ef 55       	subi	r30, 0x5F	; 95
    2c5a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c5c:	60 81       	ld	r22, Z
    2c5e:	71 81       	ldd	r23, Z+1	; 0x01
    2c60:	82 81       	ldd	r24, Z+2	; 0x02
    2c62:	93 81       	ldd	r25, Z+3	; 0x03
    2c64:	20 e0       	ldi	r18, 0x00	; 0
    2c66:	3f ef       	ldi	r19, 0xFF	; 255
    2c68:	4f e7       	ldi	r20, 0x7F	; 127
    2c6a:	57 e4       	ldi	r21, 0x47	; 71
    2c6c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c70:	18 16       	cp	r1, r24
    2c72:	0c f0       	brlt	.+2      	; 0x2c76 <ping_pong+0x394>
    2c74:	43 c0       	rjmp	.+134    	; 0x2cfc <ping_pong+0x41a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c76:	fe 01       	movw	r30, r28
    2c78:	eb 55       	subi	r30, 0x5B	; 91
    2c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7c:	60 81       	ld	r22, Z
    2c7e:	71 81       	ldd	r23, Z+1	; 0x01
    2c80:	82 81       	ldd	r24, Z+2	; 0x02
    2c82:	93 81       	ldd	r25, Z+3	; 0x03
    2c84:	20 e0       	ldi	r18, 0x00	; 0
    2c86:	30 e0       	ldi	r19, 0x00	; 0
    2c88:	40 e2       	ldi	r20, 0x20	; 32
    2c8a:	51 e4       	ldi	r21, 0x41	; 65
    2c8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c90:	dc 01       	movw	r26, r24
    2c92:	cb 01       	movw	r24, r22
    2c94:	8e 01       	movw	r16, r28
    2c96:	01 56       	subi	r16, 0x61	; 97
    2c98:	1f 4f       	sbci	r17, 0xFF	; 255
    2c9a:	bc 01       	movw	r22, r24
    2c9c:	cd 01       	movw	r24, r26
    2c9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ca2:	dc 01       	movw	r26, r24
    2ca4:	cb 01       	movw	r24, r22
    2ca6:	f8 01       	movw	r30, r16
    2ca8:	91 83       	std	Z+1, r25	; 0x01
    2caa:	80 83       	st	Z, r24
    2cac:	1f c0       	rjmp	.+62     	; 0x2cec <ping_pong+0x40a>
    2cae:	fe 01       	movw	r30, r28
    2cb0:	e3 56       	subi	r30, 0x63	; 99
    2cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb4:	88 ec       	ldi	r24, 0xC8	; 200
    2cb6:	90 e0       	ldi	r25, 0x00	; 0
    2cb8:	91 83       	std	Z+1, r25	; 0x01
    2cba:	80 83       	st	Z, r24
    2cbc:	fe 01       	movw	r30, r28
    2cbe:	e3 56       	subi	r30, 0x63	; 99
    2cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cc2:	80 81       	ld	r24, Z
    2cc4:	91 81       	ldd	r25, Z+1	; 0x01
    2cc6:	01 97       	sbiw	r24, 0x01	; 1
    2cc8:	f1 f7       	brne	.-4      	; 0x2cc6 <ping_pong+0x3e4>
    2cca:	fe 01       	movw	r30, r28
    2ccc:	e3 56       	subi	r30, 0x63	; 99
    2cce:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd0:	91 83       	std	Z+1, r25	; 0x01
    2cd2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cd4:	de 01       	movw	r26, r28
    2cd6:	a1 56       	subi	r26, 0x61	; 97
    2cd8:	bf 4f       	sbci	r27, 0xFF	; 255
    2cda:	fe 01       	movw	r30, r28
    2cdc:	e1 56       	subi	r30, 0x61	; 97
    2cde:	ff 4f       	sbci	r31, 0xFF	; 255
    2ce0:	80 81       	ld	r24, Z
    2ce2:	91 81       	ldd	r25, Z+1	; 0x01
    2ce4:	01 97       	sbiw	r24, 0x01	; 1
    2ce6:	11 96       	adiw	r26, 0x01	; 1
    2ce8:	9c 93       	st	X, r25
    2cea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cec:	fe 01       	movw	r30, r28
    2cee:	e1 56       	subi	r30, 0x61	; 97
    2cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf2:	80 81       	ld	r24, Z
    2cf4:	91 81       	ldd	r25, Z+1	; 0x01
    2cf6:	00 97       	sbiw	r24, 0x00	; 0
    2cf8:	d1 f6       	brne	.-76     	; 0x2cae <ping_pong+0x3cc>
    2cfa:	27 c0       	rjmp	.+78     	; 0x2d4a <ping_pong+0x468>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cfc:	8e 01       	movw	r16, r28
    2cfe:	01 56       	subi	r16, 0x61	; 97
    2d00:	1f 4f       	sbci	r17, 0xFF	; 255
    2d02:	fe 01       	movw	r30, r28
    2d04:	ef 55       	subi	r30, 0x5F	; 95
    2d06:	ff 4f       	sbci	r31, 0xFF	; 255
    2d08:	60 81       	ld	r22, Z
    2d0a:	71 81       	ldd	r23, Z+1	; 0x01
    2d0c:	82 81       	ldd	r24, Z+2	; 0x02
    2d0e:	93 81       	ldd	r25, Z+3	; 0x03
    2d10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d14:	dc 01       	movw	r26, r24
    2d16:	cb 01       	movw	r24, r22
    2d18:	f8 01       	movw	r30, r16
    2d1a:	91 83       	std	Z+1, r25	; 0x01
    2d1c:	80 83       	st	Z, r24
    2d1e:	de 01       	movw	r26, r28
    2d20:	a5 56       	subi	r26, 0x65	; 101
    2d22:	bf 4f       	sbci	r27, 0xFF	; 255
    2d24:	fe 01       	movw	r30, r28
    2d26:	e1 56       	subi	r30, 0x61	; 97
    2d28:	ff 4f       	sbci	r31, 0xFF	; 255
    2d2a:	80 81       	ld	r24, Z
    2d2c:	91 81       	ldd	r25, Z+1	; 0x01
    2d2e:	8d 93       	st	X+, r24
    2d30:	9c 93       	st	X, r25
    2d32:	fe 01       	movw	r30, r28
    2d34:	e5 56       	subi	r30, 0x65	; 101
    2d36:	ff 4f       	sbci	r31, 0xFF	; 255
    2d38:	80 81       	ld	r24, Z
    2d3a:	91 81       	ldd	r25, Z+1	; 0x01
    2d3c:	01 97       	sbiw	r24, 0x01	; 1
    2d3e:	f1 f7       	brne	.-4      	; 0x2d3c <ping_pong+0x45a>
    2d40:	fe 01       	movw	r30, r28
    2d42:	e5 56       	subi	r30, 0x65	; 101
    2d44:	ff 4f       	sbci	r31, 0xFF	; 255
    2d46:	91 83       	std	Z+1, r25	; 0x01
    2d48:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00001000;
    2d4a:	e8 e3       	ldi	r30, 0x38	; 56
    2d4c:	f0 e0       	ldi	r31, 0x00	; 0
    2d4e:	88 e0       	ldi	r24, 0x08	; 8
    2d50:	80 83       	st	Z, r24
    2d52:	fe 01       	movw	r30, r28
    2d54:	e9 56       	subi	r30, 0x69	; 105
    2d56:	ff 4f       	sbci	r31, 0xFF	; 255
    2d58:	80 e0       	ldi	r24, 0x00	; 0
    2d5a:	90 e0       	ldi	r25, 0x00	; 0
    2d5c:	aa e7       	ldi	r26, 0x7A	; 122
    2d5e:	b3 e4       	ldi	r27, 0x43	; 67
    2d60:	80 83       	st	Z, r24
    2d62:	91 83       	std	Z+1, r25	; 0x01
    2d64:	a2 83       	std	Z+2, r26	; 0x02
    2d66:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d68:	8e 01       	movw	r16, r28
    2d6a:	0d 56       	subi	r16, 0x6D	; 109
    2d6c:	1f 4f       	sbci	r17, 0xFF	; 255
    2d6e:	fe 01       	movw	r30, r28
    2d70:	e9 56       	subi	r30, 0x69	; 105
    2d72:	ff 4f       	sbci	r31, 0xFF	; 255
    2d74:	60 81       	ld	r22, Z
    2d76:	71 81       	ldd	r23, Z+1	; 0x01
    2d78:	82 81       	ldd	r24, Z+2	; 0x02
    2d7a:	93 81       	ldd	r25, Z+3	; 0x03
    2d7c:	20 e0       	ldi	r18, 0x00	; 0
    2d7e:	30 e0       	ldi	r19, 0x00	; 0
    2d80:	4a ef       	ldi	r20, 0xFA	; 250
    2d82:	54 e4       	ldi	r21, 0x44	; 68
    2d84:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d88:	dc 01       	movw	r26, r24
    2d8a:	cb 01       	movw	r24, r22
    2d8c:	f8 01       	movw	r30, r16
    2d8e:	80 83       	st	Z, r24
    2d90:	91 83       	std	Z+1, r25	; 0x01
    2d92:	a2 83       	std	Z+2, r26	; 0x02
    2d94:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d96:	fe 01       	movw	r30, r28
    2d98:	ed 56       	subi	r30, 0x6D	; 109
    2d9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d9c:	60 81       	ld	r22, Z
    2d9e:	71 81       	ldd	r23, Z+1	; 0x01
    2da0:	82 81       	ldd	r24, Z+2	; 0x02
    2da2:	93 81       	ldd	r25, Z+3	; 0x03
    2da4:	20 e0       	ldi	r18, 0x00	; 0
    2da6:	30 e0       	ldi	r19, 0x00	; 0
    2da8:	40 e8       	ldi	r20, 0x80	; 128
    2daa:	5f e3       	ldi	r21, 0x3F	; 63
    2dac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2db0:	88 23       	and	r24, r24
    2db2:	44 f4       	brge	.+16     	; 0x2dc4 <ping_pong+0x4e2>
		__ticks = 1;
    2db4:	fe 01       	movw	r30, r28
    2db6:	ef 56       	subi	r30, 0x6F	; 111
    2db8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dba:	81 e0       	ldi	r24, 0x01	; 1
    2dbc:	90 e0       	ldi	r25, 0x00	; 0
    2dbe:	91 83       	std	Z+1, r25	; 0x01
    2dc0:	80 83       	st	Z, r24
    2dc2:	64 c0       	rjmp	.+200    	; 0x2e8c <ping_pong+0x5aa>
	else if (__tmp > 65535)
    2dc4:	fe 01       	movw	r30, r28
    2dc6:	ed 56       	subi	r30, 0x6D	; 109
    2dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dca:	60 81       	ld	r22, Z
    2dcc:	71 81       	ldd	r23, Z+1	; 0x01
    2dce:	82 81       	ldd	r24, Z+2	; 0x02
    2dd0:	93 81       	ldd	r25, Z+3	; 0x03
    2dd2:	20 e0       	ldi	r18, 0x00	; 0
    2dd4:	3f ef       	ldi	r19, 0xFF	; 255
    2dd6:	4f e7       	ldi	r20, 0x7F	; 127
    2dd8:	57 e4       	ldi	r21, 0x47	; 71
    2dda:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2dde:	18 16       	cp	r1, r24
    2de0:	0c f0       	brlt	.+2      	; 0x2de4 <ping_pong+0x502>
    2de2:	43 c0       	rjmp	.+134    	; 0x2e6a <ping_pong+0x588>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2de4:	fe 01       	movw	r30, r28
    2de6:	e9 56       	subi	r30, 0x69	; 105
    2de8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dea:	60 81       	ld	r22, Z
    2dec:	71 81       	ldd	r23, Z+1	; 0x01
    2dee:	82 81       	ldd	r24, Z+2	; 0x02
    2df0:	93 81       	ldd	r25, Z+3	; 0x03
    2df2:	20 e0       	ldi	r18, 0x00	; 0
    2df4:	30 e0       	ldi	r19, 0x00	; 0
    2df6:	40 e2       	ldi	r20, 0x20	; 32
    2df8:	51 e4       	ldi	r21, 0x41	; 65
    2dfa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2dfe:	dc 01       	movw	r26, r24
    2e00:	cb 01       	movw	r24, r22
    2e02:	8e 01       	movw	r16, r28
    2e04:	0f 56       	subi	r16, 0x6F	; 111
    2e06:	1f 4f       	sbci	r17, 0xFF	; 255
    2e08:	bc 01       	movw	r22, r24
    2e0a:	cd 01       	movw	r24, r26
    2e0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e10:	dc 01       	movw	r26, r24
    2e12:	cb 01       	movw	r24, r22
    2e14:	f8 01       	movw	r30, r16
    2e16:	91 83       	std	Z+1, r25	; 0x01
    2e18:	80 83       	st	Z, r24
    2e1a:	1f c0       	rjmp	.+62     	; 0x2e5a <ping_pong+0x578>
    2e1c:	fe 01       	movw	r30, r28
    2e1e:	e1 57       	subi	r30, 0x71	; 113
    2e20:	ff 4f       	sbci	r31, 0xFF	; 255
    2e22:	88 ec       	ldi	r24, 0xC8	; 200
    2e24:	90 e0       	ldi	r25, 0x00	; 0
    2e26:	91 83       	std	Z+1, r25	; 0x01
    2e28:	80 83       	st	Z, r24
    2e2a:	fe 01       	movw	r30, r28
    2e2c:	e1 57       	subi	r30, 0x71	; 113
    2e2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e30:	80 81       	ld	r24, Z
    2e32:	91 81       	ldd	r25, Z+1	; 0x01
    2e34:	01 97       	sbiw	r24, 0x01	; 1
    2e36:	f1 f7       	brne	.-4      	; 0x2e34 <ping_pong+0x552>
    2e38:	fe 01       	movw	r30, r28
    2e3a:	e1 57       	subi	r30, 0x71	; 113
    2e3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3e:	91 83       	std	Z+1, r25	; 0x01
    2e40:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e42:	de 01       	movw	r26, r28
    2e44:	af 56       	subi	r26, 0x6F	; 111
    2e46:	bf 4f       	sbci	r27, 0xFF	; 255
    2e48:	fe 01       	movw	r30, r28
    2e4a:	ef 56       	subi	r30, 0x6F	; 111
    2e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e4e:	80 81       	ld	r24, Z
    2e50:	91 81       	ldd	r25, Z+1	; 0x01
    2e52:	01 97       	sbiw	r24, 0x01	; 1
    2e54:	11 96       	adiw	r26, 0x01	; 1
    2e56:	9c 93       	st	X, r25
    2e58:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e5a:	fe 01       	movw	r30, r28
    2e5c:	ef 56       	subi	r30, 0x6F	; 111
    2e5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e60:	80 81       	ld	r24, Z
    2e62:	91 81       	ldd	r25, Z+1	; 0x01
    2e64:	00 97       	sbiw	r24, 0x00	; 0
    2e66:	d1 f6       	brne	.-76     	; 0x2e1c <ping_pong+0x53a>
    2e68:	27 c0       	rjmp	.+78     	; 0x2eb8 <ping_pong+0x5d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e6a:	8e 01       	movw	r16, r28
    2e6c:	0f 56       	subi	r16, 0x6F	; 111
    2e6e:	1f 4f       	sbci	r17, 0xFF	; 255
    2e70:	fe 01       	movw	r30, r28
    2e72:	ed 56       	subi	r30, 0x6D	; 109
    2e74:	ff 4f       	sbci	r31, 0xFF	; 255
    2e76:	60 81       	ld	r22, Z
    2e78:	71 81       	ldd	r23, Z+1	; 0x01
    2e7a:	82 81       	ldd	r24, Z+2	; 0x02
    2e7c:	93 81       	ldd	r25, Z+3	; 0x03
    2e7e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e82:	dc 01       	movw	r26, r24
    2e84:	cb 01       	movw	r24, r22
    2e86:	f8 01       	movw	r30, r16
    2e88:	91 83       	std	Z+1, r25	; 0x01
    2e8a:	80 83       	st	Z, r24
    2e8c:	de 01       	movw	r26, r28
    2e8e:	a3 57       	subi	r26, 0x73	; 115
    2e90:	bf 4f       	sbci	r27, 0xFF	; 255
    2e92:	fe 01       	movw	r30, r28
    2e94:	ef 56       	subi	r30, 0x6F	; 111
    2e96:	ff 4f       	sbci	r31, 0xFF	; 255
    2e98:	80 81       	ld	r24, Z
    2e9a:	91 81       	ldd	r25, Z+1	; 0x01
    2e9c:	8d 93       	st	X+, r24
    2e9e:	9c 93       	st	X, r25
    2ea0:	fe 01       	movw	r30, r28
    2ea2:	e3 57       	subi	r30, 0x73	; 115
    2ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea6:	80 81       	ld	r24, Z
    2ea8:	91 81       	ldd	r25, Z+1	; 0x01
    2eaa:	01 97       	sbiw	r24, 0x01	; 1
    2eac:	f1 f7       	brne	.-4      	; 0x2eaa <ping_pong+0x5c8>
    2eae:	fe 01       	movw	r30, r28
    2eb0:	e3 57       	subi	r30, 0x73	; 115
    2eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb4:	91 83       	std	Z+1, r25	; 0x01
    2eb6:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00010000;
    2eb8:	e8 e3       	ldi	r30, 0x38	; 56
    2eba:	f0 e0       	ldi	r31, 0x00	; 0
    2ebc:	80 e1       	ldi	r24, 0x10	; 16
    2ebe:	80 83       	st	Z, r24
    2ec0:	fe 01       	movw	r30, r28
    2ec2:	e7 57       	subi	r30, 0x77	; 119
    2ec4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec6:	80 e0       	ldi	r24, 0x00	; 0
    2ec8:	90 e0       	ldi	r25, 0x00	; 0
    2eca:	aa e7       	ldi	r26, 0x7A	; 122
    2ecc:	b3 e4       	ldi	r27, 0x43	; 67
    2ece:	80 83       	st	Z, r24
    2ed0:	91 83       	std	Z+1, r25	; 0x01
    2ed2:	a2 83       	std	Z+2, r26	; 0x02
    2ed4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ed6:	8e 01       	movw	r16, r28
    2ed8:	0b 57       	subi	r16, 0x7B	; 123
    2eda:	1f 4f       	sbci	r17, 0xFF	; 255
    2edc:	fe 01       	movw	r30, r28
    2ede:	e7 57       	subi	r30, 0x77	; 119
    2ee0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee2:	60 81       	ld	r22, Z
    2ee4:	71 81       	ldd	r23, Z+1	; 0x01
    2ee6:	82 81       	ldd	r24, Z+2	; 0x02
    2ee8:	93 81       	ldd	r25, Z+3	; 0x03
    2eea:	20 e0       	ldi	r18, 0x00	; 0
    2eec:	30 e0       	ldi	r19, 0x00	; 0
    2eee:	4a ef       	ldi	r20, 0xFA	; 250
    2ef0:	54 e4       	ldi	r21, 0x44	; 68
    2ef2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ef6:	dc 01       	movw	r26, r24
    2ef8:	cb 01       	movw	r24, r22
    2efa:	f8 01       	movw	r30, r16
    2efc:	80 83       	st	Z, r24
    2efe:	91 83       	std	Z+1, r25	; 0x01
    2f00:	a2 83       	std	Z+2, r26	; 0x02
    2f02:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f04:	fe 01       	movw	r30, r28
    2f06:	eb 57       	subi	r30, 0x7B	; 123
    2f08:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0a:	60 81       	ld	r22, Z
    2f0c:	71 81       	ldd	r23, Z+1	; 0x01
    2f0e:	82 81       	ldd	r24, Z+2	; 0x02
    2f10:	93 81       	ldd	r25, Z+3	; 0x03
    2f12:	20 e0       	ldi	r18, 0x00	; 0
    2f14:	30 e0       	ldi	r19, 0x00	; 0
    2f16:	40 e8       	ldi	r20, 0x80	; 128
    2f18:	5f e3       	ldi	r21, 0x3F	; 63
    2f1a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2f1e:	88 23       	and	r24, r24
    2f20:	44 f4       	brge	.+16     	; 0x2f32 <ping_pong+0x650>
		__ticks = 1;
    2f22:	fe 01       	movw	r30, r28
    2f24:	ed 57       	subi	r30, 0x7D	; 125
    2f26:	ff 4f       	sbci	r31, 0xFF	; 255
    2f28:	81 e0       	ldi	r24, 0x01	; 1
    2f2a:	90 e0       	ldi	r25, 0x00	; 0
    2f2c:	91 83       	std	Z+1, r25	; 0x01
    2f2e:	80 83       	st	Z, r24
    2f30:	64 c0       	rjmp	.+200    	; 0x2ffa <ping_pong+0x718>
	else if (__tmp > 65535)
    2f32:	fe 01       	movw	r30, r28
    2f34:	eb 57       	subi	r30, 0x7B	; 123
    2f36:	ff 4f       	sbci	r31, 0xFF	; 255
    2f38:	60 81       	ld	r22, Z
    2f3a:	71 81       	ldd	r23, Z+1	; 0x01
    2f3c:	82 81       	ldd	r24, Z+2	; 0x02
    2f3e:	93 81       	ldd	r25, Z+3	; 0x03
    2f40:	20 e0       	ldi	r18, 0x00	; 0
    2f42:	3f ef       	ldi	r19, 0xFF	; 255
    2f44:	4f e7       	ldi	r20, 0x7F	; 127
    2f46:	57 e4       	ldi	r21, 0x47	; 71
    2f48:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2f4c:	18 16       	cp	r1, r24
    2f4e:	0c f0       	brlt	.+2      	; 0x2f52 <ping_pong+0x670>
    2f50:	43 c0       	rjmp	.+134    	; 0x2fd8 <ping_pong+0x6f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f52:	fe 01       	movw	r30, r28
    2f54:	e7 57       	subi	r30, 0x77	; 119
    2f56:	ff 4f       	sbci	r31, 0xFF	; 255
    2f58:	60 81       	ld	r22, Z
    2f5a:	71 81       	ldd	r23, Z+1	; 0x01
    2f5c:	82 81       	ldd	r24, Z+2	; 0x02
    2f5e:	93 81       	ldd	r25, Z+3	; 0x03
    2f60:	20 e0       	ldi	r18, 0x00	; 0
    2f62:	30 e0       	ldi	r19, 0x00	; 0
    2f64:	40 e2       	ldi	r20, 0x20	; 32
    2f66:	51 e4       	ldi	r21, 0x41	; 65
    2f68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f6c:	dc 01       	movw	r26, r24
    2f6e:	cb 01       	movw	r24, r22
    2f70:	8e 01       	movw	r16, r28
    2f72:	0d 57       	subi	r16, 0x7D	; 125
    2f74:	1f 4f       	sbci	r17, 0xFF	; 255
    2f76:	bc 01       	movw	r22, r24
    2f78:	cd 01       	movw	r24, r26
    2f7a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f7e:	dc 01       	movw	r26, r24
    2f80:	cb 01       	movw	r24, r22
    2f82:	f8 01       	movw	r30, r16
    2f84:	91 83       	std	Z+1, r25	; 0x01
    2f86:	80 83       	st	Z, r24
    2f88:	1f c0       	rjmp	.+62     	; 0x2fc8 <ping_pong+0x6e6>
    2f8a:	fe 01       	movw	r30, r28
    2f8c:	ef 57       	subi	r30, 0x7F	; 127
    2f8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f90:	88 ec       	ldi	r24, 0xC8	; 200
    2f92:	90 e0       	ldi	r25, 0x00	; 0
    2f94:	91 83       	std	Z+1, r25	; 0x01
    2f96:	80 83       	st	Z, r24
    2f98:	fe 01       	movw	r30, r28
    2f9a:	ef 57       	subi	r30, 0x7F	; 127
    2f9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f9e:	80 81       	ld	r24, Z
    2fa0:	91 81       	ldd	r25, Z+1	; 0x01
    2fa2:	01 97       	sbiw	r24, 0x01	; 1
    2fa4:	f1 f7       	brne	.-4      	; 0x2fa2 <ping_pong+0x6c0>
    2fa6:	fe 01       	movw	r30, r28
    2fa8:	ef 57       	subi	r30, 0x7F	; 127
    2faa:	ff 4f       	sbci	r31, 0xFF	; 255
    2fac:	91 83       	std	Z+1, r25	; 0x01
    2fae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fb0:	de 01       	movw	r26, r28
    2fb2:	ad 57       	subi	r26, 0x7D	; 125
    2fb4:	bf 4f       	sbci	r27, 0xFF	; 255
    2fb6:	fe 01       	movw	r30, r28
    2fb8:	ed 57       	subi	r30, 0x7D	; 125
    2fba:	ff 4f       	sbci	r31, 0xFF	; 255
    2fbc:	80 81       	ld	r24, Z
    2fbe:	91 81       	ldd	r25, Z+1	; 0x01
    2fc0:	01 97       	sbiw	r24, 0x01	; 1
    2fc2:	11 96       	adiw	r26, 0x01	; 1
    2fc4:	9c 93       	st	X, r25
    2fc6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fc8:	fe 01       	movw	r30, r28
    2fca:	ed 57       	subi	r30, 0x7D	; 125
    2fcc:	ff 4f       	sbci	r31, 0xFF	; 255
    2fce:	80 81       	ld	r24, Z
    2fd0:	91 81       	ldd	r25, Z+1	; 0x01
    2fd2:	00 97       	sbiw	r24, 0x00	; 0
    2fd4:	d1 f6       	brne	.-76     	; 0x2f8a <ping_pong+0x6a8>
    2fd6:	27 c0       	rjmp	.+78     	; 0x3026 <ping_pong+0x744>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fd8:	8e 01       	movw	r16, r28
    2fda:	0d 57       	subi	r16, 0x7D	; 125
    2fdc:	1f 4f       	sbci	r17, 0xFF	; 255
    2fde:	fe 01       	movw	r30, r28
    2fe0:	eb 57       	subi	r30, 0x7B	; 123
    2fe2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe4:	60 81       	ld	r22, Z
    2fe6:	71 81       	ldd	r23, Z+1	; 0x01
    2fe8:	82 81       	ldd	r24, Z+2	; 0x02
    2fea:	93 81       	ldd	r25, Z+3	; 0x03
    2fec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ff0:	dc 01       	movw	r26, r24
    2ff2:	cb 01       	movw	r24, r22
    2ff4:	f8 01       	movw	r30, r16
    2ff6:	91 83       	std	Z+1, r25	; 0x01
    2ff8:	80 83       	st	Z, r24
    2ffa:	de 01       	movw	r26, r28
    2ffc:	a1 58       	subi	r26, 0x81	; 129
    2ffe:	bf 4f       	sbci	r27, 0xFF	; 255
    3000:	fe 01       	movw	r30, r28
    3002:	ed 57       	subi	r30, 0x7D	; 125
    3004:	ff 4f       	sbci	r31, 0xFF	; 255
    3006:	80 81       	ld	r24, Z
    3008:	91 81       	ldd	r25, Z+1	; 0x01
    300a:	8d 93       	st	X+, r24
    300c:	9c 93       	st	X, r25
    300e:	fe 01       	movw	r30, r28
    3010:	e1 58       	subi	r30, 0x81	; 129
    3012:	ff 4f       	sbci	r31, 0xFF	; 255
    3014:	80 81       	ld	r24, Z
    3016:	91 81       	ldd	r25, Z+1	; 0x01
    3018:	01 97       	sbiw	r24, 0x01	; 1
    301a:	f1 f7       	brne	.-4      	; 0x3018 <ping_pong+0x736>
    301c:	fe 01       	movw	r30, r28
    301e:	e1 58       	subi	r30, 0x81	; 129
    3020:	ff 4f       	sbci	r31, 0xFF	; 255
    3022:	91 83       	std	Z+1, r25	; 0x01
    3024:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00100000;
    3026:	e8 e3       	ldi	r30, 0x38	; 56
    3028:	f0 e0       	ldi	r31, 0x00	; 0
    302a:	80 e2       	ldi	r24, 0x20	; 32
    302c:	80 83       	st	Z, r24
    302e:	fe 01       	movw	r30, r28
    3030:	e5 58       	subi	r30, 0x85	; 133
    3032:	ff 4f       	sbci	r31, 0xFF	; 255
    3034:	80 e0       	ldi	r24, 0x00	; 0
    3036:	90 e0       	ldi	r25, 0x00	; 0
    3038:	aa e7       	ldi	r26, 0x7A	; 122
    303a:	b3 e4       	ldi	r27, 0x43	; 67
    303c:	80 83       	st	Z, r24
    303e:	91 83       	std	Z+1, r25	; 0x01
    3040:	a2 83       	std	Z+2, r26	; 0x02
    3042:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3044:	8e 01       	movw	r16, r28
    3046:	09 58       	subi	r16, 0x89	; 137
    3048:	1f 4f       	sbci	r17, 0xFF	; 255
    304a:	fe 01       	movw	r30, r28
    304c:	e5 58       	subi	r30, 0x85	; 133
    304e:	ff 4f       	sbci	r31, 0xFF	; 255
    3050:	60 81       	ld	r22, Z
    3052:	71 81       	ldd	r23, Z+1	; 0x01
    3054:	82 81       	ldd	r24, Z+2	; 0x02
    3056:	93 81       	ldd	r25, Z+3	; 0x03
    3058:	20 e0       	ldi	r18, 0x00	; 0
    305a:	30 e0       	ldi	r19, 0x00	; 0
    305c:	4a ef       	ldi	r20, 0xFA	; 250
    305e:	54 e4       	ldi	r21, 0x44	; 68
    3060:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3064:	dc 01       	movw	r26, r24
    3066:	cb 01       	movw	r24, r22
    3068:	f8 01       	movw	r30, r16
    306a:	80 83       	st	Z, r24
    306c:	91 83       	std	Z+1, r25	; 0x01
    306e:	a2 83       	std	Z+2, r26	; 0x02
    3070:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3072:	fe 01       	movw	r30, r28
    3074:	e9 58       	subi	r30, 0x89	; 137
    3076:	ff 4f       	sbci	r31, 0xFF	; 255
    3078:	60 81       	ld	r22, Z
    307a:	71 81       	ldd	r23, Z+1	; 0x01
    307c:	82 81       	ldd	r24, Z+2	; 0x02
    307e:	93 81       	ldd	r25, Z+3	; 0x03
    3080:	20 e0       	ldi	r18, 0x00	; 0
    3082:	30 e0       	ldi	r19, 0x00	; 0
    3084:	40 e8       	ldi	r20, 0x80	; 128
    3086:	5f e3       	ldi	r21, 0x3F	; 63
    3088:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    308c:	88 23       	and	r24, r24
    308e:	44 f4       	brge	.+16     	; 0x30a0 <ping_pong+0x7be>
		__ticks = 1;
    3090:	fe 01       	movw	r30, r28
    3092:	eb 58       	subi	r30, 0x8B	; 139
    3094:	ff 4f       	sbci	r31, 0xFF	; 255
    3096:	81 e0       	ldi	r24, 0x01	; 1
    3098:	90 e0       	ldi	r25, 0x00	; 0
    309a:	91 83       	std	Z+1, r25	; 0x01
    309c:	80 83       	st	Z, r24
    309e:	64 c0       	rjmp	.+200    	; 0x3168 <ping_pong+0x886>
	else if (__tmp > 65535)
    30a0:	fe 01       	movw	r30, r28
    30a2:	e9 58       	subi	r30, 0x89	; 137
    30a4:	ff 4f       	sbci	r31, 0xFF	; 255
    30a6:	60 81       	ld	r22, Z
    30a8:	71 81       	ldd	r23, Z+1	; 0x01
    30aa:	82 81       	ldd	r24, Z+2	; 0x02
    30ac:	93 81       	ldd	r25, Z+3	; 0x03
    30ae:	20 e0       	ldi	r18, 0x00	; 0
    30b0:	3f ef       	ldi	r19, 0xFF	; 255
    30b2:	4f e7       	ldi	r20, 0x7F	; 127
    30b4:	57 e4       	ldi	r21, 0x47	; 71
    30b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    30ba:	18 16       	cp	r1, r24
    30bc:	0c f0       	brlt	.+2      	; 0x30c0 <ping_pong+0x7de>
    30be:	43 c0       	rjmp	.+134    	; 0x3146 <ping_pong+0x864>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30c0:	fe 01       	movw	r30, r28
    30c2:	e5 58       	subi	r30, 0x85	; 133
    30c4:	ff 4f       	sbci	r31, 0xFF	; 255
    30c6:	60 81       	ld	r22, Z
    30c8:	71 81       	ldd	r23, Z+1	; 0x01
    30ca:	82 81       	ldd	r24, Z+2	; 0x02
    30cc:	93 81       	ldd	r25, Z+3	; 0x03
    30ce:	20 e0       	ldi	r18, 0x00	; 0
    30d0:	30 e0       	ldi	r19, 0x00	; 0
    30d2:	40 e2       	ldi	r20, 0x20	; 32
    30d4:	51 e4       	ldi	r21, 0x41	; 65
    30d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30da:	dc 01       	movw	r26, r24
    30dc:	cb 01       	movw	r24, r22
    30de:	8e 01       	movw	r16, r28
    30e0:	0b 58       	subi	r16, 0x8B	; 139
    30e2:	1f 4f       	sbci	r17, 0xFF	; 255
    30e4:	bc 01       	movw	r22, r24
    30e6:	cd 01       	movw	r24, r26
    30e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30ec:	dc 01       	movw	r26, r24
    30ee:	cb 01       	movw	r24, r22
    30f0:	f8 01       	movw	r30, r16
    30f2:	91 83       	std	Z+1, r25	; 0x01
    30f4:	80 83       	st	Z, r24
    30f6:	1f c0       	rjmp	.+62     	; 0x3136 <ping_pong+0x854>
    30f8:	fe 01       	movw	r30, r28
    30fa:	ed 58       	subi	r30, 0x8D	; 141
    30fc:	ff 4f       	sbci	r31, 0xFF	; 255
    30fe:	88 ec       	ldi	r24, 0xC8	; 200
    3100:	90 e0       	ldi	r25, 0x00	; 0
    3102:	91 83       	std	Z+1, r25	; 0x01
    3104:	80 83       	st	Z, r24
    3106:	fe 01       	movw	r30, r28
    3108:	ed 58       	subi	r30, 0x8D	; 141
    310a:	ff 4f       	sbci	r31, 0xFF	; 255
    310c:	80 81       	ld	r24, Z
    310e:	91 81       	ldd	r25, Z+1	; 0x01
    3110:	01 97       	sbiw	r24, 0x01	; 1
    3112:	f1 f7       	brne	.-4      	; 0x3110 <ping_pong+0x82e>
    3114:	fe 01       	movw	r30, r28
    3116:	ed 58       	subi	r30, 0x8D	; 141
    3118:	ff 4f       	sbci	r31, 0xFF	; 255
    311a:	91 83       	std	Z+1, r25	; 0x01
    311c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    311e:	de 01       	movw	r26, r28
    3120:	ab 58       	subi	r26, 0x8B	; 139
    3122:	bf 4f       	sbci	r27, 0xFF	; 255
    3124:	fe 01       	movw	r30, r28
    3126:	eb 58       	subi	r30, 0x8B	; 139
    3128:	ff 4f       	sbci	r31, 0xFF	; 255
    312a:	80 81       	ld	r24, Z
    312c:	91 81       	ldd	r25, Z+1	; 0x01
    312e:	01 97       	sbiw	r24, 0x01	; 1
    3130:	11 96       	adiw	r26, 0x01	; 1
    3132:	9c 93       	st	X, r25
    3134:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3136:	fe 01       	movw	r30, r28
    3138:	eb 58       	subi	r30, 0x8B	; 139
    313a:	ff 4f       	sbci	r31, 0xFF	; 255
    313c:	80 81       	ld	r24, Z
    313e:	91 81       	ldd	r25, Z+1	; 0x01
    3140:	00 97       	sbiw	r24, 0x00	; 0
    3142:	d1 f6       	brne	.-76     	; 0x30f8 <ping_pong+0x816>
    3144:	27 c0       	rjmp	.+78     	; 0x3194 <ping_pong+0x8b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3146:	8e 01       	movw	r16, r28
    3148:	0b 58       	subi	r16, 0x8B	; 139
    314a:	1f 4f       	sbci	r17, 0xFF	; 255
    314c:	fe 01       	movw	r30, r28
    314e:	e9 58       	subi	r30, 0x89	; 137
    3150:	ff 4f       	sbci	r31, 0xFF	; 255
    3152:	60 81       	ld	r22, Z
    3154:	71 81       	ldd	r23, Z+1	; 0x01
    3156:	82 81       	ldd	r24, Z+2	; 0x02
    3158:	93 81       	ldd	r25, Z+3	; 0x03
    315a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    315e:	dc 01       	movw	r26, r24
    3160:	cb 01       	movw	r24, r22
    3162:	f8 01       	movw	r30, r16
    3164:	91 83       	std	Z+1, r25	; 0x01
    3166:	80 83       	st	Z, r24
    3168:	de 01       	movw	r26, r28
    316a:	af 58       	subi	r26, 0x8F	; 143
    316c:	bf 4f       	sbci	r27, 0xFF	; 255
    316e:	fe 01       	movw	r30, r28
    3170:	eb 58       	subi	r30, 0x8B	; 139
    3172:	ff 4f       	sbci	r31, 0xFF	; 255
    3174:	80 81       	ld	r24, Z
    3176:	91 81       	ldd	r25, Z+1	; 0x01
    3178:	8d 93       	st	X+, r24
    317a:	9c 93       	st	X, r25
    317c:	fe 01       	movw	r30, r28
    317e:	ef 58       	subi	r30, 0x8F	; 143
    3180:	ff 4f       	sbci	r31, 0xFF	; 255
    3182:	80 81       	ld	r24, Z
    3184:	91 81       	ldd	r25, Z+1	; 0x01
    3186:	01 97       	sbiw	r24, 0x01	; 1
    3188:	f1 f7       	brne	.-4      	; 0x3186 <ping_pong+0x8a4>
    318a:	fe 01       	movw	r30, r28
    318c:	ef 58       	subi	r30, 0x8F	; 143
    318e:	ff 4f       	sbci	r31, 0xFF	; 255
    3190:	91 83       	std	Z+1, r25	; 0x01
    3192:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b01000000;
    3194:	e8 e3       	ldi	r30, 0x38	; 56
    3196:	f0 e0       	ldi	r31, 0x00	; 0
    3198:	80 e4       	ldi	r24, 0x40	; 64
    319a:	80 83       	st	Z, r24
    319c:	fe 01       	movw	r30, r28
    319e:	e3 59       	subi	r30, 0x93	; 147
    31a0:	ff 4f       	sbci	r31, 0xFF	; 255
    31a2:	80 e0       	ldi	r24, 0x00	; 0
    31a4:	90 e0       	ldi	r25, 0x00	; 0
    31a6:	aa e7       	ldi	r26, 0x7A	; 122
    31a8:	b3 e4       	ldi	r27, 0x43	; 67
    31aa:	80 83       	st	Z, r24
    31ac:	91 83       	std	Z+1, r25	; 0x01
    31ae:	a2 83       	std	Z+2, r26	; 0x02
    31b0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31b2:	8e 01       	movw	r16, r28
    31b4:	07 59       	subi	r16, 0x97	; 151
    31b6:	1f 4f       	sbci	r17, 0xFF	; 255
    31b8:	fe 01       	movw	r30, r28
    31ba:	e3 59       	subi	r30, 0x93	; 147
    31bc:	ff 4f       	sbci	r31, 0xFF	; 255
    31be:	60 81       	ld	r22, Z
    31c0:	71 81       	ldd	r23, Z+1	; 0x01
    31c2:	82 81       	ldd	r24, Z+2	; 0x02
    31c4:	93 81       	ldd	r25, Z+3	; 0x03
    31c6:	20 e0       	ldi	r18, 0x00	; 0
    31c8:	30 e0       	ldi	r19, 0x00	; 0
    31ca:	4a ef       	ldi	r20, 0xFA	; 250
    31cc:	54 e4       	ldi	r21, 0x44	; 68
    31ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31d2:	dc 01       	movw	r26, r24
    31d4:	cb 01       	movw	r24, r22
    31d6:	f8 01       	movw	r30, r16
    31d8:	80 83       	st	Z, r24
    31da:	91 83       	std	Z+1, r25	; 0x01
    31dc:	a2 83       	std	Z+2, r26	; 0x02
    31de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31e0:	fe 01       	movw	r30, r28
    31e2:	e7 59       	subi	r30, 0x97	; 151
    31e4:	ff 4f       	sbci	r31, 0xFF	; 255
    31e6:	60 81       	ld	r22, Z
    31e8:	71 81       	ldd	r23, Z+1	; 0x01
    31ea:	82 81       	ldd	r24, Z+2	; 0x02
    31ec:	93 81       	ldd	r25, Z+3	; 0x03
    31ee:	20 e0       	ldi	r18, 0x00	; 0
    31f0:	30 e0       	ldi	r19, 0x00	; 0
    31f2:	40 e8       	ldi	r20, 0x80	; 128
    31f4:	5f e3       	ldi	r21, 0x3F	; 63
    31f6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    31fa:	88 23       	and	r24, r24
    31fc:	44 f4       	brge	.+16     	; 0x320e <ping_pong+0x92c>
		__ticks = 1;
    31fe:	fe 01       	movw	r30, r28
    3200:	e9 59       	subi	r30, 0x99	; 153
    3202:	ff 4f       	sbci	r31, 0xFF	; 255
    3204:	81 e0       	ldi	r24, 0x01	; 1
    3206:	90 e0       	ldi	r25, 0x00	; 0
    3208:	91 83       	std	Z+1, r25	; 0x01
    320a:	80 83       	st	Z, r24
    320c:	64 c0       	rjmp	.+200    	; 0x32d6 <ping_pong+0x9f4>
	else if (__tmp > 65535)
    320e:	fe 01       	movw	r30, r28
    3210:	e7 59       	subi	r30, 0x97	; 151
    3212:	ff 4f       	sbci	r31, 0xFF	; 255
    3214:	60 81       	ld	r22, Z
    3216:	71 81       	ldd	r23, Z+1	; 0x01
    3218:	82 81       	ldd	r24, Z+2	; 0x02
    321a:	93 81       	ldd	r25, Z+3	; 0x03
    321c:	20 e0       	ldi	r18, 0x00	; 0
    321e:	3f ef       	ldi	r19, 0xFF	; 255
    3220:	4f e7       	ldi	r20, 0x7F	; 127
    3222:	57 e4       	ldi	r21, 0x47	; 71
    3224:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3228:	18 16       	cp	r1, r24
    322a:	0c f0       	brlt	.+2      	; 0x322e <ping_pong+0x94c>
    322c:	43 c0       	rjmp	.+134    	; 0x32b4 <ping_pong+0x9d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    322e:	fe 01       	movw	r30, r28
    3230:	e3 59       	subi	r30, 0x93	; 147
    3232:	ff 4f       	sbci	r31, 0xFF	; 255
    3234:	60 81       	ld	r22, Z
    3236:	71 81       	ldd	r23, Z+1	; 0x01
    3238:	82 81       	ldd	r24, Z+2	; 0x02
    323a:	93 81       	ldd	r25, Z+3	; 0x03
    323c:	20 e0       	ldi	r18, 0x00	; 0
    323e:	30 e0       	ldi	r19, 0x00	; 0
    3240:	40 e2       	ldi	r20, 0x20	; 32
    3242:	51 e4       	ldi	r21, 0x41	; 65
    3244:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3248:	dc 01       	movw	r26, r24
    324a:	cb 01       	movw	r24, r22
    324c:	8e 01       	movw	r16, r28
    324e:	09 59       	subi	r16, 0x99	; 153
    3250:	1f 4f       	sbci	r17, 0xFF	; 255
    3252:	bc 01       	movw	r22, r24
    3254:	cd 01       	movw	r24, r26
    3256:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    325a:	dc 01       	movw	r26, r24
    325c:	cb 01       	movw	r24, r22
    325e:	f8 01       	movw	r30, r16
    3260:	91 83       	std	Z+1, r25	; 0x01
    3262:	80 83       	st	Z, r24
    3264:	1f c0       	rjmp	.+62     	; 0x32a4 <ping_pong+0x9c2>
    3266:	fe 01       	movw	r30, r28
    3268:	eb 59       	subi	r30, 0x9B	; 155
    326a:	ff 4f       	sbci	r31, 0xFF	; 255
    326c:	88 ec       	ldi	r24, 0xC8	; 200
    326e:	90 e0       	ldi	r25, 0x00	; 0
    3270:	91 83       	std	Z+1, r25	; 0x01
    3272:	80 83       	st	Z, r24
    3274:	fe 01       	movw	r30, r28
    3276:	eb 59       	subi	r30, 0x9B	; 155
    3278:	ff 4f       	sbci	r31, 0xFF	; 255
    327a:	80 81       	ld	r24, Z
    327c:	91 81       	ldd	r25, Z+1	; 0x01
    327e:	01 97       	sbiw	r24, 0x01	; 1
    3280:	f1 f7       	brne	.-4      	; 0x327e <ping_pong+0x99c>
    3282:	fe 01       	movw	r30, r28
    3284:	eb 59       	subi	r30, 0x9B	; 155
    3286:	ff 4f       	sbci	r31, 0xFF	; 255
    3288:	91 83       	std	Z+1, r25	; 0x01
    328a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    328c:	de 01       	movw	r26, r28
    328e:	a9 59       	subi	r26, 0x99	; 153
    3290:	bf 4f       	sbci	r27, 0xFF	; 255
    3292:	fe 01       	movw	r30, r28
    3294:	e9 59       	subi	r30, 0x99	; 153
    3296:	ff 4f       	sbci	r31, 0xFF	; 255
    3298:	80 81       	ld	r24, Z
    329a:	91 81       	ldd	r25, Z+1	; 0x01
    329c:	01 97       	sbiw	r24, 0x01	; 1
    329e:	11 96       	adiw	r26, 0x01	; 1
    32a0:	9c 93       	st	X, r25
    32a2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32a4:	fe 01       	movw	r30, r28
    32a6:	e9 59       	subi	r30, 0x99	; 153
    32a8:	ff 4f       	sbci	r31, 0xFF	; 255
    32aa:	80 81       	ld	r24, Z
    32ac:	91 81       	ldd	r25, Z+1	; 0x01
    32ae:	00 97       	sbiw	r24, 0x00	; 0
    32b0:	d1 f6       	brne	.-76     	; 0x3266 <ping_pong+0x984>
    32b2:	27 c0       	rjmp	.+78     	; 0x3302 <ping_pong+0xa20>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32b4:	8e 01       	movw	r16, r28
    32b6:	09 59       	subi	r16, 0x99	; 153
    32b8:	1f 4f       	sbci	r17, 0xFF	; 255
    32ba:	fe 01       	movw	r30, r28
    32bc:	e7 59       	subi	r30, 0x97	; 151
    32be:	ff 4f       	sbci	r31, 0xFF	; 255
    32c0:	60 81       	ld	r22, Z
    32c2:	71 81       	ldd	r23, Z+1	; 0x01
    32c4:	82 81       	ldd	r24, Z+2	; 0x02
    32c6:	93 81       	ldd	r25, Z+3	; 0x03
    32c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32cc:	dc 01       	movw	r26, r24
    32ce:	cb 01       	movw	r24, r22
    32d0:	f8 01       	movw	r30, r16
    32d2:	91 83       	std	Z+1, r25	; 0x01
    32d4:	80 83       	st	Z, r24
    32d6:	de 01       	movw	r26, r28
    32d8:	ad 59       	subi	r26, 0x9D	; 157
    32da:	bf 4f       	sbci	r27, 0xFF	; 255
    32dc:	fe 01       	movw	r30, r28
    32de:	e9 59       	subi	r30, 0x99	; 153
    32e0:	ff 4f       	sbci	r31, 0xFF	; 255
    32e2:	80 81       	ld	r24, Z
    32e4:	91 81       	ldd	r25, Z+1	; 0x01
    32e6:	8d 93       	st	X+, r24
    32e8:	9c 93       	st	X, r25
    32ea:	fe 01       	movw	r30, r28
    32ec:	ed 59       	subi	r30, 0x9D	; 157
    32ee:	ff 4f       	sbci	r31, 0xFF	; 255
    32f0:	80 81       	ld	r24, Z
    32f2:	91 81       	ldd	r25, Z+1	; 0x01
    32f4:	01 97       	sbiw	r24, 0x01	; 1
    32f6:	f1 f7       	brne	.-4      	; 0x32f4 <ping_pong+0xa12>
    32f8:	fe 01       	movw	r30, r28
    32fa:	ed 59       	subi	r30, 0x9D	; 157
    32fc:	ff 4f       	sbci	r31, 0xFF	; 255
    32fe:	91 83       	std	Z+1, r25	; 0x01
    3300:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b10000000;
    3302:	e8 e3       	ldi	r30, 0x38	; 56
    3304:	f0 e0       	ldi	r31, 0x00	; 0
    3306:	80 e8       	ldi	r24, 0x80	; 128
    3308:	80 83       	st	Z, r24
    330a:	fe 01       	movw	r30, r28
    330c:	e1 5a       	subi	r30, 0xA1	; 161
    330e:	ff 4f       	sbci	r31, 0xFF	; 255
    3310:	80 e0       	ldi	r24, 0x00	; 0
    3312:	90 e0       	ldi	r25, 0x00	; 0
    3314:	aa e7       	ldi	r26, 0x7A	; 122
    3316:	b3 e4       	ldi	r27, 0x43	; 67
    3318:	80 83       	st	Z, r24
    331a:	91 83       	std	Z+1, r25	; 0x01
    331c:	a2 83       	std	Z+2, r26	; 0x02
    331e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3320:	8e 01       	movw	r16, r28
    3322:	05 5a       	subi	r16, 0xA5	; 165
    3324:	1f 4f       	sbci	r17, 0xFF	; 255
    3326:	fe 01       	movw	r30, r28
    3328:	e1 5a       	subi	r30, 0xA1	; 161
    332a:	ff 4f       	sbci	r31, 0xFF	; 255
    332c:	60 81       	ld	r22, Z
    332e:	71 81       	ldd	r23, Z+1	; 0x01
    3330:	82 81       	ldd	r24, Z+2	; 0x02
    3332:	93 81       	ldd	r25, Z+3	; 0x03
    3334:	20 e0       	ldi	r18, 0x00	; 0
    3336:	30 e0       	ldi	r19, 0x00	; 0
    3338:	4a ef       	ldi	r20, 0xFA	; 250
    333a:	54 e4       	ldi	r21, 0x44	; 68
    333c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3340:	dc 01       	movw	r26, r24
    3342:	cb 01       	movw	r24, r22
    3344:	f8 01       	movw	r30, r16
    3346:	80 83       	st	Z, r24
    3348:	91 83       	std	Z+1, r25	; 0x01
    334a:	a2 83       	std	Z+2, r26	; 0x02
    334c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    334e:	fe 01       	movw	r30, r28
    3350:	e5 5a       	subi	r30, 0xA5	; 165
    3352:	ff 4f       	sbci	r31, 0xFF	; 255
    3354:	60 81       	ld	r22, Z
    3356:	71 81       	ldd	r23, Z+1	; 0x01
    3358:	82 81       	ldd	r24, Z+2	; 0x02
    335a:	93 81       	ldd	r25, Z+3	; 0x03
    335c:	20 e0       	ldi	r18, 0x00	; 0
    335e:	30 e0       	ldi	r19, 0x00	; 0
    3360:	40 e8       	ldi	r20, 0x80	; 128
    3362:	5f e3       	ldi	r21, 0x3F	; 63
    3364:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3368:	88 23       	and	r24, r24
    336a:	44 f4       	brge	.+16     	; 0x337c <ping_pong+0xa9a>
		__ticks = 1;
    336c:	fe 01       	movw	r30, r28
    336e:	e7 5a       	subi	r30, 0xA7	; 167
    3370:	ff 4f       	sbci	r31, 0xFF	; 255
    3372:	81 e0       	ldi	r24, 0x01	; 1
    3374:	90 e0       	ldi	r25, 0x00	; 0
    3376:	91 83       	std	Z+1, r25	; 0x01
    3378:	80 83       	st	Z, r24
    337a:	64 c0       	rjmp	.+200    	; 0x3444 <ping_pong+0xb62>
	else if (__tmp > 65535)
    337c:	fe 01       	movw	r30, r28
    337e:	e5 5a       	subi	r30, 0xA5	; 165
    3380:	ff 4f       	sbci	r31, 0xFF	; 255
    3382:	60 81       	ld	r22, Z
    3384:	71 81       	ldd	r23, Z+1	; 0x01
    3386:	82 81       	ldd	r24, Z+2	; 0x02
    3388:	93 81       	ldd	r25, Z+3	; 0x03
    338a:	20 e0       	ldi	r18, 0x00	; 0
    338c:	3f ef       	ldi	r19, 0xFF	; 255
    338e:	4f e7       	ldi	r20, 0x7F	; 127
    3390:	57 e4       	ldi	r21, 0x47	; 71
    3392:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3396:	18 16       	cp	r1, r24
    3398:	0c f0       	brlt	.+2      	; 0x339c <ping_pong+0xaba>
    339a:	43 c0       	rjmp	.+134    	; 0x3422 <ping_pong+0xb40>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    339c:	fe 01       	movw	r30, r28
    339e:	e1 5a       	subi	r30, 0xA1	; 161
    33a0:	ff 4f       	sbci	r31, 0xFF	; 255
    33a2:	60 81       	ld	r22, Z
    33a4:	71 81       	ldd	r23, Z+1	; 0x01
    33a6:	82 81       	ldd	r24, Z+2	; 0x02
    33a8:	93 81       	ldd	r25, Z+3	; 0x03
    33aa:	20 e0       	ldi	r18, 0x00	; 0
    33ac:	30 e0       	ldi	r19, 0x00	; 0
    33ae:	40 e2       	ldi	r20, 0x20	; 32
    33b0:	51 e4       	ldi	r21, 0x41	; 65
    33b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33b6:	dc 01       	movw	r26, r24
    33b8:	cb 01       	movw	r24, r22
    33ba:	8e 01       	movw	r16, r28
    33bc:	07 5a       	subi	r16, 0xA7	; 167
    33be:	1f 4f       	sbci	r17, 0xFF	; 255
    33c0:	bc 01       	movw	r22, r24
    33c2:	cd 01       	movw	r24, r26
    33c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33c8:	dc 01       	movw	r26, r24
    33ca:	cb 01       	movw	r24, r22
    33cc:	f8 01       	movw	r30, r16
    33ce:	91 83       	std	Z+1, r25	; 0x01
    33d0:	80 83       	st	Z, r24
    33d2:	1f c0       	rjmp	.+62     	; 0x3412 <ping_pong+0xb30>
    33d4:	fe 01       	movw	r30, r28
    33d6:	e9 5a       	subi	r30, 0xA9	; 169
    33d8:	ff 4f       	sbci	r31, 0xFF	; 255
    33da:	88 ec       	ldi	r24, 0xC8	; 200
    33dc:	90 e0       	ldi	r25, 0x00	; 0
    33de:	91 83       	std	Z+1, r25	; 0x01
    33e0:	80 83       	st	Z, r24
    33e2:	fe 01       	movw	r30, r28
    33e4:	e9 5a       	subi	r30, 0xA9	; 169
    33e6:	ff 4f       	sbci	r31, 0xFF	; 255
    33e8:	80 81       	ld	r24, Z
    33ea:	91 81       	ldd	r25, Z+1	; 0x01
    33ec:	01 97       	sbiw	r24, 0x01	; 1
    33ee:	f1 f7       	brne	.-4      	; 0x33ec <ping_pong+0xb0a>
    33f0:	fe 01       	movw	r30, r28
    33f2:	e9 5a       	subi	r30, 0xA9	; 169
    33f4:	ff 4f       	sbci	r31, 0xFF	; 255
    33f6:	91 83       	std	Z+1, r25	; 0x01
    33f8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33fa:	de 01       	movw	r26, r28
    33fc:	a7 5a       	subi	r26, 0xA7	; 167
    33fe:	bf 4f       	sbci	r27, 0xFF	; 255
    3400:	fe 01       	movw	r30, r28
    3402:	e7 5a       	subi	r30, 0xA7	; 167
    3404:	ff 4f       	sbci	r31, 0xFF	; 255
    3406:	80 81       	ld	r24, Z
    3408:	91 81       	ldd	r25, Z+1	; 0x01
    340a:	01 97       	sbiw	r24, 0x01	; 1
    340c:	11 96       	adiw	r26, 0x01	; 1
    340e:	9c 93       	st	X, r25
    3410:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3412:	fe 01       	movw	r30, r28
    3414:	e7 5a       	subi	r30, 0xA7	; 167
    3416:	ff 4f       	sbci	r31, 0xFF	; 255
    3418:	80 81       	ld	r24, Z
    341a:	91 81       	ldd	r25, Z+1	; 0x01
    341c:	00 97       	sbiw	r24, 0x00	; 0
    341e:	d1 f6       	brne	.-76     	; 0x33d4 <ping_pong+0xaf2>
    3420:	27 c0       	rjmp	.+78     	; 0x3470 <ping_pong+0xb8e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3422:	8e 01       	movw	r16, r28
    3424:	07 5a       	subi	r16, 0xA7	; 167
    3426:	1f 4f       	sbci	r17, 0xFF	; 255
    3428:	fe 01       	movw	r30, r28
    342a:	e5 5a       	subi	r30, 0xA5	; 165
    342c:	ff 4f       	sbci	r31, 0xFF	; 255
    342e:	60 81       	ld	r22, Z
    3430:	71 81       	ldd	r23, Z+1	; 0x01
    3432:	82 81       	ldd	r24, Z+2	; 0x02
    3434:	93 81       	ldd	r25, Z+3	; 0x03
    3436:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    343a:	dc 01       	movw	r26, r24
    343c:	cb 01       	movw	r24, r22
    343e:	f8 01       	movw	r30, r16
    3440:	91 83       	std	Z+1, r25	; 0x01
    3442:	80 83       	st	Z, r24
    3444:	de 01       	movw	r26, r28
    3446:	ab 5a       	subi	r26, 0xAB	; 171
    3448:	bf 4f       	sbci	r27, 0xFF	; 255
    344a:	fe 01       	movw	r30, r28
    344c:	e7 5a       	subi	r30, 0xA7	; 167
    344e:	ff 4f       	sbci	r31, 0xFF	; 255
    3450:	80 81       	ld	r24, Z
    3452:	91 81       	ldd	r25, Z+1	; 0x01
    3454:	8d 93       	st	X+, r24
    3456:	9c 93       	st	X, r25
    3458:	fe 01       	movw	r30, r28
    345a:	eb 5a       	subi	r30, 0xAB	; 171
    345c:	ff 4f       	sbci	r31, 0xFF	; 255
    345e:	80 81       	ld	r24, Z
    3460:	91 81       	ldd	r25, Z+1	; 0x01
    3462:	01 97       	sbiw	r24, 0x01	; 1
    3464:	f1 f7       	brne	.-4      	; 0x3462 <ping_pong+0xb80>
    3466:	fe 01       	movw	r30, r28
    3468:	eb 5a       	subi	r30, 0xAB	; 171
    346a:	ff 4f       	sbci	r31, 0xFF	; 255
    346c:	91 83       	std	Z+1, r25	; 0x01
    346e:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b01000000;
    3470:	e8 e3       	ldi	r30, 0x38	; 56
    3472:	f0 e0       	ldi	r31, 0x00	; 0
    3474:	80 e4       	ldi	r24, 0x40	; 64
    3476:	80 83       	st	Z, r24
    3478:	fe 01       	movw	r30, r28
    347a:	ef 5a       	subi	r30, 0xAF	; 175
    347c:	ff 4f       	sbci	r31, 0xFF	; 255
    347e:	80 e0       	ldi	r24, 0x00	; 0
    3480:	90 e0       	ldi	r25, 0x00	; 0
    3482:	aa e7       	ldi	r26, 0x7A	; 122
    3484:	b3 e4       	ldi	r27, 0x43	; 67
    3486:	80 83       	st	Z, r24
    3488:	91 83       	std	Z+1, r25	; 0x01
    348a:	a2 83       	std	Z+2, r26	; 0x02
    348c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    348e:	8e 01       	movw	r16, r28
    3490:	03 5b       	subi	r16, 0xB3	; 179
    3492:	1f 4f       	sbci	r17, 0xFF	; 255
    3494:	fe 01       	movw	r30, r28
    3496:	ef 5a       	subi	r30, 0xAF	; 175
    3498:	ff 4f       	sbci	r31, 0xFF	; 255
    349a:	60 81       	ld	r22, Z
    349c:	71 81       	ldd	r23, Z+1	; 0x01
    349e:	82 81       	ldd	r24, Z+2	; 0x02
    34a0:	93 81       	ldd	r25, Z+3	; 0x03
    34a2:	20 e0       	ldi	r18, 0x00	; 0
    34a4:	30 e0       	ldi	r19, 0x00	; 0
    34a6:	4a ef       	ldi	r20, 0xFA	; 250
    34a8:	54 e4       	ldi	r21, 0x44	; 68
    34aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34ae:	dc 01       	movw	r26, r24
    34b0:	cb 01       	movw	r24, r22
    34b2:	f8 01       	movw	r30, r16
    34b4:	80 83       	st	Z, r24
    34b6:	91 83       	std	Z+1, r25	; 0x01
    34b8:	a2 83       	std	Z+2, r26	; 0x02
    34ba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    34bc:	fe 01       	movw	r30, r28
    34be:	e3 5b       	subi	r30, 0xB3	; 179
    34c0:	ff 4f       	sbci	r31, 0xFF	; 255
    34c2:	60 81       	ld	r22, Z
    34c4:	71 81       	ldd	r23, Z+1	; 0x01
    34c6:	82 81       	ldd	r24, Z+2	; 0x02
    34c8:	93 81       	ldd	r25, Z+3	; 0x03
    34ca:	20 e0       	ldi	r18, 0x00	; 0
    34cc:	30 e0       	ldi	r19, 0x00	; 0
    34ce:	40 e8       	ldi	r20, 0x80	; 128
    34d0:	5f e3       	ldi	r21, 0x3F	; 63
    34d2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    34d6:	88 23       	and	r24, r24
    34d8:	44 f4       	brge	.+16     	; 0x34ea <ping_pong+0xc08>
		__ticks = 1;
    34da:	fe 01       	movw	r30, r28
    34dc:	e5 5b       	subi	r30, 0xB5	; 181
    34de:	ff 4f       	sbci	r31, 0xFF	; 255
    34e0:	81 e0       	ldi	r24, 0x01	; 1
    34e2:	90 e0       	ldi	r25, 0x00	; 0
    34e4:	91 83       	std	Z+1, r25	; 0x01
    34e6:	80 83       	st	Z, r24
    34e8:	64 c0       	rjmp	.+200    	; 0x35b2 <ping_pong+0xcd0>
	else if (__tmp > 65535)
    34ea:	fe 01       	movw	r30, r28
    34ec:	e3 5b       	subi	r30, 0xB3	; 179
    34ee:	ff 4f       	sbci	r31, 0xFF	; 255
    34f0:	60 81       	ld	r22, Z
    34f2:	71 81       	ldd	r23, Z+1	; 0x01
    34f4:	82 81       	ldd	r24, Z+2	; 0x02
    34f6:	93 81       	ldd	r25, Z+3	; 0x03
    34f8:	20 e0       	ldi	r18, 0x00	; 0
    34fa:	3f ef       	ldi	r19, 0xFF	; 255
    34fc:	4f e7       	ldi	r20, 0x7F	; 127
    34fe:	57 e4       	ldi	r21, 0x47	; 71
    3500:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3504:	18 16       	cp	r1, r24
    3506:	0c f0       	brlt	.+2      	; 0x350a <ping_pong+0xc28>
    3508:	43 c0       	rjmp	.+134    	; 0x3590 <ping_pong+0xcae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    350a:	fe 01       	movw	r30, r28
    350c:	ef 5a       	subi	r30, 0xAF	; 175
    350e:	ff 4f       	sbci	r31, 0xFF	; 255
    3510:	60 81       	ld	r22, Z
    3512:	71 81       	ldd	r23, Z+1	; 0x01
    3514:	82 81       	ldd	r24, Z+2	; 0x02
    3516:	93 81       	ldd	r25, Z+3	; 0x03
    3518:	20 e0       	ldi	r18, 0x00	; 0
    351a:	30 e0       	ldi	r19, 0x00	; 0
    351c:	40 e2       	ldi	r20, 0x20	; 32
    351e:	51 e4       	ldi	r21, 0x41	; 65
    3520:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3524:	dc 01       	movw	r26, r24
    3526:	cb 01       	movw	r24, r22
    3528:	8e 01       	movw	r16, r28
    352a:	05 5b       	subi	r16, 0xB5	; 181
    352c:	1f 4f       	sbci	r17, 0xFF	; 255
    352e:	bc 01       	movw	r22, r24
    3530:	cd 01       	movw	r24, r26
    3532:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3536:	dc 01       	movw	r26, r24
    3538:	cb 01       	movw	r24, r22
    353a:	f8 01       	movw	r30, r16
    353c:	91 83       	std	Z+1, r25	; 0x01
    353e:	80 83       	st	Z, r24
    3540:	1f c0       	rjmp	.+62     	; 0x3580 <ping_pong+0xc9e>
    3542:	fe 01       	movw	r30, r28
    3544:	e7 5b       	subi	r30, 0xB7	; 183
    3546:	ff 4f       	sbci	r31, 0xFF	; 255
    3548:	88 ec       	ldi	r24, 0xC8	; 200
    354a:	90 e0       	ldi	r25, 0x00	; 0
    354c:	91 83       	std	Z+1, r25	; 0x01
    354e:	80 83       	st	Z, r24
    3550:	fe 01       	movw	r30, r28
    3552:	e7 5b       	subi	r30, 0xB7	; 183
    3554:	ff 4f       	sbci	r31, 0xFF	; 255
    3556:	80 81       	ld	r24, Z
    3558:	91 81       	ldd	r25, Z+1	; 0x01
    355a:	01 97       	sbiw	r24, 0x01	; 1
    355c:	f1 f7       	brne	.-4      	; 0x355a <ping_pong+0xc78>
    355e:	fe 01       	movw	r30, r28
    3560:	e7 5b       	subi	r30, 0xB7	; 183
    3562:	ff 4f       	sbci	r31, 0xFF	; 255
    3564:	91 83       	std	Z+1, r25	; 0x01
    3566:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3568:	de 01       	movw	r26, r28
    356a:	a5 5b       	subi	r26, 0xB5	; 181
    356c:	bf 4f       	sbci	r27, 0xFF	; 255
    356e:	fe 01       	movw	r30, r28
    3570:	e5 5b       	subi	r30, 0xB5	; 181
    3572:	ff 4f       	sbci	r31, 0xFF	; 255
    3574:	80 81       	ld	r24, Z
    3576:	91 81       	ldd	r25, Z+1	; 0x01
    3578:	01 97       	sbiw	r24, 0x01	; 1
    357a:	11 96       	adiw	r26, 0x01	; 1
    357c:	9c 93       	st	X, r25
    357e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3580:	fe 01       	movw	r30, r28
    3582:	e5 5b       	subi	r30, 0xB5	; 181
    3584:	ff 4f       	sbci	r31, 0xFF	; 255
    3586:	80 81       	ld	r24, Z
    3588:	91 81       	ldd	r25, Z+1	; 0x01
    358a:	00 97       	sbiw	r24, 0x00	; 0
    358c:	d1 f6       	brne	.-76     	; 0x3542 <ping_pong+0xc60>
    358e:	27 c0       	rjmp	.+78     	; 0x35de <ping_pong+0xcfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3590:	8e 01       	movw	r16, r28
    3592:	05 5b       	subi	r16, 0xB5	; 181
    3594:	1f 4f       	sbci	r17, 0xFF	; 255
    3596:	fe 01       	movw	r30, r28
    3598:	e3 5b       	subi	r30, 0xB3	; 179
    359a:	ff 4f       	sbci	r31, 0xFF	; 255
    359c:	60 81       	ld	r22, Z
    359e:	71 81       	ldd	r23, Z+1	; 0x01
    35a0:	82 81       	ldd	r24, Z+2	; 0x02
    35a2:	93 81       	ldd	r25, Z+3	; 0x03
    35a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35a8:	dc 01       	movw	r26, r24
    35aa:	cb 01       	movw	r24, r22
    35ac:	f8 01       	movw	r30, r16
    35ae:	91 83       	std	Z+1, r25	; 0x01
    35b0:	80 83       	st	Z, r24
    35b2:	de 01       	movw	r26, r28
    35b4:	a9 5b       	subi	r26, 0xB9	; 185
    35b6:	bf 4f       	sbci	r27, 0xFF	; 255
    35b8:	fe 01       	movw	r30, r28
    35ba:	e5 5b       	subi	r30, 0xB5	; 181
    35bc:	ff 4f       	sbci	r31, 0xFF	; 255
    35be:	80 81       	ld	r24, Z
    35c0:	91 81       	ldd	r25, Z+1	; 0x01
    35c2:	8d 93       	st	X+, r24
    35c4:	9c 93       	st	X, r25
    35c6:	fe 01       	movw	r30, r28
    35c8:	e9 5b       	subi	r30, 0xB9	; 185
    35ca:	ff 4f       	sbci	r31, 0xFF	; 255
    35cc:	80 81       	ld	r24, Z
    35ce:	91 81       	ldd	r25, Z+1	; 0x01
    35d0:	01 97       	sbiw	r24, 0x01	; 1
    35d2:	f1 f7       	brne	.-4      	; 0x35d0 <ping_pong+0xcee>
    35d4:	fe 01       	movw	r30, r28
    35d6:	e9 5b       	subi	r30, 0xB9	; 185
    35d8:	ff 4f       	sbci	r31, 0xFF	; 255
    35da:	91 83       	std	Z+1, r25	; 0x01
    35dc:	80 83       	st	Z, r24
		_delay_ms(250);
		PORTB = 0b00100000;
    35de:	e8 e3       	ldi	r30, 0x38	; 56
    35e0:	f0 e0       	ldi	r31, 0x00	; 0
    35e2:	80 e2       	ldi	r24, 0x20	; 32
    35e4:	80 83       	st	Z, r24
    35e6:	fe 01       	movw	r30, r28
    35e8:	ed 5b       	subi	r30, 0xBD	; 189
    35ea:	ff 4f       	sbci	r31, 0xFF	; 255
    35ec:	80 e0       	ldi	r24, 0x00	; 0
    35ee:	90 e0       	ldi	r25, 0x00	; 0
    35f0:	aa e7       	ldi	r26, 0x7A	; 122
    35f2:	b3 e4       	ldi	r27, 0x43	; 67
    35f4:	80 83       	st	Z, r24
    35f6:	91 83       	std	Z+1, r25	; 0x01
    35f8:	a2 83       	std	Z+2, r26	; 0x02
    35fa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35fc:	8e 01       	movw	r16, r28
    35fe:	01 5c       	subi	r16, 0xC1	; 193
    3600:	1f 4f       	sbci	r17, 0xFF	; 255
    3602:	fe 01       	movw	r30, r28
    3604:	ed 5b       	subi	r30, 0xBD	; 189
    3606:	ff 4f       	sbci	r31, 0xFF	; 255
    3608:	60 81       	ld	r22, Z
    360a:	71 81       	ldd	r23, Z+1	; 0x01
    360c:	82 81       	ldd	r24, Z+2	; 0x02
    360e:	93 81       	ldd	r25, Z+3	; 0x03
    3610:	20 e0       	ldi	r18, 0x00	; 0
    3612:	30 e0       	ldi	r19, 0x00	; 0
    3614:	4a ef       	ldi	r20, 0xFA	; 250
    3616:	54 e4       	ldi	r21, 0x44	; 68
    3618:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    361c:	dc 01       	movw	r26, r24
    361e:	cb 01       	movw	r24, r22
    3620:	f8 01       	movw	r30, r16
    3622:	80 83       	st	Z, r24
    3624:	91 83       	std	Z+1, r25	; 0x01
    3626:	a2 83       	std	Z+2, r26	; 0x02
    3628:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    362a:	fe 01       	movw	r30, r28
    362c:	ff 96       	adiw	r30, 0x3f	; 63
    362e:	60 81       	ld	r22, Z
    3630:	71 81       	ldd	r23, Z+1	; 0x01
    3632:	82 81       	ldd	r24, Z+2	; 0x02
    3634:	93 81       	ldd	r25, Z+3	; 0x03
    3636:	20 e0       	ldi	r18, 0x00	; 0
    3638:	30 e0       	ldi	r19, 0x00	; 0
    363a:	40 e8       	ldi	r20, 0x80	; 128
    363c:	5f e3       	ldi	r21, 0x3F	; 63
    363e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3642:	88 23       	and	r24, r24
    3644:	2c f4       	brge	.+10     	; 0x3650 <ping_pong+0xd6e>
		__ticks = 1;
    3646:	81 e0       	ldi	r24, 0x01	; 1
    3648:	90 e0       	ldi	r25, 0x00	; 0
    364a:	9e af       	std	Y+62, r25	; 0x3e
    364c:	8d af       	std	Y+61, r24	; 0x3d
    364e:	46 c0       	rjmp	.+140    	; 0x36dc <ping_pong+0xdfa>
	else if (__tmp > 65535)
    3650:	fe 01       	movw	r30, r28
    3652:	ff 96       	adiw	r30, 0x3f	; 63
    3654:	60 81       	ld	r22, Z
    3656:	71 81       	ldd	r23, Z+1	; 0x01
    3658:	82 81       	ldd	r24, Z+2	; 0x02
    365a:	93 81       	ldd	r25, Z+3	; 0x03
    365c:	20 e0       	ldi	r18, 0x00	; 0
    365e:	3f ef       	ldi	r19, 0xFF	; 255
    3660:	4f e7       	ldi	r20, 0x7F	; 127
    3662:	57 e4       	ldi	r21, 0x47	; 71
    3664:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3668:	18 16       	cp	r1, r24
    366a:	64 f5       	brge	.+88     	; 0x36c4 <ping_pong+0xde2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    366c:	fe 01       	movw	r30, r28
    366e:	ed 5b       	subi	r30, 0xBD	; 189
    3670:	ff 4f       	sbci	r31, 0xFF	; 255
    3672:	60 81       	ld	r22, Z
    3674:	71 81       	ldd	r23, Z+1	; 0x01
    3676:	82 81       	ldd	r24, Z+2	; 0x02
    3678:	93 81       	ldd	r25, Z+3	; 0x03
    367a:	20 e0       	ldi	r18, 0x00	; 0
    367c:	30 e0       	ldi	r19, 0x00	; 0
    367e:	40 e2       	ldi	r20, 0x20	; 32
    3680:	51 e4       	ldi	r21, 0x41	; 65
    3682:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3686:	dc 01       	movw	r26, r24
    3688:	cb 01       	movw	r24, r22
    368a:	bc 01       	movw	r22, r24
    368c:	cd 01       	movw	r24, r26
    368e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3692:	dc 01       	movw	r26, r24
    3694:	cb 01       	movw	r24, r22
    3696:	9e af       	std	Y+62, r25	; 0x3e
    3698:	8d af       	std	Y+61, r24	; 0x3d
    369a:	0f c0       	rjmp	.+30     	; 0x36ba <ping_pong+0xdd8>
    369c:	88 ec       	ldi	r24, 0xC8	; 200
    369e:	90 e0       	ldi	r25, 0x00	; 0
    36a0:	9c af       	std	Y+60, r25	; 0x3c
    36a2:	8b af       	std	Y+59, r24	; 0x3b
    36a4:	8b ad       	ldd	r24, Y+59	; 0x3b
    36a6:	9c ad       	ldd	r25, Y+60	; 0x3c
    36a8:	01 97       	sbiw	r24, 0x01	; 1
    36aa:	f1 f7       	brne	.-4      	; 0x36a8 <ping_pong+0xdc6>
    36ac:	9c af       	std	Y+60, r25	; 0x3c
    36ae:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36b0:	8d ad       	ldd	r24, Y+61	; 0x3d
    36b2:	9e ad       	ldd	r25, Y+62	; 0x3e
    36b4:	01 97       	sbiw	r24, 0x01	; 1
    36b6:	9e af       	std	Y+62, r25	; 0x3e
    36b8:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36ba:	8d ad       	ldd	r24, Y+61	; 0x3d
    36bc:	9e ad       	ldd	r25, Y+62	; 0x3e
    36be:	00 97       	sbiw	r24, 0x00	; 0
    36c0:	69 f7       	brne	.-38     	; 0x369c <ping_pong+0xdba>
    36c2:	16 c0       	rjmp	.+44     	; 0x36f0 <ping_pong+0xe0e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36c4:	fe 01       	movw	r30, r28
    36c6:	ff 96       	adiw	r30, 0x3f	; 63
    36c8:	60 81       	ld	r22, Z
    36ca:	71 81       	ldd	r23, Z+1	; 0x01
    36cc:	82 81       	ldd	r24, Z+2	; 0x02
    36ce:	93 81       	ldd	r25, Z+3	; 0x03
    36d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36d4:	dc 01       	movw	r26, r24
    36d6:	cb 01       	movw	r24, r22
    36d8:	9e af       	std	Y+62, r25	; 0x3e
    36da:	8d af       	std	Y+61, r24	; 0x3d
    36dc:	8d ad       	ldd	r24, Y+61	; 0x3d
    36de:	9e ad       	ldd	r25, Y+62	; 0x3e
    36e0:	9a af       	std	Y+58, r25	; 0x3a
    36e2:	89 af       	std	Y+57, r24	; 0x39
    36e4:	89 ad       	ldd	r24, Y+57	; 0x39
    36e6:	9a ad       	ldd	r25, Y+58	; 0x3a
    36e8:	01 97       	sbiw	r24, 0x01	; 1
    36ea:	f1 f7       	brne	.-4      	; 0x36e8 <ping_pong+0xe06>
    36ec:	9a af       	std	Y+58, r25	; 0x3a
    36ee:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(250);
		PORTB = 0b00010000;
    36f0:	e8 e3       	ldi	r30, 0x38	; 56
    36f2:	f0 e0       	ldi	r31, 0x00	; 0
    36f4:	80 e1       	ldi	r24, 0x10	; 16
    36f6:	80 83       	st	Z, r24
    36f8:	80 e0       	ldi	r24, 0x00	; 0
    36fa:	90 e0       	ldi	r25, 0x00	; 0
    36fc:	aa e7       	ldi	r26, 0x7A	; 122
    36fe:	b3 e4       	ldi	r27, 0x43	; 67
    3700:	8d ab       	std	Y+53, r24	; 0x35
    3702:	9e ab       	std	Y+54, r25	; 0x36
    3704:	af ab       	std	Y+55, r26	; 0x37
    3706:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3708:	6d a9       	ldd	r22, Y+53	; 0x35
    370a:	7e a9       	ldd	r23, Y+54	; 0x36
    370c:	8f a9       	ldd	r24, Y+55	; 0x37
    370e:	98 ad       	ldd	r25, Y+56	; 0x38
    3710:	20 e0       	ldi	r18, 0x00	; 0
    3712:	30 e0       	ldi	r19, 0x00	; 0
    3714:	4a ef       	ldi	r20, 0xFA	; 250
    3716:	54 e4       	ldi	r21, 0x44	; 68
    3718:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    371c:	dc 01       	movw	r26, r24
    371e:	cb 01       	movw	r24, r22
    3720:	89 ab       	std	Y+49, r24	; 0x31
    3722:	9a ab       	std	Y+50, r25	; 0x32
    3724:	ab ab       	std	Y+51, r26	; 0x33
    3726:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3728:	69 a9       	ldd	r22, Y+49	; 0x31
    372a:	7a a9       	ldd	r23, Y+50	; 0x32
    372c:	8b a9       	ldd	r24, Y+51	; 0x33
    372e:	9c a9       	ldd	r25, Y+52	; 0x34
    3730:	20 e0       	ldi	r18, 0x00	; 0
    3732:	30 e0       	ldi	r19, 0x00	; 0
    3734:	40 e8       	ldi	r20, 0x80	; 128
    3736:	5f e3       	ldi	r21, 0x3F	; 63
    3738:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    373c:	88 23       	and	r24, r24
    373e:	2c f4       	brge	.+10     	; 0x374a <ping_pong+0xe68>
		__ticks = 1;
    3740:	81 e0       	ldi	r24, 0x01	; 1
    3742:	90 e0       	ldi	r25, 0x00	; 0
    3744:	98 ab       	std	Y+48, r25	; 0x30
    3746:	8f a7       	std	Y+47, r24	; 0x2f
    3748:	3f c0       	rjmp	.+126    	; 0x37c8 <ping_pong+0xee6>
	else if (__tmp > 65535)
    374a:	69 a9       	ldd	r22, Y+49	; 0x31
    374c:	7a a9       	ldd	r23, Y+50	; 0x32
    374e:	8b a9       	ldd	r24, Y+51	; 0x33
    3750:	9c a9       	ldd	r25, Y+52	; 0x34
    3752:	20 e0       	ldi	r18, 0x00	; 0
    3754:	3f ef       	ldi	r19, 0xFF	; 255
    3756:	4f e7       	ldi	r20, 0x7F	; 127
    3758:	57 e4       	ldi	r21, 0x47	; 71
    375a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    375e:	18 16       	cp	r1, r24
    3760:	4c f5       	brge	.+82     	; 0x37b4 <ping_pong+0xed2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3762:	6d a9       	ldd	r22, Y+53	; 0x35
    3764:	7e a9       	ldd	r23, Y+54	; 0x36
    3766:	8f a9       	ldd	r24, Y+55	; 0x37
    3768:	98 ad       	ldd	r25, Y+56	; 0x38
    376a:	20 e0       	ldi	r18, 0x00	; 0
    376c:	30 e0       	ldi	r19, 0x00	; 0
    376e:	40 e2       	ldi	r20, 0x20	; 32
    3770:	51 e4       	ldi	r21, 0x41	; 65
    3772:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3776:	dc 01       	movw	r26, r24
    3778:	cb 01       	movw	r24, r22
    377a:	bc 01       	movw	r22, r24
    377c:	cd 01       	movw	r24, r26
    377e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3782:	dc 01       	movw	r26, r24
    3784:	cb 01       	movw	r24, r22
    3786:	98 ab       	std	Y+48, r25	; 0x30
    3788:	8f a7       	std	Y+47, r24	; 0x2f
    378a:	0f c0       	rjmp	.+30     	; 0x37aa <ping_pong+0xec8>
    378c:	88 ec       	ldi	r24, 0xC8	; 200
    378e:	90 e0       	ldi	r25, 0x00	; 0
    3790:	9e a7       	std	Y+46, r25	; 0x2e
    3792:	8d a7       	std	Y+45, r24	; 0x2d
    3794:	8d a5       	ldd	r24, Y+45	; 0x2d
    3796:	9e a5       	ldd	r25, Y+46	; 0x2e
    3798:	01 97       	sbiw	r24, 0x01	; 1
    379a:	f1 f7       	brne	.-4      	; 0x3798 <ping_pong+0xeb6>
    379c:	9e a7       	std	Y+46, r25	; 0x2e
    379e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    37a2:	98 a9       	ldd	r25, Y+48	; 0x30
    37a4:	01 97       	sbiw	r24, 0x01	; 1
    37a6:	98 ab       	std	Y+48, r25	; 0x30
    37a8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37aa:	8f a5       	ldd	r24, Y+47	; 0x2f
    37ac:	98 a9       	ldd	r25, Y+48	; 0x30
    37ae:	00 97       	sbiw	r24, 0x00	; 0
    37b0:	69 f7       	brne	.-38     	; 0x378c <ping_pong+0xeaa>
    37b2:	14 c0       	rjmp	.+40     	; 0x37dc <ping_pong+0xefa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37b4:	69 a9       	ldd	r22, Y+49	; 0x31
    37b6:	7a a9       	ldd	r23, Y+50	; 0x32
    37b8:	8b a9       	ldd	r24, Y+51	; 0x33
    37ba:	9c a9       	ldd	r25, Y+52	; 0x34
    37bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37c0:	dc 01       	movw	r26, r24
    37c2:	cb 01       	movw	r24, r22
    37c4:	98 ab       	std	Y+48, r25	; 0x30
    37c6:	8f a7       	std	Y+47, r24	; 0x2f
    37c8:	8f a5       	ldd	r24, Y+47	; 0x2f
    37ca:	98 a9       	ldd	r25, Y+48	; 0x30
    37cc:	9c a7       	std	Y+44, r25	; 0x2c
    37ce:	8b a7       	std	Y+43, r24	; 0x2b
    37d0:	8b a5       	ldd	r24, Y+43	; 0x2b
    37d2:	9c a5       	ldd	r25, Y+44	; 0x2c
    37d4:	01 97       	sbiw	r24, 0x01	; 1
    37d6:	f1 f7       	brne	.-4      	; 0x37d4 <ping_pong+0xef2>
    37d8:	9c a7       	std	Y+44, r25	; 0x2c
    37da:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(250);
		PORTB = 0b00001000;
    37dc:	e8 e3       	ldi	r30, 0x38	; 56
    37de:	f0 e0       	ldi	r31, 0x00	; 0
    37e0:	88 e0       	ldi	r24, 0x08	; 8
    37e2:	80 83       	st	Z, r24
    37e4:	80 e0       	ldi	r24, 0x00	; 0
    37e6:	90 e0       	ldi	r25, 0x00	; 0
    37e8:	aa e7       	ldi	r26, 0x7A	; 122
    37ea:	b3 e4       	ldi	r27, 0x43	; 67
    37ec:	8f a3       	std	Y+39, r24	; 0x27
    37ee:	98 a7       	std	Y+40, r25	; 0x28
    37f0:	a9 a7       	std	Y+41, r26	; 0x29
    37f2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37f4:	6f a1       	ldd	r22, Y+39	; 0x27
    37f6:	78 a5       	ldd	r23, Y+40	; 0x28
    37f8:	89 a5       	ldd	r24, Y+41	; 0x29
    37fa:	9a a5       	ldd	r25, Y+42	; 0x2a
    37fc:	20 e0       	ldi	r18, 0x00	; 0
    37fe:	30 e0       	ldi	r19, 0x00	; 0
    3800:	4a ef       	ldi	r20, 0xFA	; 250
    3802:	54 e4       	ldi	r21, 0x44	; 68
    3804:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3808:	dc 01       	movw	r26, r24
    380a:	cb 01       	movw	r24, r22
    380c:	8b a3       	std	Y+35, r24	; 0x23
    380e:	9c a3       	std	Y+36, r25	; 0x24
    3810:	ad a3       	std	Y+37, r26	; 0x25
    3812:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3814:	6b a1       	ldd	r22, Y+35	; 0x23
    3816:	7c a1       	ldd	r23, Y+36	; 0x24
    3818:	8d a1       	ldd	r24, Y+37	; 0x25
    381a:	9e a1       	ldd	r25, Y+38	; 0x26
    381c:	20 e0       	ldi	r18, 0x00	; 0
    381e:	30 e0       	ldi	r19, 0x00	; 0
    3820:	40 e8       	ldi	r20, 0x80	; 128
    3822:	5f e3       	ldi	r21, 0x3F	; 63
    3824:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3828:	88 23       	and	r24, r24
    382a:	2c f4       	brge	.+10     	; 0x3836 <ping_pong+0xf54>
		__ticks = 1;
    382c:	81 e0       	ldi	r24, 0x01	; 1
    382e:	90 e0       	ldi	r25, 0x00	; 0
    3830:	9a a3       	std	Y+34, r25	; 0x22
    3832:	89 a3       	std	Y+33, r24	; 0x21
    3834:	3f c0       	rjmp	.+126    	; 0x38b4 <ping_pong+0xfd2>
	else if (__tmp > 65535)
    3836:	6b a1       	ldd	r22, Y+35	; 0x23
    3838:	7c a1       	ldd	r23, Y+36	; 0x24
    383a:	8d a1       	ldd	r24, Y+37	; 0x25
    383c:	9e a1       	ldd	r25, Y+38	; 0x26
    383e:	20 e0       	ldi	r18, 0x00	; 0
    3840:	3f ef       	ldi	r19, 0xFF	; 255
    3842:	4f e7       	ldi	r20, 0x7F	; 127
    3844:	57 e4       	ldi	r21, 0x47	; 71
    3846:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    384a:	18 16       	cp	r1, r24
    384c:	4c f5       	brge	.+82     	; 0x38a0 <ping_pong+0xfbe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    384e:	6f a1       	ldd	r22, Y+39	; 0x27
    3850:	78 a5       	ldd	r23, Y+40	; 0x28
    3852:	89 a5       	ldd	r24, Y+41	; 0x29
    3854:	9a a5       	ldd	r25, Y+42	; 0x2a
    3856:	20 e0       	ldi	r18, 0x00	; 0
    3858:	30 e0       	ldi	r19, 0x00	; 0
    385a:	40 e2       	ldi	r20, 0x20	; 32
    385c:	51 e4       	ldi	r21, 0x41	; 65
    385e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3862:	dc 01       	movw	r26, r24
    3864:	cb 01       	movw	r24, r22
    3866:	bc 01       	movw	r22, r24
    3868:	cd 01       	movw	r24, r26
    386a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    386e:	dc 01       	movw	r26, r24
    3870:	cb 01       	movw	r24, r22
    3872:	9a a3       	std	Y+34, r25	; 0x22
    3874:	89 a3       	std	Y+33, r24	; 0x21
    3876:	0f c0       	rjmp	.+30     	; 0x3896 <ping_pong+0xfb4>
    3878:	88 ec       	ldi	r24, 0xC8	; 200
    387a:	90 e0       	ldi	r25, 0x00	; 0
    387c:	98 a3       	std	Y+32, r25	; 0x20
    387e:	8f 8f       	std	Y+31, r24	; 0x1f
    3880:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3882:	98 a1       	ldd	r25, Y+32	; 0x20
    3884:	01 97       	sbiw	r24, 0x01	; 1
    3886:	f1 f7       	brne	.-4      	; 0x3884 <ping_pong+0xfa2>
    3888:	98 a3       	std	Y+32, r25	; 0x20
    388a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    388c:	89 a1       	ldd	r24, Y+33	; 0x21
    388e:	9a a1       	ldd	r25, Y+34	; 0x22
    3890:	01 97       	sbiw	r24, 0x01	; 1
    3892:	9a a3       	std	Y+34, r25	; 0x22
    3894:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3896:	89 a1       	ldd	r24, Y+33	; 0x21
    3898:	9a a1       	ldd	r25, Y+34	; 0x22
    389a:	00 97       	sbiw	r24, 0x00	; 0
    389c:	69 f7       	brne	.-38     	; 0x3878 <ping_pong+0xf96>
    389e:	14 c0       	rjmp	.+40     	; 0x38c8 <ping_pong+0xfe6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38a0:	6b a1       	ldd	r22, Y+35	; 0x23
    38a2:	7c a1       	ldd	r23, Y+36	; 0x24
    38a4:	8d a1       	ldd	r24, Y+37	; 0x25
    38a6:	9e a1       	ldd	r25, Y+38	; 0x26
    38a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38ac:	dc 01       	movw	r26, r24
    38ae:	cb 01       	movw	r24, r22
    38b0:	9a a3       	std	Y+34, r25	; 0x22
    38b2:	89 a3       	std	Y+33, r24	; 0x21
    38b4:	89 a1       	ldd	r24, Y+33	; 0x21
    38b6:	9a a1       	ldd	r25, Y+34	; 0x22
    38b8:	9e 8f       	std	Y+30, r25	; 0x1e
    38ba:	8d 8f       	std	Y+29, r24	; 0x1d
    38bc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    38be:	9e 8d       	ldd	r25, Y+30	; 0x1e
    38c0:	01 97       	sbiw	r24, 0x01	; 1
    38c2:	f1 f7       	brne	.-4      	; 0x38c0 <ping_pong+0xfde>
    38c4:	9e 8f       	std	Y+30, r25	; 0x1e
    38c6:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(250);
		PORTB = 0b00000100;
    38c8:	e8 e3       	ldi	r30, 0x38	; 56
    38ca:	f0 e0       	ldi	r31, 0x00	; 0
    38cc:	84 e0       	ldi	r24, 0x04	; 4
    38ce:	80 83       	st	Z, r24
    38d0:	80 e0       	ldi	r24, 0x00	; 0
    38d2:	90 e0       	ldi	r25, 0x00	; 0
    38d4:	aa e7       	ldi	r26, 0x7A	; 122
    38d6:	b3 e4       	ldi	r27, 0x43	; 67
    38d8:	89 8f       	std	Y+25, r24	; 0x19
    38da:	9a 8f       	std	Y+26, r25	; 0x1a
    38dc:	ab 8f       	std	Y+27, r26	; 0x1b
    38de:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38e0:	69 8d       	ldd	r22, Y+25	; 0x19
    38e2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    38e4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    38e6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    38e8:	20 e0       	ldi	r18, 0x00	; 0
    38ea:	30 e0       	ldi	r19, 0x00	; 0
    38ec:	4a ef       	ldi	r20, 0xFA	; 250
    38ee:	54 e4       	ldi	r21, 0x44	; 68
    38f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38f4:	dc 01       	movw	r26, r24
    38f6:	cb 01       	movw	r24, r22
    38f8:	8d 8b       	std	Y+21, r24	; 0x15
    38fa:	9e 8b       	std	Y+22, r25	; 0x16
    38fc:	af 8b       	std	Y+23, r26	; 0x17
    38fe:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3900:	6d 89       	ldd	r22, Y+21	; 0x15
    3902:	7e 89       	ldd	r23, Y+22	; 0x16
    3904:	8f 89       	ldd	r24, Y+23	; 0x17
    3906:	98 8d       	ldd	r25, Y+24	; 0x18
    3908:	20 e0       	ldi	r18, 0x00	; 0
    390a:	30 e0       	ldi	r19, 0x00	; 0
    390c:	40 e8       	ldi	r20, 0x80	; 128
    390e:	5f e3       	ldi	r21, 0x3F	; 63
    3910:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3914:	88 23       	and	r24, r24
    3916:	2c f4       	brge	.+10     	; 0x3922 <ping_pong+0x1040>
		__ticks = 1;
    3918:	81 e0       	ldi	r24, 0x01	; 1
    391a:	90 e0       	ldi	r25, 0x00	; 0
    391c:	9c 8b       	std	Y+20, r25	; 0x14
    391e:	8b 8b       	std	Y+19, r24	; 0x13
    3920:	3f c0       	rjmp	.+126    	; 0x39a0 <ping_pong+0x10be>
	else if (__tmp > 65535)
    3922:	6d 89       	ldd	r22, Y+21	; 0x15
    3924:	7e 89       	ldd	r23, Y+22	; 0x16
    3926:	8f 89       	ldd	r24, Y+23	; 0x17
    3928:	98 8d       	ldd	r25, Y+24	; 0x18
    392a:	20 e0       	ldi	r18, 0x00	; 0
    392c:	3f ef       	ldi	r19, 0xFF	; 255
    392e:	4f e7       	ldi	r20, 0x7F	; 127
    3930:	57 e4       	ldi	r21, 0x47	; 71
    3932:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3936:	18 16       	cp	r1, r24
    3938:	4c f5       	brge	.+82     	; 0x398c <ping_pong+0x10aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    393a:	69 8d       	ldd	r22, Y+25	; 0x19
    393c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    393e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3940:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3942:	20 e0       	ldi	r18, 0x00	; 0
    3944:	30 e0       	ldi	r19, 0x00	; 0
    3946:	40 e2       	ldi	r20, 0x20	; 32
    3948:	51 e4       	ldi	r21, 0x41	; 65
    394a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    394e:	dc 01       	movw	r26, r24
    3950:	cb 01       	movw	r24, r22
    3952:	bc 01       	movw	r22, r24
    3954:	cd 01       	movw	r24, r26
    3956:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    395a:	dc 01       	movw	r26, r24
    395c:	cb 01       	movw	r24, r22
    395e:	9c 8b       	std	Y+20, r25	; 0x14
    3960:	8b 8b       	std	Y+19, r24	; 0x13
    3962:	0f c0       	rjmp	.+30     	; 0x3982 <ping_pong+0x10a0>
    3964:	88 ec       	ldi	r24, 0xC8	; 200
    3966:	90 e0       	ldi	r25, 0x00	; 0
    3968:	9a 8b       	std	Y+18, r25	; 0x12
    396a:	89 8b       	std	Y+17, r24	; 0x11
    396c:	89 89       	ldd	r24, Y+17	; 0x11
    396e:	9a 89       	ldd	r25, Y+18	; 0x12
    3970:	01 97       	sbiw	r24, 0x01	; 1
    3972:	f1 f7       	brne	.-4      	; 0x3970 <ping_pong+0x108e>
    3974:	9a 8b       	std	Y+18, r25	; 0x12
    3976:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3978:	8b 89       	ldd	r24, Y+19	; 0x13
    397a:	9c 89       	ldd	r25, Y+20	; 0x14
    397c:	01 97       	sbiw	r24, 0x01	; 1
    397e:	9c 8b       	std	Y+20, r25	; 0x14
    3980:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3982:	8b 89       	ldd	r24, Y+19	; 0x13
    3984:	9c 89       	ldd	r25, Y+20	; 0x14
    3986:	00 97       	sbiw	r24, 0x00	; 0
    3988:	69 f7       	brne	.-38     	; 0x3964 <ping_pong+0x1082>
    398a:	14 c0       	rjmp	.+40     	; 0x39b4 <ping_pong+0x10d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    398c:	6d 89       	ldd	r22, Y+21	; 0x15
    398e:	7e 89       	ldd	r23, Y+22	; 0x16
    3990:	8f 89       	ldd	r24, Y+23	; 0x17
    3992:	98 8d       	ldd	r25, Y+24	; 0x18
    3994:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3998:	dc 01       	movw	r26, r24
    399a:	cb 01       	movw	r24, r22
    399c:	9c 8b       	std	Y+20, r25	; 0x14
    399e:	8b 8b       	std	Y+19, r24	; 0x13
    39a0:	8b 89       	ldd	r24, Y+19	; 0x13
    39a2:	9c 89       	ldd	r25, Y+20	; 0x14
    39a4:	98 8b       	std	Y+16, r25	; 0x10
    39a6:	8f 87       	std	Y+15, r24	; 0x0f
    39a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    39aa:	98 89       	ldd	r25, Y+16	; 0x10
    39ac:	01 97       	sbiw	r24, 0x01	; 1
    39ae:	f1 f7       	brne	.-4      	; 0x39ac <ping_pong+0x10ca>
    39b0:	98 8b       	std	Y+16, r25	; 0x10
    39b2:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(250);
		PORTB = 0b00000010;
    39b4:	e8 e3       	ldi	r30, 0x38	; 56
    39b6:	f0 e0       	ldi	r31, 0x00	; 0
    39b8:	82 e0       	ldi	r24, 0x02	; 2
    39ba:	80 83       	st	Z, r24
    39bc:	80 e0       	ldi	r24, 0x00	; 0
    39be:	90 e0       	ldi	r25, 0x00	; 0
    39c0:	aa e7       	ldi	r26, 0x7A	; 122
    39c2:	b3 e4       	ldi	r27, 0x43	; 67
    39c4:	8b 87       	std	Y+11, r24	; 0x0b
    39c6:	9c 87       	std	Y+12, r25	; 0x0c
    39c8:	ad 87       	std	Y+13, r26	; 0x0d
    39ca:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    39ce:	7c 85       	ldd	r23, Y+12	; 0x0c
    39d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    39d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    39d4:	20 e0       	ldi	r18, 0x00	; 0
    39d6:	30 e0       	ldi	r19, 0x00	; 0
    39d8:	4a ef       	ldi	r20, 0xFA	; 250
    39da:	54 e4       	ldi	r21, 0x44	; 68
    39dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    39e0:	dc 01       	movw	r26, r24
    39e2:	cb 01       	movw	r24, r22
    39e4:	8f 83       	std	Y+7, r24	; 0x07
    39e6:	98 87       	std	Y+8, r25	; 0x08
    39e8:	a9 87       	std	Y+9, r26	; 0x09
    39ea:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    39ec:	6f 81       	ldd	r22, Y+7	; 0x07
    39ee:	78 85       	ldd	r23, Y+8	; 0x08
    39f0:	89 85       	ldd	r24, Y+9	; 0x09
    39f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    39f4:	20 e0       	ldi	r18, 0x00	; 0
    39f6:	30 e0       	ldi	r19, 0x00	; 0
    39f8:	40 e8       	ldi	r20, 0x80	; 128
    39fa:	5f e3       	ldi	r21, 0x3F	; 63
    39fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a00:	88 23       	and	r24, r24
    3a02:	2c f4       	brge	.+10     	; 0x3a0e <ping_pong+0x112c>
		__ticks = 1;
    3a04:	81 e0       	ldi	r24, 0x01	; 1
    3a06:	90 e0       	ldi	r25, 0x00	; 0
    3a08:	9e 83       	std	Y+6, r25	; 0x06
    3a0a:	8d 83       	std	Y+5, r24	; 0x05
    3a0c:	3f c0       	rjmp	.+126    	; 0x3a8c <ping_pong+0x11aa>
	else if (__tmp > 65535)
    3a0e:	6f 81       	ldd	r22, Y+7	; 0x07
    3a10:	78 85       	ldd	r23, Y+8	; 0x08
    3a12:	89 85       	ldd	r24, Y+9	; 0x09
    3a14:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a16:	20 e0       	ldi	r18, 0x00	; 0
    3a18:	3f ef       	ldi	r19, 0xFF	; 255
    3a1a:	4f e7       	ldi	r20, 0x7F	; 127
    3a1c:	57 e4       	ldi	r21, 0x47	; 71
    3a1e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a22:	18 16       	cp	r1, r24
    3a24:	4c f5       	brge	.+82     	; 0x3a78 <ping_pong+0x1196>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a26:	6b 85       	ldd	r22, Y+11	; 0x0b
    3a28:	7c 85       	ldd	r23, Y+12	; 0x0c
    3a2a:	8d 85       	ldd	r24, Y+13	; 0x0d
    3a2c:	9e 85       	ldd	r25, Y+14	; 0x0e
    3a2e:	20 e0       	ldi	r18, 0x00	; 0
    3a30:	30 e0       	ldi	r19, 0x00	; 0
    3a32:	40 e2       	ldi	r20, 0x20	; 32
    3a34:	51 e4       	ldi	r21, 0x41	; 65
    3a36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a3a:	dc 01       	movw	r26, r24
    3a3c:	cb 01       	movw	r24, r22
    3a3e:	bc 01       	movw	r22, r24
    3a40:	cd 01       	movw	r24, r26
    3a42:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a46:	dc 01       	movw	r26, r24
    3a48:	cb 01       	movw	r24, r22
    3a4a:	9e 83       	std	Y+6, r25	; 0x06
    3a4c:	8d 83       	std	Y+5, r24	; 0x05
    3a4e:	0f c0       	rjmp	.+30     	; 0x3a6e <ping_pong+0x118c>
    3a50:	88 ec       	ldi	r24, 0xC8	; 200
    3a52:	90 e0       	ldi	r25, 0x00	; 0
    3a54:	9c 83       	std	Y+4, r25	; 0x04
    3a56:	8b 83       	std	Y+3, r24	; 0x03
    3a58:	8b 81       	ldd	r24, Y+3	; 0x03
    3a5a:	9c 81       	ldd	r25, Y+4	; 0x04
    3a5c:	01 97       	sbiw	r24, 0x01	; 1
    3a5e:	f1 f7       	brne	.-4      	; 0x3a5c <ping_pong+0x117a>
    3a60:	9c 83       	std	Y+4, r25	; 0x04
    3a62:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a64:	8d 81       	ldd	r24, Y+5	; 0x05
    3a66:	9e 81       	ldd	r25, Y+6	; 0x06
    3a68:	01 97       	sbiw	r24, 0x01	; 1
    3a6a:	9e 83       	std	Y+6, r25	; 0x06
    3a6c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a6e:	8d 81       	ldd	r24, Y+5	; 0x05
    3a70:	9e 81       	ldd	r25, Y+6	; 0x06
    3a72:	00 97       	sbiw	r24, 0x00	; 0
    3a74:	69 f7       	brne	.-38     	; 0x3a50 <ping_pong+0x116e>
    3a76:	14 c0       	rjmp	.+40     	; 0x3aa0 <ping_pong+0x11be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a78:	6f 81       	ldd	r22, Y+7	; 0x07
    3a7a:	78 85       	ldd	r23, Y+8	; 0x08
    3a7c:	89 85       	ldd	r24, Y+9	; 0x09
    3a7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a80:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a84:	dc 01       	movw	r26, r24
    3a86:	cb 01       	movw	r24, r22
    3a88:	9e 83       	std	Y+6, r25	; 0x06
    3a8a:	8d 83       	std	Y+5, r24	; 0x05
    3a8c:	8d 81       	ldd	r24, Y+5	; 0x05
    3a8e:	9e 81       	ldd	r25, Y+6	; 0x06
    3a90:	9a 83       	std	Y+2, r25	; 0x02
    3a92:	89 83       	std	Y+1, r24	; 0x01
    3a94:	89 81       	ldd	r24, Y+1	; 0x01
    3a96:	9a 81       	ldd	r25, Y+2	; 0x02
    3a98:	01 97       	sbiw	r24, 0x01	; 1
    3a9a:	f1 f7       	brne	.-4      	; 0x3a98 <ping_pong+0x11b6>
    3a9c:	9a 83       	std	Y+2, r25	; 0x02
    3a9e:	89 83       	std	Y+1, r24	; 0x01
	}
}

void ping_pong()
{
	while(GET_BIT(PINC, 5)==0)
    3aa0:	e3 e3       	ldi	r30, 0x33	; 51
    3aa2:	f0 e0       	ldi	r31, 0x00	; 0
    3aa4:	80 81       	ld	r24, Z
    3aa6:	82 95       	swap	r24
    3aa8:	86 95       	lsr	r24
    3aaa:	87 70       	andi	r24, 0x07	; 7
    3aac:	88 2f       	mov	r24, r24
    3aae:	90 e0       	ldi	r25, 0x00	; 0
    3ab0:	81 70       	andi	r24, 0x01	; 1
    3ab2:	90 70       	andi	r25, 0x00	; 0
    3ab4:	00 97       	sbiw	r24, 0x00	; 0
    3ab6:	11 f4       	brne	.+4      	; 0x3abc <ping_pong+0x11da>
    3ab8:	0c 94 80 14 	jmp	0x2900	; 0x2900 <ping_pong+0x1e>
		PORTB = 0b00000100;
		_delay_ms(250);
		PORTB = 0b00000010;
		_delay_ms(250);
	}
}
    3abc:	cc 53       	subi	r28, 0x3C	; 60
    3abe:	df 4f       	sbci	r29, 0xFF	; 255
    3ac0:	0f b6       	in	r0, 0x3f	; 63
    3ac2:	f8 94       	cli
    3ac4:	de bf       	out	0x3e, r29	; 62
    3ac6:	0f be       	out	0x3f, r0	; 63
    3ac8:	cd bf       	out	0x3d, r28	; 61
    3aca:	cf 91       	pop	r28
    3acc:	df 91       	pop	r29
    3ace:	1f 91       	pop	r17
    3ad0:	0f 91       	pop	r16
    3ad2:	08 95       	ret

00003ad4 <snake_effect>:

void snake_effect()
{
    3ad4:	0f 93       	push	r16
    3ad6:	1f 93       	push	r17
    3ad8:	df 93       	push	r29
    3ada:	cf 93       	push	r28
    3adc:	cd b7       	in	r28, 0x3d	; 61
    3ade:	de b7       	in	r29, 0x3e	; 62
    3ae0:	c0 5e       	subi	r28, 0xE0	; 224
    3ae2:	d0 40       	sbci	r29, 0x00	; 0
    3ae4:	0f b6       	in	r0, 0x3f	; 63
    3ae6:	f8 94       	cli
    3ae8:	de bf       	out	0x3e, r29	; 62
    3aea:	0f be       	out	0x3f, r0	; 63
    3aec:	cd bf       	out	0x3d, r28	; 61
    3aee:	0c 94 b6 27 	jmp	0x4f6c	; 0x4f6c <snake_effect+0x1498>
	while(GET_BIT(PINC, 6)==0)
	{
		PORTB = 0b00000001;
    3af2:	e8 e3       	ldi	r30, 0x38	; 56
    3af4:	f0 e0       	ldi	r31, 0x00	; 0
    3af6:	81 e0       	ldi	r24, 0x01	; 1
    3af8:	80 83       	st	Z, r24
    3afa:	fe 01       	movw	r30, r28
    3afc:	e3 52       	subi	r30, 0x23	; 35
    3afe:	ff 4f       	sbci	r31, 0xFF	; 255
    3b00:	80 e0       	ldi	r24, 0x00	; 0
    3b02:	90 e0       	ldi	r25, 0x00	; 0
    3b04:	a6 e9       	ldi	r26, 0x96	; 150
    3b06:	b3 e4       	ldi	r27, 0x43	; 67
    3b08:	80 83       	st	Z, r24
    3b0a:	91 83       	std	Z+1, r25	; 0x01
    3b0c:	a2 83       	std	Z+2, r26	; 0x02
    3b0e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b10:	8e 01       	movw	r16, r28
    3b12:	07 52       	subi	r16, 0x27	; 39
    3b14:	1f 4f       	sbci	r17, 0xFF	; 255
    3b16:	fe 01       	movw	r30, r28
    3b18:	e3 52       	subi	r30, 0x23	; 35
    3b1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b1c:	60 81       	ld	r22, Z
    3b1e:	71 81       	ldd	r23, Z+1	; 0x01
    3b20:	82 81       	ldd	r24, Z+2	; 0x02
    3b22:	93 81       	ldd	r25, Z+3	; 0x03
    3b24:	20 e0       	ldi	r18, 0x00	; 0
    3b26:	30 e0       	ldi	r19, 0x00	; 0
    3b28:	4a ef       	ldi	r20, 0xFA	; 250
    3b2a:	54 e4       	ldi	r21, 0x44	; 68
    3b2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b30:	dc 01       	movw	r26, r24
    3b32:	cb 01       	movw	r24, r22
    3b34:	f8 01       	movw	r30, r16
    3b36:	80 83       	st	Z, r24
    3b38:	91 83       	std	Z+1, r25	; 0x01
    3b3a:	a2 83       	std	Z+2, r26	; 0x02
    3b3c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3b3e:	fe 01       	movw	r30, r28
    3b40:	e7 52       	subi	r30, 0x27	; 39
    3b42:	ff 4f       	sbci	r31, 0xFF	; 255
    3b44:	60 81       	ld	r22, Z
    3b46:	71 81       	ldd	r23, Z+1	; 0x01
    3b48:	82 81       	ldd	r24, Z+2	; 0x02
    3b4a:	93 81       	ldd	r25, Z+3	; 0x03
    3b4c:	20 e0       	ldi	r18, 0x00	; 0
    3b4e:	30 e0       	ldi	r19, 0x00	; 0
    3b50:	40 e8       	ldi	r20, 0x80	; 128
    3b52:	5f e3       	ldi	r21, 0x3F	; 63
    3b54:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3b58:	88 23       	and	r24, r24
    3b5a:	44 f4       	brge	.+16     	; 0x3b6c <snake_effect+0x98>
		__ticks = 1;
    3b5c:	fe 01       	movw	r30, r28
    3b5e:	e9 52       	subi	r30, 0x29	; 41
    3b60:	ff 4f       	sbci	r31, 0xFF	; 255
    3b62:	81 e0       	ldi	r24, 0x01	; 1
    3b64:	90 e0       	ldi	r25, 0x00	; 0
    3b66:	91 83       	std	Z+1, r25	; 0x01
    3b68:	80 83       	st	Z, r24
    3b6a:	64 c0       	rjmp	.+200    	; 0x3c34 <snake_effect+0x160>
	else if (__tmp > 65535)
    3b6c:	fe 01       	movw	r30, r28
    3b6e:	e7 52       	subi	r30, 0x27	; 39
    3b70:	ff 4f       	sbci	r31, 0xFF	; 255
    3b72:	60 81       	ld	r22, Z
    3b74:	71 81       	ldd	r23, Z+1	; 0x01
    3b76:	82 81       	ldd	r24, Z+2	; 0x02
    3b78:	93 81       	ldd	r25, Z+3	; 0x03
    3b7a:	20 e0       	ldi	r18, 0x00	; 0
    3b7c:	3f ef       	ldi	r19, 0xFF	; 255
    3b7e:	4f e7       	ldi	r20, 0x7F	; 127
    3b80:	57 e4       	ldi	r21, 0x47	; 71
    3b82:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3b86:	18 16       	cp	r1, r24
    3b88:	0c f0       	brlt	.+2      	; 0x3b8c <snake_effect+0xb8>
    3b8a:	43 c0       	rjmp	.+134    	; 0x3c12 <snake_effect+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b8c:	fe 01       	movw	r30, r28
    3b8e:	e3 52       	subi	r30, 0x23	; 35
    3b90:	ff 4f       	sbci	r31, 0xFF	; 255
    3b92:	60 81       	ld	r22, Z
    3b94:	71 81       	ldd	r23, Z+1	; 0x01
    3b96:	82 81       	ldd	r24, Z+2	; 0x02
    3b98:	93 81       	ldd	r25, Z+3	; 0x03
    3b9a:	20 e0       	ldi	r18, 0x00	; 0
    3b9c:	30 e0       	ldi	r19, 0x00	; 0
    3b9e:	40 e2       	ldi	r20, 0x20	; 32
    3ba0:	51 e4       	ldi	r21, 0x41	; 65
    3ba2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ba6:	dc 01       	movw	r26, r24
    3ba8:	cb 01       	movw	r24, r22
    3baa:	8e 01       	movw	r16, r28
    3bac:	09 52       	subi	r16, 0x29	; 41
    3bae:	1f 4f       	sbci	r17, 0xFF	; 255
    3bb0:	bc 01       	movw	r22, r24
    3bb2:	cd 01       	movw	r24, r26
    3bb4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bb8:	dc 01       	movw	r26, r24
    3bba:	cb 01       	movw	r24, r22
    3bbc:	f8 01       	movw	r30, r16
    3bbe:	91 83       	std	Z+1, r25	; 0x01
    3bc0:	80 83       	st	Z, r24
    3bc2:	1f c0       	rjmp	.+62     	; 0x3c02 <snake_effect+0x12e>
    3bc4:	fe 01       	movw	r30, r28
    3bc6:	eb 52       	subi	r30, 0x2B	; 43
    3bc8:	ff 4f       	sbci	r31, 0xFF	; 255
    3bca:	88 ec       	ldi	r24, 0xC8	; 200
    3bcc:	90 e0       	ldi	r25, 0x00	; 0
    3bce:	91 83       	std	Z+1, r25	; 0x01
    3bd0:	80 83       	st	Z, r24
    3bd2:	fe 01       	movw	r30, r28
    3bd4:	eb 52       	subi	r30, 0x2B	; 43
    3bd6:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd8:	80 81       	ld	r24, Z
    3bda:	91 81       	ldd	r25, Z+1	; 0x01
    3bdc:	01 97       	sbiw	r24, 0x01	; 1
    3bde:	f1 f7       	brne	.-4      	; 0x3bdc <snake_effect+0x108>
    3be0:	fe 01       	movw	r30, r28
    3be2:	eb 52       	subi	r30, 0x2B	; 43
    3be4:	ff 4f       	sbci	r31, 0xFF	; 255
    3be6:	91 83       	std	Z+1, r25	; 0x01
    3be8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bea:	de 01       	movw	r26, r28
    3bec:	a9 52       	subi	r26, 0x29	; 41
    3bee:	bf 4f       	sbci	r27, 0xFF	; 255
    3bf0:	fe 01       	movw	r30, r28
    3bf2:	e9 52       	subi	r30, 0x29	; 41
    3bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    3bf6:	80 81       	ld	r24, Z
    3bf8:	91 81       	ldd	r25, Z+1	; 0x01
    3bfa:	01 97       	sbiw	r24, 0x01	; 1
    3bfc:	11 96       	adiw	r26, 0x01	; 1
    3bfe:	9c 93       	st	X, r25
    3c00:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c02:	fe 01       	movw	r30, r28
    3c04:	e9 52       	subi	r30, 0x29	; 41
    3c06:	ff 4f       	sbci	r31, 0xFF	; 255
    3c08:	80 81       	ld	r24, Z
    3c0a:	91 81       	ldd	r25, Z+1	; 0x01
    3c0c:	00 97       	sbiw	r24, 0x00	; 0
    3c0e:	d1 f6       	brne	.-76     	; 0x3bc4 <snake_effect+0xf0>
    3c10:	27 c0       	rjmp	.+78     	; 0x3c60 <snake_effect+0x18c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c12:	8e 01       	movw	r16, r28
    3c14:	09 52       	subi	r16, 0x29	; 41
    3c16:	1f 4f       	sbci	r17, 0xFF	; 255
    3c18:	fe 01       	movw	r30, r28
    3c1a:	e7 52       	subi	r30, 0x27	; 39
    3c1c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c1e:	60 81       	ld	r22, Z
    3c20:	71 81       	ldd	r23, Z+1	; 0x01
    3c22:	82 81       	ldd	r24, Z+2	; 0x02
    3c24:	93 81       	ldd	r25, Z+3	; 0x03
    3c26:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c2a:	dc 01       	movw	r26, r24
    3c2c:	cb 01       	movw	r24, r22
    3c2e:	f8 01       	movw	r30, r16
    3c30:	91 83       	std	Z+1, r25	; 0x01
    3c32:	80 83       	st	Z, r24
    3c34:	de 01       	movw	r26, r28
    3c36:	ad 52       	subi	r26, 0x2D	; 45
    3c38:	bf 4f       	sbci	r27, 0xFF	; 255
    3c3a:	fe 01       	movw	r30, r28
    3c3c:	e9 52       	subi	r30, 0x29	; 41
    3c3e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c40:	80 81       	ld	r24, Z
    3c42:	91 81       	ldd	r25, Z+1	; 0x01
    3c44:	8d 93       	st	X+, r24
    3c46:	9c 93       	st	X, r25
    3c48:	fe 01       	movw	r30, r28
    3c4a:	ed 52       	subi	r30, 0x2D	; 45
    3c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c4e:	80 81       	ld	r24, Z
    3c50:	91 81       	ldd	r25, Z+1	; 0x01
    3c52:	01 97       	sbiw	r24, 0x01	; 1
    3c54:	f1 f7       	brne	.-4      	; 0x3c52 <snake_effect+0x17e>
    3c56:	fe 01       	movw	r30, r28
    3c58:	ed 52       	subi	r30, 0x2D	; 45
    3c5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c5c:	91 83       	std	Z+1, r25	; 0x01
    3c5e:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b00000011;
    3c60:	e8 e3       	ldi	r30, 0x38	; 56
    3c62:	f0 e0       	ldi	r31, 0x00	; 0
    3c64:	83 e0       	ldi	r24, 0x03	; 3
    3c66:	80 83       	st	Z, r24
    3c68:	fe 01       	movw	r30, r28
    3c6a:	e1 53       	subi	r30, 0x31	; 49
    3c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c6e:	80 e0       	ldi	r24, 0x00	; 0
    3c70:	90 e0       	ldi	r25, 0x00	; 0
    3c72:	a6 e9       	ldi	r26, 0x96	; 150
    3c74:	b3 e4       	ldi	r27, 0x43	; 67
    3c76:	80 83       	st	Z, r24
    3c78:	91 83       	std	Z+1, r25	; 0x01
    3c7a:	a2 83       	std	Z+2, r26	; 0x02
    3c7c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c7e:	8e 01       	movw	r16, r28
    3c80:	05 53       	subi	r16, 0x35	; 53
    3c82:	1f 4f       	sbci	r17, 0xFF	; 255
    3c84:	fe 01       	movw	r30, r28
    3c86:	e1 53       	subi	r30, 0x31	; 49
    3c88:	ff 4f       	sbci	r31, 0xFF	; 255
    3c8a:	60 81       	ld	r22, Z
    3c8c:	71 81       	ldd	r23, Z+1	; 0x01
    3c8e:	82 81       	ldd	r24, Z+2	; 0x02
    3c90:	93 81       	ldd	r25, Z+3	; 0x03
    3c92:	20 e0       	ldi	r18, 0x00	; 0
    3c94:	30 e0       	ldi	r19, 0x00	; 0
    3c96:	4a ef       	ldi	r20, 0xFA	; 250
    3c98:	54 e4       	ldi	r21, 0x44	; 68
    3c9a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c9e:	dc 01       	movw	r26, r24
    3ca0:	cb 01       	movw	r24, r22
    3ca2:	f8 01       	movw	r30, r16
    3ca4:	80 83       	st	Z, r24
    3ca6:	91 83       	std	Z+1, r25	; 0x01
    3ca8:	a2 83       	std	Z+2, r26	; 0x02
    3caa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3cac:	fe 01       	movw	r30, r28
    3cae:	e5 53       	subi	r30, 0x35	; 53
    3cb0:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb2:	60 81       	ld	r22, Z
    3cb4:	71 81       	ldd	r23, Z+1	; 0x01
    3cb6:	82 81       	ldd	r24, Z+2	; 0x02
    3cb8:	93 81       	ldd	r25, Z+3	; 0x03
    3cba:	20 e0       	ldi	r18, 0x00	; 0
    3cbc:	30 e0       	ldi	r19, 0x00	; 0
    3cbe:	40 e8       	ldi	r20, 0x80	; 128
    3cc0:	5f e3       	ldi	r21, 0x3F	; 63
    3cc2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3cc6:	88 23       	and	r24, r24
    3cc8:	44 f4       	brge	.+16     	; 0x3cda <snake_effect+0x206>
		__ticks = 1;
    3cca:	fe 01       	movw	r30, r28
    3ccc:	e7 53       	subi	r30, 0x37	; 55
    3cce:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd0:	81 e0       	ldi	r24, 0x01	; 1
    3cd2:	90 e0       	ldi	r25, 0x00	; 0
    3cd4:	91 83       	std	Z+1, r25	; 0x01
    3cd6:	80 83       	st	Z, r24
    3cd8:	64 c0       	rjmp	.+200    	; 0x3da2 <snake_effect+0x2ce>
	else if (__tmp > 65535)
    3cda:	fe 01       	movw	r30, r28
    3cdc:	e5 53       	subi	r30, 0x35	; 53
    3cde:	ff 4f       	sbci	r31, 0xFF	; 255
    3ce0:	60 81       	ld	r22, Z
    3ce2:	71 81       	ldd	r23, Z+1	; 0x01
    3ce4:	82 81       	ldd	r24, Z+2	; 0x02
    3ce6:	93 81       	ldd	r25, Z+3	; 0x03
    3ce8:	20 e0       	ldi	r18, 0x00	; 0
    3cea:	3f ef       	ldi	r19, 0xFF	; 255
    3cec:	4f e7       	ldi	r20, 0x7F	; 127
    3cee:	57 e4       	ldi	r21, 0x47	; 71
    3cf0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3cf4:	18 16       	cp	r1, r24
    3cf6:	0c f0       	brlt	.+2      	; 0x3cfa <snake_effect+0x226>
    3cf8:	43 c0       	rjmp	.+134    	; 0x3d80 <snake_effect+0x2ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3cfa:	fe 01       	movw	r30, r28
    3cfc:	e1 53       	subi	r30, 0x31	; 49
    3cfe:	ff 4f       	sbci	r31, 0xFF	; 255
    3d00:	60 81       	ld	r22, Z
    3d02:	71 81       	ldd	r23, Z+1	; 0x01
    3d04:	82 81       	ldd	r24, Z+2	; 0x02
    3d06:	93 81       	ldd	r25, Z+3	; 0x03
    3d08:	20 e0       	ldi	r18, 0x00	; 0
    3d0a:	30 e0       	ldi	r19, 0x00	; 0
    3d0c:	40 e2       	ldi	r20, 0x20	; 32
    3d0e:	51 e4       	ldi	r21, 0x41	; 65
    3d10:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d14:	dc 01       	movw	r26, r24
    3d16:	cb 01       	movw	r24, r22
    3d18:	8e 01       	movw	r16, r28
    3d1a:	07 53       	subi	r16, 0x37	; 55
    3d1c:	1f 4f       	sbci	r17, 0xFF	; 255
    3d1e:	bc 01       	movw	r22, r24
    3d20:	cd 01       	movw	r24, r26
    3d22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d26:	dc 01       	movw	r26, r24
    3d28:	cb 01       	movw	r24, r22
    3d2a:	f8 01       	movw	r30, r16
    3d2c:	91 83       	std	Z+1, r25	; 0x01
    3d2e:	80 83       	st	Z, r24
    3d30:	1f c0       	rjmp	.+62     	; 0x3d70 <snake_effect+0x29c>
    3d32:	fe 01       	movw	r30, r28
    3d34:	e9 53       	subi	r30, 0x39	; 57
    3d36:	ff 4f       	sbci	r31, 0xFF	; 255
    3d38:	88 ec       	ldi	r24, 0xC8	; 200
    3d3a:	90 e0       	ldi	r25, 0x00	; 0
    3d3c:	91 83       	std	Z+1, r25	; 0x01
    3d3e:	80 83       	st	Z, r24
    3d40:	fe 01       	movw	r30, r28
    3d42:	e9 53       	subi	r30, 0x39	; 57
    3d44:	ff 4f       	sbci	r31, 0xFF	; 255
    3d46:	80 81       	ld	r24, Z
    3d48:	91 81       	ldd	r25, Z+1	; 0x01
    3d4a:	01 97       	sbiw	r24, 0x01	; 1
    3d4c:	f1 f7       	brne	.-4      	; 0x3d4a <snake_effect+0x276>
    3d4e:	fe 01       	movw	r30, r28
    3d50:	e9 53       	subi	r30, 0x39	; 57
    3d52:	ff 4f       	sbci	r31, 0xFF	; 255
    3d54:	91 83       	std	Z+1, r25	; 0x01
    3d56:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d58:	de 01       	movw	r26, r28
    3d5a:	a7 53       	subi	r26, 0x37	; 55
    3d5c:	bf 4f       	sbci	r27, 0xFF	; 255
    3d5e:	fe 01       	movw	r30, r28
    3d60:	e7 53       	subi	r30, 0x37	; 55
    3d62:	ff 4f       	sbci	r31, 0xFF	; 255
    3d64:	80 81       	ld	r24, Z
    3d66:	91 81       	ldd	r25, Z+1	; 0x01
    3d68:	01 97       	sbiw	r24, 0x01	; 1
    3d6a:	11 96       	adiw	r26, 0x01	; 1
    3d6c:	9c 93       	st	X, r25
    3d6e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d70:	fe 01       	movw	r30, r28
    3d72:	e7 53       	subi	r30, 0x37	; 55
    3d74:	ff 4f       	sbci	r31, 0xFF	; 255
    3d76:	80 81       	ld	r24, Z
    3d78:	91 81       	ldd	r25, Z+1	; 0x01
    3d7a:	00 97       	sbiw	r24, 0x00	; 0
    3d7c:	d1 f6       	brne	.-76     	; 0x3d32 <snake_effect+0x25e>
    3d7e:	27 c0       	rjmp	.+78     	; 0x3dce <snake_effect+0x2fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d80:	8e 01       	movw	r16, r28
    3d82:	07 53       	subi	r16, 0x37	; 55
    3d84:	1f 4f       	sbci	r17, 0xFF	; 255
    3d86:	fe 01       	movw	r30, r28
    3d88:	e5 53       	subi	r30, 0x35	; 53
    3d8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d8c:	60 81       	ld	r22, Z
    3d8e:	71 81       	ldd	r23, Z+1	; 0x01
    3d90:	82 81       	ldd	r24, Z+2	; 0x02
    3d92:	93 81       	ldd	r25, Z+3	; 0x03
    3d94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d98:	dc 01       	movw	r26, r24
    3d9a:	cb 01       	movw	r24, r22
    3d9c:	f8 01       	movw	r30, r16
    3d9e:	91 83       	std	Z+1, r25	; 0x01
    3da0:	80 83       	st	Z, r24
    3da2:	de 01       	movw	r26, r28
    3da4:	ab 53       	subi	r26, 0x3B	; 59
    3da6:	bf 4f       	sbci	r27, 0xFF	; 255
    3da8:	fe 01       	movw	r30, r28
    3daa:	e7 53       	subi	r30, 0x37	; 55
    3dac:	ff 4f       	sbci	r31, 0xFF	; 255
    3dae:	80 81       	ld	r24, Z
    3db0:	91 81       	ldd	r25, Z+1	; 0x01
    3db2:	8d 93       	st	X+, r24
    3db4:	9c 93       	st	X, r25
    3db6:	fe 01       	movw	r30, r28
    3db8:	eb 53       	subi	r30, 0x3B	; 59
    3dba:	ff 4f       	sbci	r31, 0xFF	; 255
    3dbc:	80 81       	ld	r24, Z
    3dbe:	91 81       	ldd	r25, Z+1	; 0x01
    3dc0:	01 97       	sbiw	r24, 0x01	; 1
    3dc2:	f1 f7       	brne	.-4      	; 0x3dc0 <snake_effect+0x2ec>
    3dc4:	fe 01       	movw	r30, r28
    3dc6:	eb 53       	subi	r30, 0x3B	; 59
    3dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dca:	91 83       	std	Z+1, r25	; 0x01
    3dcc:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b00000111;
    3dce:	e8 e3       	ldi	r30, 0x38	; 56
    3dd0:	f0 e0       	ldi	r31, 0x00	; 0
    3dd2:	87 e0       	ldi	r24, 0x07	; 7
    3dd4:	80 83       	st	Z, r24
    3dd6:	fe 01       	movw	r30, r28
    3dd8:	ef 53       	subi	r30, 0x3F	; 63
    3dda:	ff 4f       	sbci	r31, 0xFF	; 255
    3ddc:	80 e0       	ldi	r24, 0x00	; 0
    3dde:	90 e0       	ldi	r25, 0x00	; 0
    3de0:	a6 e9       	ldi	r26, 0x96	; 150
    3de2:	b3 e4       	ldi	r27, 0x43	; 67
    3de4:	80 83       	st	Z, r24
    3de6:	91 83       	std	Z+1, r25	; 0x01
    3de8:	a2 83       	std	Z+2, r26	; 0x02
    3dea:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3dec:	8e 01       	movw	r16, r28
    3dee:	03 54       	subi	r16, 0x43	; 67
    3df0:	1f 4f       	sbci	r17, 0xFF	; 255
    3df2:	fe 01       	movw	r30, r28
    3df4:	ef 53       	subi	r30, 0x3F	; 63
    3df6:	ff 4f       	sbci	r31, 0xFF	; 255
    3df8:	60 81       	ld	r22, Z
    3dfa:	71 81       	ldd	r23, Z+1	; 0x01
    3dfc:	82 81       	ldd	r24, Z+2	; 0x02
    3dfe:	93 81       	ldd	r25, Z+3	; 0x03
    3e00:	20 e0       	ldi	r18, 0x00	; 0
    3e02:	30 e0       	ldi	r19, 0x00	; 0
    3e04:	4a ef       	ldi	r20, 0xFA	; 250
    3e06:	54 e4       	ldi	r21, 0x44	; 68
    3e08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e0c:	dc 01       	movw	r26, r24
    3e0e:	cb 01       	movw	r24, r22
    3e10:	f8 01       	movw	r30, r16
    3e12:	80 83       	st	Z, r24
    3e14:	91 83       	std	Z+1, r25	; 0x01
    3e16:	a2 83       	std	Z+2, r26	; 0x02
    3e18:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e1a:	fe 01       	movw	r30, r28
    3e1c:	e3 54       	subi	r30, 0x43	; 67
    3e1e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e20:	60 81       	ld	r22, Z
    3e22:	71 81       	ldd	r23, Z+1	; 0x01
    3e24:	82 81       	ldd	r24, Z+2	; 0x02
    3e26:	93 81       	ldd	r25, Z+3	; 0x03
    3e28:	20 e0       	ldi	r18, 0x00	; 0
    3e2a:	30 e0       	ldi	r19, 0x00	; 0
    3e2c:	40 e8       	ldi	r20, 0x80	; 128
    3e2e:	5f e3       	ldi	r21, 0x3F	; 63
    3e30:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3e34:	88 23       	and	r24, r24
    3e36:	44 f4       	brge	.+16     	; 0x3e48 <snake_effect+0x374>
		__ticks = 1;
    3e38:	fe 01       	movw	r30, r28
    3e3a:	e5 54       	subi	r30, 0x45	; 69
    3e3c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e3e:	81 e0       	ldi	r24, 0x01	; 1
    3e40:	90 e0       	ldi	r25, 0x00	; 0
    3e42:	91 83       	std	Z+1, r25	; 0x01
    3e44:	80 83       	st	Z, r24
    3e46:	64 c0       	rjmp	.+200    	; 0x3f10 <snake_effect+0x43c>
	else if (__tmp > 65535)
    3e48:	fe 01       	movw	r30, r28
    3e4a:	e3 54       	subi	r30, 0x43	; 67
    3e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e4e:	60 81       	ld	r22, Z
    3e50:	71 81       	ldd	r23, Z+1	; 0x01
    3e52:	82 81       	ldd	r24, Z+2	; 0x02
    3e54:	93 81       	ldd	r25, Z+3	; 0x03
    3e56:	20 e0       	ldi	r18, 0x00	; 0
    3e58:	3f ef       	ldi	r19, 0xFF	; 255
    3e5a:	4f e7       	ldi	r20, 0x7F	; 127
    3e5c:	57 e4       	ldi	r21, 0x47	; 71
    3e5e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3e62:	18 16       	cp	r1, r24
    3e64:	0c f0       	brlt	.+2      	; 0x3e68 <snake_effect+0x394>
    3e66:	43 c0       	rjmp	.+134    	; 0x3eee <snake_effect+0x41a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e68:	fe 01       	movw	r30, r28
    3e6a:	ef 53       	subi	r30, 0x3F	; 63
    3e6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e6e:	60 81       	ld	r22, Z
    3e70:	71 81       	ldd	r23, Z+1	; 0x01
    3e72:	82 81       	ldd	r24, Z+2	; 0x02
    3e74:	93 81       	ldd	r25, Z+3	; 0x03
    3e76:	20 e0       	ldi	r18, 0x00	; 0
    3e78:	30 e0       	ldi	r19, 0x00	; 0
    3e7a:	40 e2       	ldi	r20, 0x20	; 32
    3e7c:	51 e4       	ldi	r21, 0x41	; 65
    3e7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e82:	dc 01       	movw	r26, r24
    3e84:	cb 01       	movw	r24, r22
    3e86:	8e 01       	movw	r16, r28
    3e88:	05 54       	subi	r16, 0x45	; 69
    3e8a:	1f 4f       	sbci	r17, 0xFF	; 255
    3e8c:	bc 01       	movw	r22, r24
    3e8e:	cd 01       	movw	r24, r26
    3e90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e94:	dc 01       	movw	r26, r24
    3e96:	cb 01       	movw	r24, r22
    3e98:	f8 01       	movw	r30, r16
    3e9a:	91 83       	std	Z+1, r25	; 0x01
    3e9c:	80 83       	st	Z, r24
    3e9e:	1f c0       	rjmp	.+62     	; 0x3ede <snake_effect+0x40a>
    3ea0:	fe 01       	movw	r30, r28
    3ea2:	e7 54       	subi	r30, 0x47	; 71
    3ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ea6:	88 ec       	ldi	r24, 0xC8	; 200
    3ea8:	90 e0       	ldi	r25, 0x00	; 0
    3eaa:	91 83       	std	Z+1, r25	; 0x01
    3eac:	80 83       	st	Z, r24
    3eae:	fe 01       	movw	r30, r28
    3eb0:	e7 54       	subi	r30, 0x47	; 71
    3eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb4:	80 81       	ld	r24, Z
    3eb6:	91 81       	ldd	r25, Z+1	; 0x01
    3eb8:	01 97       	sbiw	r24, 0x01	; 1
    3eba:	f1 f7       	brne	.-4      	; 0x3eb8 <snake_effect+0x3e4>
    3ebc:	fe 01       	movw	r30, r28
    3ebe:	e7 54       	subi	r30, 0x47	; 71
    3ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ec2:	91 83       	std	Z+1, r25	; 0x01
    3ec4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ec6:	de 01       	movw	r26, r28
    3ec8:	a5 54       	subi	r26, 0x45	; 69
    3eca:	bf 4f       	sbci	r27, 0xFF	; 255
    3ecc:	fe 01       	movw	r30, r28
    3ece:	e5 54       	subi	r30, 0x45	; 69
    3ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ed2:	80 81       	ld	r24, Z
    3ed4:	91 81       	ldd	r25, Z+1	; 0x01
    3ed6:	01 97       	sbiw	r24, 0x01	; 1
    3ed8:	11 96       	adiw	r26, 0x01	; 1
    3eda:	9c 93       	st	X, r25
    3edc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ede:	fe 01       	movw	r30, r28
    3ee0:	e5 54       	subi	r30, 0x45	; 69
    3ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ee4:	80 81       	ld	r24, Z
    3ee6:	91 81       	ldd	r25, Z+1	; 0x01
    3ee8:	00 97       	sbiw	r24, 0x00	; 0
    3eea:	d1 f6       	brne	.-76     	; 0x3ea0 <snake_effect+0x3cc>
    3eec:	27 c0       	rjmp	.+78     	; 0x3f3c <snake_effect+0x468>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3eee:	8e 01       	movw	r16, r28
    3ef0:	05 54       	subi	r16, 0x45	; 69
    3ef2:	1f 4f       	sbci	r17, 0xFF	; 255
    3ef4:	fe 01       	movw	r30, r28
    3ef6:	e3 54       	subi	r30, 0x43	; 67
    3ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    3efa:	60 81       	ld	r22, Z
    3efc:	71 81       	ldd	r23, Z+1	; 0x01
    3efe:	82 81       	ldd	r24, Z+2	; 0x02
    3f00:	93 81       	ldd	r25, Z+3	; 0x03
    3f02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f06:	dc 01       	movw	r26, r24
    3f08:	cb 01       	movw	r24, r22
    3f0a:	f8 01       	movw	r30, r16
    3f0c:	91 83       	std	Z+1, r25	; 0x01
    3f0e:	80 83       	st	Z, r24
    3f10:	de 01       	movw	r26, r28
    3f12:	a9 54       	subi	r26, 0x49	; 73
    3f14:	bf 4f       	sbci	r27, 0xFF	; 255
    3f16:	fe 01       	movw	r30, r28
    3f18:	e5 54       	subi	r30, 0x45	; 69
    3f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f1c:	80 81       	ld	r24, Z
    3f1e:	91 81       	ldd	r25, Z+1	; 0x01
    3f20:	8d 93       	st	X+, r24
    3f22:	9c 93       	st	X, r25
    3f24:	fe 01       	movw	r30, r28
    3f26:	e9 54       	subi	r30, 0x49	; 73
    3f28:	ff 4f       	sbci	r31, 0xFF	; 255
    3f2a:	80 81       	ld	r24, Z
    3f2c:	91 81       	ldd	r25, Z+1	; 0x01
    3f2e:	01 97       	sbiw	r24, 0x01	; 1
    3f30:	f1 f7       	brne	.-4      	; 0x3f2e <snake_effect+0x45a>
    3f32:	fe 01       	movw	r30, r28
    3f34:	e9 54       	subi	r30, 0x49	; 73
    3f36:	ff 4f       	sbci	r31, 0xFF	; 255
    3f38:	91 83       	std	Z+1, r25	; 0x01
    3f3a:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b00001111;
    3f3c:	e8 e3       	ldi	r30, 0x38	; 56
    3f3e:	f0 e0       	ldi	r31, 0x00	; 0
    3f40:	8f e0       	ldi	r24, 0x0F	; 15
    3f42:	80 83       	st	Z, r24
    3f44:	fe 01       	movw	r30, r28
    3f46:	ed 54       	subi	r30, 0x4D	; 77
    3f48:	ff 4f       	sbci	r31, 0xFF	; 255
    3f4a:	80 e0       	ldi	r24, 0x00	; 0
    3f4c:	90 e0       	ldi	r25, 0x00	; 0
    3f4e:	a6 e9       	ldi	r26, 0x96	; 150
    3f50:	b3 e4       	ldi	r27, 0x43	; 67
    3f52:	80 83       	st	Z, r24
    3f54:	91 83       	std	Z+1, r25	; 0x01
    3f56:	a2 83       	std	Z+2, r26	; 0x02
    3f58:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f5a:	8e 01       	movw	r16, r28
    3f5c:	01 55       	subi	r16, 0x51	; 81
    3f5e:	1f 4f       	sbci	r17, 0xFF	; 255
    3f60:	fe 01       	movw	r30, r28
    3f62:	ed 54       	subi	r30, 0x4D	; 77
    3f64:	ff 4f       	sbci	r31, 0xFF	; 255
    3f66:	60 81       	ld	r22, Z
    3f68:	71 81       	ldd	r23, Z+1	; 0x01
    3f6a:	82 81       	ldd	r24, Z+2	; 0x02
    3f6c:	93 81       	ldd	r25, Z+3	; 0x03
    3f6e:	20 e0       	ldi	r18, 0x00	; 0
    3f70:	30 e0       	ldi	r19, 0x00	; 0
    3f72:	4a ef       	ldi	r20, 0xFA	; 250
    3f74:	54 e4       	ldi	r21, 0x44	; 68
    3f76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f7a:	dc 01       	movw	r26, r24
    3f7c:	cb 01       	movw	r24, r22
    3f7e:	f8 01       	movw	r30, r16
    3f80:	80 83       	st	Z, r24
    3f82:	91 83       	std	Z+1, r25	; 0x01
    3f84:	a2 83       	std	Z+2, r26	; 0x02
    3f86:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f88:	fe 01       	movw	r30, r28
    3f8a:	e1 55       	subi	r30, 0x51	; 81
    3f8c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f8e:	60 81       	ld	r22, Z
    3f90:	71 81       	ldd	r23, Z+1	; 0x01
    3f92:	82 81       	ldd	r24, Z+2	; 0x02
    3f94:	93 81       	ldd	r25, Z+3	; 0x03
    3f96:	20 e0       	ldi	r18, 0x00	; 0
    3f98:	30 e0       	ldi	r19, 0x00	; 0
    3f9a:	40 e8       	ldi	r20, 0x80	; 128
    3f9c:	5f e3       	ldi	r21, 0x3F	; 63
    3f9e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3fa2:	88 23       	and	r24, r24
    3fa4:	44 f4       	brge	.+16     	; 0x3fb6 <snake_effect+0x4e2>
		__ticks = 1;
    3fa6:	fe 01       	movw	r30, r28
    3fa8:	e3 55       	subi	r30, 0x53	; 83
    3faa:	ff 4f       	sbci	r31, 0xFF	; 255
    3fac:	81 e0       	ldi	r24, 0x01	; 1
    3fae:	90 e0       	ldi	r25, 0x00	; 0
    3fb0:	91 83       	std	Z+1, r25	; 0x01
    3fb2:	80 83       	st	Z, r24
    3fb4:	64 c0       	rjmp	.+200    	; 0x407e <snake_effect+0x5aa>
	else if (__tmp > 65535)
    3fb6:	fe 01       	movw	r30, r28
    3fb8:	e1 55       	subi	r30, 0x51	; 81
    3fba:	ff 4f       	sbci	r31, 0xFF	; 255
    3fbc:	60 81       	ld	r22, Z
    3fbe:	71 81       	ldd	r23, Z+1	; 0x01
    3fc0:	82 81       	ldd	r24, Z+2	; 0x02
    3fc2:	93 81       	ldd	r25, Z+3	; 0x03
    3fc4:	20 e0       	ldi	r18, 0x00	; 0
    3fc6:	3f ef       	ldi	r19, 0xFF	; 255
    3fc8:	4f e7       	ldi	r20, 0x7F	; 127
    3fca:	57 e4       	ldi	r21, 0x47	; 71
    3fcc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3fd0:	18 16       	cp	r1, r24
    3fd2:	0c f0       	brlt	.+2      	; 0x3fd6 <snake_effect+0x502>
    3fd4:	43 c0       	rjmp	.+134    	; 0x405c <snake_effect+0x588>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fd6:	fe 01       	movw	r30, r28
    3fd8:	ed 54       	subi	r30, 0x4D	; 77
    3fda:	ff 4f       	sbci	r31, 0xFF	; 255
    3fdc:	60 81       	ld	r22, Z
    3fde:	71 81       	ldd	r23, Z+1	; 0x01
    3fe0:	82 81       	ldd	r24, Z+2	; 0x02
    3fe2:	93 81       	ldd	r25, Z+3	; 0x03
    3fe4:	20 e0       	ldi	r18, 0x00	; 0
    3fe6:	30 e0       	ldi	r19, 0x00	; 0
    3fe8:	40 e2       	ldi	r20, 0x20	; 32
    3fea:	51 e4       	ldi	r21, 0x41	; 65
    3fec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ff0:	dc 01       	movw	r26, r24
    3ff2:	cb 01       	movw	r24, r22
    3ff4:	8e 01       	movw	r16, r28
    3ff6:	03 55       	subi	r16, 0x53	; 83
    3ff8:	1f 4f       	sbci	r17, 0xFF	; 255
    3ffa:	bc 01       	movw	r22, r24
    3ffc:	cd 01       	movw	r24, r26
    3ffe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4002:	dc 01       	movw	r26, r24
    4004:	cb 01       	movw	r24, r22
    4006:	f8 01       	movw	r30, r16
    4008:	91 83       	std	Z+1, r25	; 0x01
    400a:	80 83       	st	Z, r24
    400c:	1f c0       	rjmp	.+62     	; 0x404c <snake_effect+0x578>
    400e:	fe 01       	movw	r30, r28
    4010:	e5 55       	subi	r30, 0x55	; 85
    4012:	ff 4f       	sbci	r31, 0xFF	; 255
    4014:	88 ec       	ldi	r24, 0xC8	; 200
    4016:	90 e0       	ldi	r25, 0x00	; 0
    4018:	91 83       	std	Z+1, r25	; 0x01
    401a:	80 83       	st	Z, r24
    401c:	fe 01       	movw	r30, r28
    401e:	e5 55       	subi	r30, 0x55	; 85
    4020:	ff 4f       	sbci	r31, 0xFF	; 255
    4022:	80 81       	ld	r24, Z
    4024:	91 81       	ldd	r25, Z+1	; 0x01
    4026:	01 97       	sbiw	r24, 0x01	; 1
    4028:	f1 f7       	brne	.-4      	; 0x4026 <snake_effect+0x552>
    402a:	fe 01       	movw	r30, r28
    402c:	e5 55       	subi	r30, 0x55	; 85
    402e:	ff 4f       	sbci	r31, 0xFF	; 255
    4030:	91 83       	std	Z+1, r25	; 0x01
    4032:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4034:	de 01       	movw	r26, r28
    4036:	a3 55       	subi	r26, 0x53	; 83
    4038:	bf 4f       	sbci	r27, 0xFF	; 255
    403a:	fe 01       	movw	r30, r28
    403c:	e3 55       	subi	r30, 0x53	; 83
    403e:	ff 4f       	sbci	r31, 0xFF	; 255
    4040:	80 81       	ld	r24, Z
    4042:	91 81       	ldd	r25, Z+1	; 0x01
    4044:	01 97       	sbiw	r24, 0x01	; 1
    4046:	11 96       	adiw	r26, 0x01	; 1
    4048:	9c 93       	st	X, r25
    404a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    404c:	fe 01       	movw	r30, r28
    404e:	e3 55       	subi	r30, 0x53	; 83
    4050:	ff 4f       	sbci	r31, 0xFF	; 255
    4052:	80 81       	ld	r24, Z
    4054:	91 81       	ldd	r25, Z+1	; 0x01
    4056:	00 97       	sbiw	r24, 0x00	; 0
    4058:	d1 f6       	brne	.-76     	; 0x400e <snake_effect+0x53a>
    405a:	27 c0       	rjmp	.+78     	; 0x40aa <snake_effect+0x5d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    405c:	8e 01       	movw	r16, r28
    405e:	03 55       	subi	r16, 0x53	; 83
    4060:	1f 4f       	sbci	r17, 0xFF	; 255
    4062:	fe 01       	movw	r30, r28
    4064:	e1 55       	subi	r30, 0x51	; 81
    4066:	ff 4f       	sbci	r31, 0xFF	; 255
    4068:	60 81       	ld	r22, Z
    406a:	71 81       	ldd	r23, Z+1	; 0x01
    406c:	82 81       	ldd	r24, Z+2	; 0x02
    406e:	93 81       	ldd	r25, Z+3	; 0x03
    4070:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4074:	dc 01       	movw	r26, r24
    4076:	cb 01       	movw	r24, r22
    4078:	f8 01       	movw	r30, r16
    407a:	91 83       	std	Z+1, r25	; 0x01
    407c:	80 83       	st	Z, r24
    407e:	de 01       	movw	r26, r28
    4080:	a7 55       	subi	r26, 0x57	; 87
    4082:	bf 4f       	sbci	r27, 0xFF	; 255
    4084:	fe 01       	movw	r30, r28
    4086:	e3 55       	subi	r30, 0x53	; 83
    4088:	ff 4f       	sbci	r31, 0xFF	; 255
    408a:	80 81       	ld	r24, Z
    408c:	91 81       	ldd	r25, Z+1	; 0x01
    408e:	8d 93       	st	X+, r24
    4090:	9c 93       	st	X, r25
    4092:	fe 01       	movw	r30, r28
    4094:	e7 55       	subi	r30, 0x57	; 87
    4096:	ff 4f       	sbci	r31, 0xFF	; 255
    4098:	80 81       	ld	r24, Z
    409a:	91 81       	ldd	r25, Z+1	; 0x01
    409c:	01 97       	sbiw	r24, 0x01	; 1
    409e:	f1 f7       	brne	.-4      	; 0x409c <snake_effect+0x5c8>
    40a0:	fe 01       	movw	r30, r28
    40a2:	e7 55       	subi	r30, 0x57	; 87
    40a4:	ff 4f       	sbci	r31, 0xFF	; 255
    40a6:	91 83       	std	Z+1, r25	; 0x01
    40a8:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b00011111;
    40aa:	e8 e3       	ldi	r30, 0x38	; 56
    40ac:	f0 e0       	ldi	r31, 0x00	; 0
    40ae:	8f e1       	ldi	r24, 0x1F	; 31
    40b0:	80 83       	st	Z, r24
    40b2:	fe 01       	movw	r30, r28
    40b4:	eb 55       	subi	r30, 0x5B	; 91
    40b6:	ff 4f       	sbci	r31, 0xFF	; 255
    40b8:	80 e0       	ldi	r24, 0x00	; 0
    40ba:	90 e0       	ldi	r25, 0x00	; 0
    40bc:	a6 e9       	ldi	r26, 0x96	; 150
    40be:	b3 e4       	ldi	r27, 0x43	; 67
    40c0:	80 83       	st	Z, r24
    40c2:	91 83       	std	Z+1, r25	; 0x01
    40c4:	a2 83       	std	Z+2, r26	; 0x02
    40c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40c8:	8e 01       	movw	r16, r28
    40ca:	0f 55       	subi	r16, 0x5F	; 95
    40cc:	1f 4f       	sbci	r17, 0xFF	; 255
    40ce:	fe 01       	movw	r30, r28
    40d0:	eb 55       	subi	r30, 0x5B	; 91
    40d2:	ff 4f       	sbci	r31, 0xFF	; 255
    40d4:	60 81       	ld	r22, Z
    40d6:	71 81       	ldd	r23, Z+1	; 0x01
    40d8:	82 81       	ldd	r24, Z+2	; 0x02
    40da:	93 81       	ldd	r25, Z+3	; 0x03
    40dc:	20 e0       	ldi	r18, 0x00	; 0
    40de:	30 e0       	ldi	r19, 0x00	; 0
    40e0:	4a ef       	ldi	r20, 0xFA	; 250
    40e2:	54 e4       	ldi	r21, 0x44	; 68
    40e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40e8:	dc 01       	movw	r26, r24
    40ea:	cb 01       	movw	r24, r22
    40ec:	f8 01       	movw	r30, r16
    40ee:	80 83       	st	Z, r24
    40f0:	91 83       	std	Z+1, r25	; 0x01
    40f2:	a2 83       	std	Z+2, r26	; 0x02
    40f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    40f6:	fe 01       	movw	r30, r28
    40f8:	ef 55       	subi	r30, 0x5F	; 95
    40fa:	ff 4f       	sbci	r31, 0xFF	; 255
    40fc:	60 81       	ld	r22, Z
    40fe:	71 81       	ldd	r23, Z+1	; 0x01
    4100:	82 81       	ldd	r24, Z+2	; 0x02
    4102:	93 81       	ldd	r25, Z+3	; 0x03
    4104:	20 e0       	ldi	r18, 0x00	; 0
    4106:	30 e0       	ldi	r19, 0x00	; 0
    4108:	40 e8       	ldi	r20, 0x80	; 128
    410a:	5f e3       	ldi	r21, 0x3F	; 63
    410c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4110:	88 23       	and	r24, r24
    4112:	44 f4       	brge	.+16     	; 0x4124 <snake_effect+0x650>
		__ticks = 1;
    4114:	fe 01       	movw	r30, r28
    4116:	e1 56       	subi	r30, 0x61	; 97
    4118:	ff 4f       	sbci	r31, 0xFF	; 255
    411a:	81 e0       	ldi	r24, 0x01	; 1
    411c:	90 e0       	ldi	r25, 0x00	; 0
    411e:	91 83       	std	Z+1, r25	; 0x01
    4120:	80 83       	st	Z, r24
    4122:	64 c0       	rjmp	.+200    	; 0x41ec <snake_effect+0x718>
	else if (__tmp > 65535)
    4124:	fe 01       	movw	r30, r28
    4126:	ef 55       	subi	r30, 0x5F	; 95
    4128:	ff 4f       	sbci	r31, 0xFF	; 255
    412a:	60 81       	ld	r22, Z
    412c:	71 81       	ldd	r23, Z+1	; 0x01
    412e:	82 81       	ldd	r24, Z+2	; 0x02
    4130:	93 81       	ldd	r25, Z+3	; 0x03
    4132:	20 e0       	ldi	r18, 0x00	; 0
    4134:	3f ef       	ldi	r19, 0xFF	; 255
    4136:	4f e7       	ldi	r20, 0x7F	; 127
    4138:	57 e4       	ldi	r21, 0x47	; 71
    413a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    413e:	18 16       	cp	r1, r24
    4140:	0c f0       	brlt	.+2      	; 0x4144 <snake_effect+0x670>
    4142:	43 c0       	rjmp	.+134    	; 0x41ca <snake_effect+0x6f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4144:	fe 01       	movw	r30, r28
    4146:	eb 55       	subi	r30, 0x5B	; 91
    4148:	ff 4f       	sbci	r31, 0xFF	; 255
    414a:	60 81       	ld	r22, Z
    414c:	71 81       	ldd	r23, Z+1	; 0x01
    414e:	82 81       	ldd	r24, Z+2	; 0x02
    4150:	93 81       	ldd	r25, Z+3	; 0x03
    4152:	20 e0       	ldi	r18, 0x00	; 0
    4154:	30 e0       	ldi	r19, 0x00	; 0
    4156:	40 e2       	ldi	r20, 0x20	; 32
    4158:	51 e4       	ldi	r21, 0x41	; 65
    415a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    415e:	dc 01       	movw	r26, r24
    4160:	cb 01       	movw	r24, r22
    4162:	8e 01       	movw	r16, r28
    4164:	01 56       	subi	r16, 0x61	; 97
    4166:	1f 4f       	sbci	r17, 0xFF	; 255
    4168:	bc 01       	movw	r22, r24
    416a:	cd 01       	movw	r24, r26
    416c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4170:	dc 01       	movw	r26, r24
    4172:	cb 01       	movw	r24, r22
    4174:	f8 01       	movw	r30, r16
    4176:	91 83       	std	Z+1, r25	; 0x01
    4178:	80 83       	st	Z, r24
    417a:	1f c0       	rjmp	.+62     	; 0x41ba <snake_effect+0x6e6>
    417c:	fe 01       	movw	r30, r28
    417e:	e3 56       	subi	r30, 0x63	; 99
    4180:	ff 4f       	sbci	r31, 0xFF	; 255
    4182:	88 ec       	ldi	r24, 0xC8	; 200
    4184:	90 e0       	ldi	r25, 0x00	; 0
    4186:	91 83       	std	Z+1, r25	; 0x01
    4188:	80 83       	st	Z, r24
    418a:	fe 01       	movw	r30, r28
    418c:	e3 56       	subi	r30, 0x63	; 99
    418e:	ff 4f       	sbci	r31, 0xFF	; 255
    4190:	80 81       	ld	r24, Z
    4192:	91 81       	ldd	r25, Z+1	; 0x01
    4194:	01 97       	sbiw	r24, 0x01	; 1
    4196:	f1 f7       	brne	.-4      	; 0x4194 <snake_effect+0x6c0>
    4198:	fe 01       	movw	r30, r28
    419a:	e3 56       	subi	r30, 0x63	; 99
    419c:	ff 4f       	sbci	r31, 0xFF	; 255
    419e:	91 83       	std	Z+1, r25	; 0x01
    41a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41a2:	de 01       	movw	r26, r28
    41a4:	a1 56       	subi	r26, 0x61	; 97
    41a6:	bf 4f       	sbci	r27, 0xFF	; 255
    41a8:	fe 01       	movw	r30, r28
    41aa:	e1 56       	subi	r30, 0x61	; 97
    41ac:	ff 4f       	sbci	r31, 0xFF	; 255
    41ae:	80 81       	ld	r24, Z
    41b0:	91 81       	ldd	r25, Z+1	; 0x01
    41b2:	01 97       	sbiw	r24, 0x01	; 1
    41b4:	11 96       	adiw	r26, 0x01	; 1
    41b6:	9c 93       	st	X, r25
    41b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41ba:	fe 01       	movw	r30, r28
    41bc:	e1 56       	subi	r30, 0x61	; 97
    41be:	ff 4f       	sbci	r31, 0xFF	; 255
    41c0:	80 81       	ld	r24, Z
    41c2:	91 81       	ldd	r25, Z+1	; 0x01
    41c4:	00 97       	sbiw	r24, 0x00	; 0
    41c6:	d1 f6       	brne	.-76     	; 0x417c <snake_effect+0x6a8>
    41c8:	27 c0       	rjmp	.+78     	; 0x4218 <snake_effect+0x744>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41ca:	8e 01       	movw	r16, r28
    41cc:	01 56       	subi	r16, 0x61	; 97
    41ce:	1f 4f       	sbci	r17, 0xFF	; 255
    41d0:	fe 01       	movw	r30, r28
    41d2:	ef 55       	subi	r30, 0x5F	; 95
    41d4:	ff 4f       	sbci	r31, 0xFF	; 255
    41d6:	60 81       	ld	r22, Z
    41d8:	71 81       	ldd	r23, Z+1	; 0x01
    41da:	82 81       	ldd	r24, Z+2	; 0x02
    41dc:	93 81       	ldd	r25, Z+3	; 0x03
    41de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    41e2:	dc 01       	movw	r26, r24
    41e4:	cb 01       	movw	r24, r22
    41e6:	f8 01       	movw	r30, r16
    41e8:	91 83       	std	Z+1, r25	; 0x01
    41ea:	80 83       	st	Z, r24
    41ec:	de 01       	movw	r26, r28
    41ee:	a5 56       	subi	r26, 0x65	; 101
    41f0:	bf 4f       	sbci	r27, 0xFF	; 255
    41f2:	fe 01       	movw	r30, r28
    41f4:	e1 56       	subi	r30, 0x61	; 97
    41f6:	ff 4f       	sbci	r31, 0xFF	; 255
    41f8:	80 81       	ld	r24, Z
    41fa:	91 81       	ldd	r25, Z+1	; 0x01
    41fc:	8d 93       	st	X+, r24
    41fe:	9c 93       	st	X, r25
    4200:	fe 01       	movw	r30, r28
    4202:	e5 56       	subi	r30, 0x65	; 101
    4204:	ff 4f       	sbci	r31, 0xFF	; 255
    4206:	80 81       	ld	r24, Z
    4208:	91 81       	ldd	r25, Z+1	; 0x01
    420a:	01 97       	sbiw	r24, 0x01	; 1
    420c:	f1 f7       	brne	.-4      	; 0x420a <snake_effect+0x736>
    420e:	fe 01       	movw	r30, r28
    4210:	e5 56       	subi	r30, 0x65	; 101
    4212:	ff 4f       	sbci	r31, 0xFF	; 255
    4214:	91 83       	std	Z+1, r25	; 0x01
    4216:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b00111111;
    4218:	e8 e3       	ldi	r30, 0x38	; 56
    421a:	f0 e0       	ldi	r31, 0x00	; 0
    421c:	8f e3       	ldi	r24, 0x3F	; 63
    421e:	80 83       	st	Z, r24
    4220:	fe 01       	movw	r30, r28
    4222:	e9 56       	subi	r30, 0x69	; 105
    4224:	ff 4f       	sbci	r31, 0xFF	; 255
    4226:	80 e0       	ldi	r24, 0x00	; 0
    4228:	90 e0       	ldi	r25, 0x00	; 0
    422a:	a6 e9       	ldi	r26, 0x96	; 150
    422c:	b3 e4       	ldi	r27, 0x43	; 67
    422e:	80 83       	st	Z, r24
    4230:	91 83       	std	Z+1, r25	; 0x01
    4232:	a2 83       	std	Z+2, r26	; 0x02
    4234:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4236:	8e 01       	movw	r16, r28
    4238:	0d 56       	subi	r16, 0x6D	; 109
    423a:	1f 4f       	sbci	r17, 0xFF	; 255
    423c:	fe 01       	movw	r30, r28
    423e:	e9 56       	subi	r30, 0x69	; 105
    4240:	ff 4f       	sbci	r31, 0xFF	; 255
    4242:	60 81       	ld	r22, Z
    4244:	71 81       	ldd	r23, Z+1	; 0x01
    4246:	82 81       	ldd	r24, Z+2	; 0x02
    4248:	93 81       	ldd	r25, Z+3	; 0x03
    424a:	20 e0       	ldi	r18, 0x00	; 0
    424c:	30 e0       	ldi	r19, 0x00	; 0
    424e:	4a ef       	ldi	r20, 0xFA	; 250
    4250:	54 e4       	ldi	r21, 0x44	; 68
    4252:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4256:	dc 01       	movw	r26, r24
    4258:	cb 01       	movw	r24, r22
    425a:	f8 01       	movw	r30, r16
    425c:	80 83       	st	Z, r24
    425e:	91 83       	std	Z+1, r25	; 0x01
    4260:	a2 83       	std	Z+2, r26	; 0x02
    4262:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4264:	fe 01       	movw	r30, r28
    4266:	ed 56       	subi	r30, 0x6D	; 109
    4268:	ff 4f       	sbci	r31, 0xFF	; 255
    426a:	60 81       	ld	r22, Z
    426c:	71 81       	ldd	r23, Z+1	; 0x01
    426e:	82 81       	ldd	r24, Z+2	; 0x02
    4270:	93 81       	ldd	r25, Z+3	; 0x03
    4272:	20 e0       	ldi	r18, 0x00	; 0
    4274:	30 e0       	ldi	r19, 0x00	; 0
    4276:	40 e8       	ldi	r20, 0x80	; 128
    4278:	5f e3       	ldi	r21, 0x3F	; 63
    427a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    427e:	88 23       	and	r24, r24
    4280:	44 f4       	brge	.+16     	; 0x4292 <snake_effect+0x7be>
		__ticks = 1;
    4282:	fe 01       	movw	r30, r28
    4284:	ef 56       	subi	r30, 0x6F	; 111
    4286:	ff 4f       	sbci	r31, 0xFF	; 255
    4288:	81 e0       	ldi	r24, 0x01	; 1
    428a:	90 e0       	ldi	r25, 0x00	; 0
    428c:	91 83       	std	Z+1, r25	; 0x01
    428e:	80 83       	st	Z, r24
    4290:	64 c0       	rjmp	.+200    	; 0x435a <snake_effect+0x886>
	else if (__tmp > 65535)
    4292:	fe 01       	movw	r30, r28
    4294:	ed 56       	subi	r30, 0x6D	; 109
    4296:	ff 4f       	sbci	r31, 0xFF	; 255
    4298:	60 81       	ld	r22, Z
    429a:	71 81       	ldd	r23, Z+1	; 0x01
    429c:	82 81       	ldd	r24, Z+2	; 0x02
    429e:	93 81       	ldd	r25, Z+3	; 0x03
    42a0:	20 e0       	ldi	r18, 0x00	; 0
    42a2:	3f ef       	ldi	r19, 0xFF	; 255
    42a4:	4f e7       	ldi	r20, 0x7F	; 127
    42a6:	57 e4       	ldi	r21, 0x47	; 71
    42a8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    42ac:	18 16       	cp	r1, r24
    42ae:	0c f0       	brlt	.+2      	; 0x42b2 <snake_effect+0x7de>
    42b0:	43 c0       	rjmp	.+134    	; 0x4338 <snake_effect+0x864>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42b2:	fe 01       	movw	r30, r28
    42b4:	e9 56       	subi	r30, 0x69	; 105
    42b6:	ff 4f       	sbci	r31, 0xFF	; 255
    42b8:	60 81       	ld	r22, Z
    42ba:	71 81       	ldd	r23, Z+1	; 0x01
    42bc:	82 81       	ldd	r24, Z+2	; 0x02
    42be:	93 81       	ldd	r25, Z+3	; 0x03
    42c0:	20 e0       	ldi	r18, 0x00	; 0
    42c2:	30 e0       	ldi	r19, 0x00	; 0
    42c4:	40 e2       	ldi	r20, 0x20	; 32
    42c6:	51 e4       	ldi	r21, 0x41	; 65
    42c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42cc:	dc 01       	movw	r26, r24
    42ce:	cb 01       	movw	r24, r22
    42d0:	8e 01       	movw	r16, r28
    42d2:	0f 56       	subi	r16, 0x6F	; 111
    42d4:	1f 4f       	sbci	r17, 0xFF	; 255
    42d6:	bc 01       	movw	r22, r24
    42d8:	cd 01       	movw	r24, r26
    42da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42de:	dc 01       	movw	r26, r24
    42e0:	cb 01       	movw	r24, r22
    42e2:	f8 01       	movw	r30, r16
    42e4:	91 83       	std	Z+1, r25	; 0x01
    42e6:	80 83       	st	Z, r24
    42e8:	1f c0       	rjmp	.+62     	; 0x4328 <snake_effect+0x854>
    42ea:	fe 01       	movw	r30, r28
    42ec:	e1 57       	subi	r30, 0x71	; 113
    42ee:	ff 4f       	sbci	r31, 0xFF	; 255
    42f0:	88 ec       	ldi	r24, 0xC8	; 200
    42f2:	90 e0       	ldi	r25, 0x00	; 0
    42f4:	91 83       	std	Z+1, r25	; 0x01
    42f6:	80 83       	st	Z, r24
    42f8:	fe 01       	movw	r30, r28
    42fa:	e1 57       	subi	r30, 0x71	; 113
    42fc:	ff 4f       	sbci	r31, 0xFF	; 255
    42fe:	80 81       	ld	r24, Z
    4300:	91 81       	ldd	r25, Z+1	; 0x01
    4302:	01 97       	sbiw	r24, 0x01	; 1
    4304:	f1 f7       	brne	.-4      	; 0x4302 <snake_effect+0x82e>
    4306:	fe 01       	movw	r30, r28
    4308:	e1 57       	subi	r30, 0x71	; 113
    430a:	ff 4f       	sbci	r31, 0xFF	; 255
    430c:	91 83       	std	Z+1, r25	; 0x01
    430e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4310:	de 01       	movw	r26, r28
    4312:	af 56       	subi	r26, 0x6F	; 111
    4314:	bf 4f       	sbci	r27, 0xFF	; 255
    4316:	fe 01       	movw	r30, r28
    4318:	ef 56       	subi	r30, 0x6F	; 111
    431a:	ff 4f       	sbci	r31, 0xFF	; 255
    431c:	80 81       	ld	r24, Z
    431e:	91 81       	ldd	r25, Z+1	; 0x01
    4320:	01 97       	sbiw	r24, 0x01	; 1
    4322:	11 96       	adiw	r26, 0x01	; 1
    4324:	9c 93       	st	X, r25
    4326:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4328:	fe 01       	movw	r30, r28
    432a:	ef 56       	subi	r30, 0x6F	; 111
    432c:	ff 4f       	sbci	r31, 0xFF	; 255
    432e:	80 81       	ld	r24, Z
    4330:	91 81       	ldd	r25, Z+1	; 0x01
    4332:	00 97       	sbiw	r24, 0x00	; 0
    4334:	d1 f6       	brne	.-76     	; 0x42ea <snake_effect+0x816>
    4336:	27 c0       	rjmp	.+78     	; 0x4386 <snake_effect+0x8b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4338:	8e 01       	movw	r16, r28
    433a:	0f 56       	subi	r16, 0x6F	; 111
    433c:	1f 4f       	sbci	r17, 0xFF	; 255
    433e:	fe 01       	movw	r30, r28
    4340:	ed 56       	subi	r30, 0x6D	; 109
    4342:	ff 4f       	sbci	r31, 0xFF	; 255
    4344:	60 81       	ld	r22, Z
    4346:	71 81       	ldd	r23, Z+1	; 0x01
    4348:	82 81       	ldd	r24, Z+2	; 0x02
    434a:	93 81       	ldd	r25, Z+3	; 0x03
    434c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4350:	dc 01       	movw	r26, r24
    4352:	cb 01       	movw	r24, r22
    4354:	f8 01       	movw	r30, r16
    4356:	91 83       	std	Z+1, r25	; 0x01
    4358:	80 83       	st	Z, r24
    435a:	de 01       	movw	r26, r28
    435c:	a3 57       	subi	r26, 0x73	; 115
    435e:	bf 4f       	sbci	r27, 0xFF	; 255
    4360:	fe 01       	movw	r30, r28
    4362:	ef 56       	subi	r30, 0x6F	; 111
    4364:	ff 4f       	sbci	r31, 0xFF	; 255
    4366:	80 81       	ld	r24, Z
    4368:	91 81       	ldd	r25, Z+1	; 0x01
    436a:	8d 93       	st	X+, r24
    436c:	9c 93       	st	X, r25
    436e:	fe 01       	movw	r30, r28
    4370:	e3 57       	subi	r30, 0x73	; 115
    4372:	ff 4f       	sbci	r31, 0xFF	; 255
    4374:	80 81       	ld	r24, Z
    4376:	91 81       	ldd	r25, Z+1	; 0x01
    4378:	01 97       	sbiw	r24, 0x01	; 1
    437a:	f1 f7       	brne	.-4      	; 0x4378 <snake_effect+0x8a4>
    437c:	fe 01       	movw	r30, r28
    437e:	e3 57       	subi	r30, 0x73	; 115
    4380:	ff 4f       	sbci	r31, 0xFF	; 255
    4382:	91 83       	std	Z+1, r25	; 0x01
    4384:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b01111111;
    4386:	e8 e3       	ldi	r30, 0x38	; 56
    4388:	f0 e0       	ldi	r31, 0x00	; 0
    438a:	8f e7       	ldi	r24, 0x7F	; 127
    438c:	80 83       	st	Z, r24
    438e:	fe 01       	movw	r30, r28
    4390:	e7 57       	subi	r30, 0x77	; 119
    4392:	ff 4f       	sbci	r31, 0xFF	; 255
    4394:	80 e0       	ldi	r24, 0x00	; 0
    4396:	90 e0       	ldi	r25, 0x00	; 0
    4398:	a6 e9       	ldi	r26, 0x96	; 150
    439a:	b3 e4       	ldi	r27, 0x43	; 67
    439c:	80 83       	st	Z, r24
    439e:	91 83       	std	Z+1, r25	; 0x01
    43a0:	a2 83       	std	Z+2, r26	; 0x02
    43a2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43a4:	8e 01       	movw	r16, r28
    43a6:	0b 57       	subi	r16, 0x7B	; 123
    43a8:	1f 4f       	sbci	r17, 0xFF	; 255
    43aa:	fe 01       	movw	r30, r28
    43ac:	e7 57       	subi	r30, 0x77	; 119
    43ae:	ff 4f       	sbci	r31, 0xFF	; 255
    43b0:	60 81       	ld	r22, Z
    43b2:	71 81       	ldd	r23, Z+1	; 0x01
    43b4:	82 81       	ldd	r24, Z+2	; 0x02
    43b6:	93 81       	ldd	r25, Z+3	; 0x03
    43b8:	20 e0       	ldi	r18, 0x00	; 0
    43ba:	30 e0       	ldi	r19, 0x00	; 0
    43bc:	4a ef       	ldi	r20, 0xFA	; 250
    43be:	54 e4       	ldi	r21, 0x44	; 68
    43c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    43c4:	dc 01       	movw	r26, r24
    43c6:	cb 01       	movw	r24, r22
    43c8:	f8 01       	movw	r30, r16
    43ca:	80 83       	st	Z, r24
    43cc:	91 83       	std	Z+1, r25	; 0x01
    43ce:	a2 83       	std	Z+2, r26	; 0x02
    43d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    43d2:	fe 01       	movw	r30, r28
    43d4:	eb 57       	subi	r30, 0x7B	; 123
    43d6:	ff 4f       	sbci	r31, 0xFF	; 255
    43d8:	60 81       	ld	r22, Z
    43da:	71 81       	ldd	r23, Z+1	; 0x01
    43dc:	82 81       	ldd	r24, Z+2	; 0x02
    43de:	93 81       	ldd	r25, Z+3	; 0x03
    43e0:	20 e0       	ldi	r18, 0x00	; 0
    43e2:	30 e0       	ldi	r19, 0x00	; 0
    43e4:	40 e8       	ldi	r20, 0x80	; 128
    43e6:	5f e3       	ldi	r21, 0x3F	; 63
    43e8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    43ec:	88 23       	and	r24, r24
    43ee:	44 f4       	brge	.+16     	; 0x4400 <snake_effect+0x92c>
		__ticks = 1;
    43f0:	fe 01       	movw	r30, r28
    43f2:	ed 57       	subi	r30, 0x7D	; 125
    43f4:	ff 4f       	sbci	r31, 0xFF	; 255
    43f6:	81 e0       	ldi	r24, 0x01	; 1
    43f8:	90 e0       	ldi	r25, 0x00	; 0
    43fa:	91 83       	std	Z+1, r25	; 0x01
    43fc:	80 83       	st	Z, r24
    43fe:	64 c0       	rjmp	.+200    	; 0x44c8 <snake_effect+0x9f4>
	else if (__tmp > 65535)
    4400:	fe 01       	movw	r30, r28
    4402:	eb 57       	subi	r30, 0x7B	; 123
    4404:	ff 4f       	sbci	r31, 0xFF	; 255
    4406:	60 81       	ld	r22, Z
    4408:	71 81       	ldd	r23, Z+1	; 0x01
    440a:	82 81       	ldd	r24, Z+2	; 0x02
    440c:	93 81       	ldd	r25, Z+3	; 0x03
    440e:	20 e0       	ldi	r18, 0x00	; 0
    4410:	3f ef       	ldi	r19, 0xFF	; 255
    4412:	4f e7       	ldi	r20, 0x7F	; 127
    4414:	57 e4       	ldi	r21, 0x47	; 71
    4416:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    441a:	18 16       	cp	r1, r24
    441c:	0c f0       	brlt	.+2      	; 0x4420 <snake_effect+0x94c>
    441e:	43 c0       	rjmp	.+134    	; 0x44a6 <snake_effect+0x9d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4420:	fe 01       	movw	r30, r28
    4422:	e7 57       	subi	r30, 0x77	; 119
    4424:	ff 4f       	sbci	r31, 0xFF	; 255
    4426:	60 81       	ld	r22, Z
    4428:	71 81       	ldd	r23, Z+1	; 0x01
    442a:	82 81       	ldd	r24, Z+2	; 0x02
    442c:	93 81       	ldd	r25, Z+3	; 0x03
    442e:	20 e0       	ldi	r18, 0x00	; 0
    4430:	30 e0       	ldi	r19, 0x00	; 0
    4432:	40 e2       	ldi	r20, 0x20	; 32
    4434:	51 e4       	ldi	r21, 0x41	; 65
    4436:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    443a:	dc 01       	movw	r26, r24
    443c:	cb 01       	movw	r24, r22
    443e:	8e 01       	movw	r16, r28
    4440:	0d 57       	subi	r16, 0x7D	; 125
    4442:	1f 4f       	sbci	r17, 0xFF	; 255
    4444:	bc 01       	movw	r22, r24
    4446:	cd 01       	movw	r24, r26
    4448:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    444c:	dc 01       	movw	r26, r24
    444e:	cb 01       	movw	r24, r22
    4450:	f8 01       	movw	r30, r16
    4452:	91 83       	std	Z+1, r25	; 0x01
    4454:	80 83       	st	Z, r24
    4456:	1f c0       	rjmp	.+62     	; 0x4496 <snake_effect+0x9c2>
    4458:	fe 01       	movw	r30, r28
    445a:	ef 57       	subi	r30, 0x7F	; 127
    445c:	ff 4f       	sbci	r31, 0xFF	; 255
    445e:	88 ec       	ldi	r24, 0xC8	; 200
    4460:	90 e0       	ldi	r25, 0x00	; 0
    4462:	91 83       	std	Z+1, r25	; 0x01
    4464:	80 83       	st	Z, r24
    4466:	fe 01       	movw	r30, r28
    4468:	ef 57       	subi	r30, 0x7F	; 127
    446a:	ff 4f       	sbci	r31, 0xFF	; 255
    446c:	80 81       	ld	r24, Z
    446e:	91 81       	ldd	r25, Z+1	; 0x01
    4470:	01 97       	sbiw	r24, 0x01	; 1
    4472:	f1 f7       	brne	.-4      	; 0x4470 <snake_effect+0x99c>
    4474:	fe 01       	movw	r30, r28
    4476:	ef 57       	subi	r30, 0x7F	; 127
    4478:	ff 4f       	sbci	r31, 0xFF	; 255
    447a:	91 83       	std	Z+1, r25	; 0x01
    447c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    447e:	de 01       	movw	r26, r28
    4480:	ad 57       	subi	r26, 0x7D	; 125
    4482:	bf 4f       	sbci	r27, 0xFF	; 255
    4484:	fe 01       	movw	r30, r28
    4486:	ed 57       	subi	r30, 0x7D	; 125
    4488:	ff 4f       	sbci	r31, 0xFF	; 255
    448a:	80 81       	ld	r24, Z
    448c:	91 81       	ldd	r25, Z+1	; 0x01
    448e:	01 97       	sbiw	r24, 0x01	; 1
    4490:	11 96       	adiw	r26, 0x01	; 1
    4492:	9c 93       	st	X, r25
    4494:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4496:	fe 01       	movw	r30, r28
    4498:	ed 57       	subi	r30, 0x7D	; 125
    449a:	ff 4f       	sbci	r31, 0xFF	; 255
    449c:	80 81       	ld	r24, Z
    449e:	91 81       	ldd	r25, Z+1	; 0x01
    44a0:	00 97       	sbiw	r24, 0x00	; 0
    44a2:	d1 f6       	brne	.-76     	; 0x4458 <snake_effect+0x984>
    44a4:	27 c0       	rjmp	.+78     	; 0x44f4 <snake_effect+0xa20>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44a6:	8e 01       	movw	r16, r28
    44a8:	0d 57       	subi	r16, 0x7D	; 125
    44aa:	1f 4f       	sbci	r17, 0xFF	; 255
    44ac:	fe 01       	movw	r30, r28
    44ae:	eb 57       	subi	r30, 0x7B	; 123
    44b0:	ff 4f       	sbci	r31, 0xFF	; 255
    44b2:	60 81       	ld	r22, Z
    44b4:	71 81       	ldd	r23, Z+1	; 0x01
    44b6:	82 81       	ldd	r24, Z+2	; 0x02
    44b8:	93 81       	ldd	r25, Z+3	; 0x03
    44ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44be:	dc 01       	movw	r26, r24
    44c0:	cb 01       	movw	r24, r22
    44c2:	f8 01       	movw	r30, r16
    44c4:	91 83       	std	Z+1, r25	; 0x01
    44c6:	80 83       	st	Z, r24
    44c8:	de 01       	movw	r26, r28
    44ca:	a1 58       	subi	r26, 0x81	; 129
    44cc:	bf 4f       	sbci	r27, 0xFF	; 255
    44ce:	fe 01       	movw	r30, r28
    44d0:	ed 57       	subi	r30, 0x7D	; 125
    44d2:	ff 4f       	sbci	r31, 0xFF	; 255
    44d4:	80 81       	ld	r24, Z
    44d6:	91 81       	ldd	r25, Z+1	; 0x01
    44d8:	8d 93       	st	X+, r24
    44da:	9c 93       	st	X, r25
    44dc:	fe 01       	movw	r30, r28
    44de:	e1 58       	subi	r30, 0x81	; 129
    44e0:	ff 4f       	sbci	r31, 0xFF	; 255
    44e2:	80 81       	ld	r24, Z
    44e4:	91 81       	ldd	r25, Z+1	; 0x01
    44e6:	01 97       	sbiw	r24, 0x01	; 1
    44e8:	f1 f7       	brne	.-4      	; 0x44e6 <snake_effect+0xa12>
    44ea:	fe 01       	movw	r30, r28
    44ec:	e1 58       	subi	r30, 0x81	; 129
    44ee:	ff 4f       	sbci	r31, 0xFF	; 255
    44f0:	91 83       	std	Z+1, r25	; 0x01
    44f2:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b11111111;
    44f4:	e8 e3       	ldi	r30, 0x38	; 56
    44f6:	f0 e0       	ldi	r31, 0x00	; 0
    44f8:	8f ef       	ldi	r24, 0xFF	; 255
    44fa:	80 83       	st	Z, r24
    44fc:	fe 01       	movw	r30, r28
    44fe:	e5 58       	subi	r30, 0x85	; 133
    4500:	ff 4f       	sbci	r31, 0xFF	; 255
    4502:	80 e0       	ldi	r24, 0x00	; 0
    4504:	90 e0       	ldi	r25, 0x00	; 0
    4506:	a6 e9       	ldi	r26, 0x96	; 150
    4508:	b3 e4       	ldi	r27, 0x43	; 67
    450a:	80 83       	st	Z, r24
    450c:	91 83       	std	Z+1, r25	; 0x01
    450e:	a2 83       	std	Z+2, r26	; 0x02
    4510:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4512:	8e 01       	movw	r16, r28
    4514:	09 58       	subi	r16, 0x89	; 137
    4516:	1f 4f       	sbci	r17, 0xFF	; 255
    4518:	fe 01       	movw	r30, r28
    451a:	e5 58       	subi	r30, 0x85	; 133
    451c:	ff 4f       	sbci	r31, 0xFF	; 255
    451e:	60 81       	ld	r22, Z
    4520:	71 81       	ldd	r23, Z+1	; 0x01
    4522:	82 81       	ldd	r24, Z+2	; 0x02
    4524:	93 81       	ldd	r25, Z+3	; 0x03
    4526:	20 e0       	ldi	r18, 0x00	; 0
    4528:	30 e0       	ldi	r19, 0x00	; 0
    452a:	4a ef       	ldi	r20, 0xFA	; 250
    452c:	54 e4       	ldi	r21, 0x44	; 68
    452e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4532:	dc 01       	movw	r26, r24
    4534:	cb 01       	movw	r24, r22
    4536:	f8 01       	movw	r30, r16
    4538:	80 83       	st	Z, r24
    453a:	91 83       	std	Z+1, r25	; 0x01
    453c:	a2 83       	std	Z+2, r26	; 0x02
    453e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4540:	fe 01       	movw	r30, r28
    4542:	e9 58       	subi	r30, 0x89	; 137
    4544:	ff 4f       	sbci	r31, 0xFF	; 255
    4546:	60 81       	ld	r22, Z
    4548:	71 81       	ldd	r23, Z+1	; 0x01
    454a:	82 81       	ldd	r24, Z+2	; 0x02
    454c:	93 81       	ldd	r25, Z+3	; 0x03
    454e:	20 e0       	ldi	r18, 0x00	; 0
    4550:	30 e0       	ldi	r19, 0x00	; 0
    4552:	40 e8       	ldi	r20, 0x80	; 128
    4554:	5f e3       	ldi	r21, 0x3F	; 63
    4556:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    455a:	88 23       	and	r24, r24
    455c:	44 f4       	brge	.+16     	; 0x456e <snake_effect+0xa9a>
		__ticks = 1;
    455e:	fe 01       	movw	r30, r28
    4560:	eb 58       	subi	r30, 0x8B	; 139
    4562:	ff 4f       	sbci	r31, 0xFF	; 255
    4564:	81 e0       	ldi	r24, 0x01	; 1
    4566:	90 e0       	ldi	r25, 0x00	; 0
    4568:	91 83       	std	Z+1, r25	; 0x01
    456a:	80 83       	st	Z, r24
    456c:	64 c0       	rjmp	.+200    	; 0x4636 <snake_effect+0xb62>
	else if (__tmp > 65535)
    456e:	fe 01       	movw	r30, r28
    4570:	e9 58       	subi	r30, 0x89	; 137
    4572:	ff 4f       	sbci	r31, 0xFF	; 255
    4574:	60 81       	ld	r22, Z
    4576:	71 81       	ldd	r23, Z+1	; 0x01
    4578:	82 81       	ldd	r24, Z+2	; 0x02
    457a:	93 81       	ldd	r25, Z+3	; 0x03
    457c:	20 e0       	ldi	r18, 0x00	; 0
    457e:	3f ef       	ldi	r19, 0xFF	; 255
    4580:	4f e7       	ldi	r20, 0x7F	; 127
    4582:	57 e4       	ldi	r21, 0x47	; 71
    4584:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4588:	18 16       	cp	r1, r24
    458a:	0c f0       	brlt	.+2      	; 0x458e <snake_effect+0xaba>
    458c:	43 c0       	rjmp	.+134    	; 0x4614 <snake_effect+0xb40>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    458e:	fe 01       	movw	r30, r28
    4590:	e5 58       	subi	r30, 0x85	; 133
    4592:	ff 4f       	sbci	r31, 0xFF	; 255
    4594:	60 81       	ld	r22, Z
    4596:	71 81       	ldd	r23, Z+1	; 0x01
    4598:	82 81       	ldd	r24, Z+2	; 0x02
    459a:	93 81       	ldd	r25, Z+3	; 0x03
    459c:	20 e0       	ldi	r18, 0x00	; 0
    459e:	30 e0       	ldi	r19, 0x00	; 0
    45a0:	40 e2       	ldi	r20, 0x20	; 32
    45a2:	51 e4       	ldi	r21, 0x41	; 65
    45a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45a8:	dc 01       	movw	r26, r24
    45aa:	cb 01       	movw	r24, r22
    45ac:	8e 01       	movw	r16, r28
    45ae:	0b 58       	subi	r16, 0x8B	; 139
    45b0:	1f 4f       	sbci	r17, 0xFF	; 255
    45b2:	bc 01       	movw	r22, r24
    45b4:	cd 01       	movw	r24, r26
    45b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    45ba:	dc 01       	movw	r26, r24
    45bc:	cb 01       	movw	r24, r22
    45be:	f8 01       	movw	r30, r16
    45c0:	91 83       	std	Z+1, r25	; 0x01
    45c2:	80 83       	st	Z, r24
    45c4:	1f c0       	rjmp	.+62     	; 0x4604 <snake_effect+0xb30>
    45c6:	fe 01       	movw	r30, r28
    45c8:	ed 58       	subi	r30, 0x8D	; 141
    45ca:	ff 4f       	sbci	r31, 0xFF	; 255
    45cc:	88 ec       	ldi	r24, 0xC8	; 200
    45ce:	90 e0       	ldi	r25, 0x00	; 0
    45d0:	91 83       	std	Z+1, r25	; 0x01
    45d2:	80 83       	st	Z, r24
    45d4:	fe 01       	movw	r30, r28
    45d6:	ed 58       	subi	r30, 0x8D	; 141
    45d8:	ff 4f       	sbci	r31, 0xFF	; 255
    45da:	80 81       	ld	r24, Z
    45dc:	91 81       	ldd	r25, Z+1	; 0x01
    45de:	01 97       	sbiw	r24, 0x01	; 1
    45e0:	f1 f7       	brne	.-4      	; 0x45de <snake_effect+0xb0a>
    45e2:	fe 01       	movw	r30, r28
    45e4:	ed 58       	subi	r30, 0x8D	; 141
    45e6:	ff 4f       	sbci	r31, 0xFF	; 255
    45e8:	91 83       	std	Z+1, r25	; 0x01
    45ea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    45ec:	de 01       	movw	r26, r28
    45ee:	ab 58       	subi	r26, 0x8B	; 139
    45f0:	bf 4f       	sbci	r27, 0xFF	; 255
    45f2:	fe 01       	movw	r30, r28
    45f4:	eb 58       	subi	r30, 0x8B	; 139
    45f6:	ff 4f       	sbci	r31, 0xFF	; 255
    45f8:	80 81       	ld	r24, Z
    45fa:	91 81       	ldd	r25, Z+1	; 0x01
    45fc:	01 97       	sbiw	r24, 0x01	; 1
    45fe:	11 96       	adiw	r26, 0x01	; 1
    4600:	9c 93       	st	X, r25
    4602:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4604:	fe 01       	movw	r30, r28
    4606:	eb 58       	subi	r30, 0x8B	; 139
    4608:	ff 4f       	sbci	r31, 0xFF	; 255
    460a:	80 81       	ld	r24, Z
    460c:	91 81       	ldd	r25, Z+1	; 0x01
    460e:	00 97       	sbiw	r24, 0x00	; 0
    4610:	d1 f6       	brne	.-76     	; 0x45c6 <snake_effect+0xaf2>
    4612:	27 c0       	rjmp	.+78     	; 0x4662 <snake_effect+0xb8e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4614:	8e 01       	movw	r16, r28
    4616:	0b 58       	subi	r16, 0x8B	; 139
    4618:	1f 4f       	sbci	r17, 0xFF	; 255
    461a:	fe 01       	movw	r30, r28
    461c:	e9 58       	subi	r30, 0x89	; 137
    461e:	ff 4f       	sbci	r31, 0xFF	; 255
    4620:	60 81       	ld	r22, Z
    4622:	71 81       	ldd	r23, Z+1	; 0x01
    4624:	82 81       	ldd	r24, Z+2	; 0x02
    4626:	93 81       	ldd	r25, Z+3	; 0x03
    4628:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    462c:	dc 01       	movw	r26, r24
    462e:	cb 01       	movw	r24, r22
    4630:	f8 01       	movw	r30, r16
    4632:	91 83       	std	Z+1, r25	; 0x01
    4634:	80 83       	st	Z, r24
    4636:	de 01       	movw	r26, r28
    4638:	af 58       	subi	r26, 0x8F	; 143
    463a:	bf 4f       	sbci	r27, 0xFF	; 255
    463c:	fe 01       	movw	r30, r28
    463e:	eb 58       	subi	r30, 0x8B	; 139
    4640:	ff 4f       	sbci	r31, 0xFF	; 255
    4642:	80 81       	ld	r24, Z
    4644:	91 81       	ldd	r25, Z+1	; 0x01
    4646:	8d 93       	st	X+, r24
    4648:	9c 93       	st	X, r25
    464a:	fe 01       	movw	r30, r28
    464c:	ef 58       	subi	r30, 0x8F	; 143
    464e:	ff 4f       	sbci	r31, 0xFF	; 255
    4650:	80 81       	ld	r24, Z
    4652:	91 81       	ldd	r25, Z+1	; 0x01
    4654:	01 97       	sbiw	r24, 0x01	; 1
    4656:	f1 f7       	brne	.-4      	; 0x4654 <snake_effect+0xb80>
    4658:	fe 01       	movw	r30, r28
    465a:	ef 58       	subi	r30, 0x8F	; 143
    465c:	ff 4f       	sbci	r31, 0xFF	; 255
    465e:	91 83       	std	Z+1, r25	; 0x01
    4660:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b11111110;
    4662:	e8 e3       	ldi	r30, 0x38	; 56
    4664:	f0 e0       	ldi	r31, 0x00	; 0
    4666:	8e ef       	ldi	r24, 0xFE	; 254
    4668:	80 83       	st	Z, r24
    466a:	fe 01       	movw	r30, r28
    466c:	e3 59       	subi	r30, 0x93	; 147
    466e:	ff 4f       	sbci	r31, 0xFF	; 255
    4670:	80 e0       	ldi	r24, 0x00	; 0
    4672:	90 e0       	ldi	r25, 0x00	; 0
    4674:	a6 e9       	ldi	r26, 0x96	; 150
    4676:	b3 e4       	ldi	r27, 0x43	; 67
    4678:	80 83       	st	Z, r24
    467a:	91 83       	std	Z+1, r25	; 0x01
    467c:	a2 83       	std	Z+2, r26	; 0x02
    467e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4680:	8e 01       	movw	r16, r28
    4682:	07 59       	subi	r16, 0x97	; 151
    4684:	1f 4f       	sbci	r17, 0xFF	; 255
    4686:	fe 01       	movw	r30, r28
    4688:	e3 59       	subi	r30, 0x93	; 147
    468a:	ff 4f       	sbci	r31, 0xFF	; 255
    468c:	60 81       	ld	r22, Z
    468e:	71 81       	ldd	r23, Z+1	; 0x01
    4690:	82 81       	ldd	r24, Z+2	; 0x02
    4692:	93 81       	ldd	r25, Z+3	; 0x03
    4694:	20 e0       	ldi	r18, 0x00	; 0
    4696:	30 e0       	ldi	r19, 0x00	; 0
    4698:	4a ef       	ldi	r20, 0xFA	; 250
    469a:	54 e4       	ldi	r21, 0x44	; 68
    469c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    46a0:	dc 01       	movw	r26, r24
    46a2:	cb 01       	movw	r24, r22
    46a4:	f8 01       	movw	r30, r16
    46a6:	80 83       	st	Z, r24
    46a8:	91 83       	std	Z+1, r25	; 0x01
    46aa:	a2 83       	std	Z+2, r26	; 0x02
    46ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    46ae:	fe 01       	movw	r30, r28
    46b0:	e7 59       	subi	r30, 0x97	; 151
    46b2:	ff 4f       	sbci	r31, 0xFF	; 255
    46b4:	60 81       	ld	r22, Z
    46b6:	71 81       	ldd	r23, Z+1	; 0x01
    46b8:	82 81       	ldd	r24, Z+2	; 0x02
    46ba:	93 81       	ldd	r25, Z+3	; 0x03
    46bc:	20 e0       	ldi	r18, 0x00	; 0
    46be:	30 e0       	ldi	r19, 0x00	; 0
    46c0:	40 e8       	ldi	r20, 0x80	; 128
    46c2:	5f e3       	ldi	r21, 0x3F	; 63
    46c4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    46c8:	88 23       	and	r24, r24
    46ca:	44 f4       	brge	.+16     	; 0x46dc <snake_effect+0xc08>
		__ticks = 1;
    46cc:	fe 01       	movw	r30, r28
    46ce:	e9 59       	subi	r30, 0x99	; 153
    46d0:	ff 4f       	sbci	r31, 0xFF	; 255
    46d2:	81 e0       	ldi	r24, 0x01	; 1
    46d4:	90 e0       	ldi	r25, 0x00	; 0
    46d6:	91 83       	std	Z+1, r25	; 0x01
    46d8:	80 83       	st	Z, r24
    46da:	64 c0       	rjmp	.+200    	; 0x47a4 <snake_effect+0xcd0>
	else if (__tmp > 65535)
    46dc:	fe 01       	movw	r30, r28
    46de:	e7 59       	subi	r30, 0x97	; 151
    46e0:	ff 4f       	sbci	r31, 0xFF	; 255
    46e2:	60 81       	ld	r22, Z
    46e4:	71 81       	ldd	r23, Z+1	; 0x01
    46e6:	82 81       	ldd	r24, Z+2	; 0x02
    46e8:	93 81       	ldd	r25, Z+3	; 0x03
    46ea:	20 e0       	ldi	r18, 0x00	; 0
    46ec:	3f ef       	ldi	r19, 0xFF	; 255
    46ee:	4f e7       	ldi	r20, 0x7F	; 127
    46f0:	57 e4       	ldi	r21, 0x47	; 71
    46f2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    46f6:	18 16       	cp	r1, r24
    46f8:	0c f0       	brlt	.+2      	; 0x46fc <snake_effect+0xc28>
    46fa:	43 c0       	rjmp	.+134    	; 0x4782 <snake_effect+0xcae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46fc:	fe 01       	movw	r30, r28
    46fe:	e3 59       	subi	r30, 0x93	; 147
    4700:	ff 4f       	sbci	r31, 0xFF	; 255
    4702:	60 81       	ld	r22, Z
    4704:	71 81       	ldd	r23, Z+1	; 0x01
    4706:	82 81       	ldd	r24, Z+2	; 0x02
    4708:	93 81       	ldd	r25, Z+3	; 0x03
    470a:	20 e0       	ldi	r18, 0x00	; 0
    470c:	30 e0       	ldi	r19, 0x00	; 0
    470e:	40 e2       	ldi	r20, 0x20	; 32
    4710:	51 e4       	ldi	r21, 0x41	; 65
    4712:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4716:	dc 01       	movw	r26, r24
    4718:	cb 01       	movw	r24, r22
    471a:	8e 01       	movw	r16, r28
    471c:	09 59       	subi	r16, 0x99	; 153
    471e:	1f 4f       	sbci	r17, 0xFF	; 255
    4720:	bc 01       	movw	r22, r24
    4722:	cd 01       	movw	r24, r26
    4724:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4728:	dc 01       	movw	r26, r24
    472a:	cb 01       	movw	r24, r22
    472c:	f8 01       	movw	r30, r16
    472e:	91 83       	std	Z+1, r25	; 0x01
    4730:	80 83       	st	Z, r24
    4732:	1f c0       	rjmp	.+62     	; 0x4772 <snake_effect+0xc9e>
    4734:	fe 01       	movw	r30, r28
    4736:	eb 59       	subi	r30, 0x9B	; 155
    4738:	ff 4f       	sbci	r31, 0xFF	; 255
    473a:	88 ec       	ldi	r24, 0xC8	; 200
    473c:	90 e0       	ldi	r25, 0x00	; 0
    473e:	91 83       	std	Z+1, r25	; 0x01
    4740:	80 83       	st	Z, r24
    4742:	fe 01       	movw	r30, r28
    4744:	eb 59       	subi	r30, 0x9B	; 155
    4746:	ff 4f       	sbci	r31, 0xFF	; 255
    4748:	80 81       	ld	r24, Z
    474a:	91 81       	ldd	r25, Z+1	; 0x01
    474c:	01 97       	sbiw	r24, 0x01	; 1
    474e:	f1 f7       	brne	.-4      	; 0x474c <snake_effect+0xc78>
    4750:	fe 01       	movw	r30, r28
    4752:	eb 59       	subi	r30, 0x9B	; 155
    4754:	ff 4f       	sbci	r31, 0xFF	; 255
    4756:	91 83       	std	Z+1, r25	; 0x01
    4758:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    475a:	de 01       	movw	r26, r28
    475c:	a9 59       	subi	r26, 0x99	; 153
    475e:	bf 4f       	sbci	r27, 0xFF	; 255
    4760:	fe 01       	movw	r30, r28
    4762:	e9 59       	subi	r30, 0x99	; 153
    4764:	ff 4f       	sbci	r31, 0xFF	; 255
    4766:	80 81       	ld	r24, Z
    4768:	91 81       	ldd	r25, Z+1	; 0x01
    476a:	01 97       	sbiw	r24, 0x01	; 1
    476c:	11 96       	adiw	r26, 0x01	; 1
    476e:	9c 93       	st	X, r25
    4770:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4772:	fe 01       	movw	r30, r28
    4774:	e9 59       	subi	r30, 0x99	; 153
    4776:	ff 4f       	sbci	r31, 0xFF	; 255
    4778:	80 81       	ld	r24, Z
    477a:	91 81       	ldd	r25, Z+1	; 0x01
    477c:	00 97       	sbiw	r24, 0x00	; 0
    477e:	d1 f6       	brne	.-76     	; 0x4734 <snake_effect+0xc60>
    4780:	27 c0       	rjmp	.+78     	; 0x47d0 <snake_effect+0xcfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4782:	8e 01       	movw	r16, r28
    4784:	09 59       	subi	r16, 0x99	; 153
    4786:	1f 4f       	sbci	r17, 0xFF	; 255
    4788:	fe 01       	movw	r30, r28
    478a:	e7 59       	subi	r30, 0x97	; 151
    478c:	ff 4f       	sbci	r31, 0xFF	; 255
    478e:	60 81       	ld	r22, Z
    4790:	71 81       	ldd	r23, Z+1	; 0x01
    4792:	82 81       	ldd	r24, Z+2	; 0x02
    4794:	93 81       	ldd	r25, Z+3	; 0x03
    4796:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    479a:	dc 01       	movw	r26, r24
    479c:	cb 01       	movw	r24, r22
    479e:	f8 01       	movw	r30, r16
    47a0:	91 83       	std	Z+1, r25	; 0x01
    47a2:	80 83       	st	Z, r24
    47a4:	de 01       	movw	r26, r28
    47a6:	ad 59       	subi	r26, 0x9D	; 157
    47a8:	bf 4f       	sbci	r27, 0xFF	; 255
    47aa:	fe 01       	movw	r30, r28
    47ac:	e9 59       	subi	r30, 0x99	; 153
    47ae:	ff 4f       	sbci	r31, 0xFF	; 255
    47b0:	80 81       	ld	r24, Z
    47b2:	91 81       	ldd	r25, Z+1	; 0x01
    47b4:	8d 93       	st	X+, r24
    47b6:	9c 93       	st	X, r25
    47b8:	fe 01       	movw	r30, r28
    47ba:	ed 59       	subi	r30, 0x9D	; 157
    47bc:	ff 4f       	sbci	r31, 0xFF	; 255
    47be:	80 81       	ld	r24, Z
    47c0:	91 81       	ldd	r25, Z+1	; 0x01
    47c2:	01 97       	sbiw	r24, 0x01	; 1
    47c4:	f1 f7       	brne	.-4      	; 0x47c2 <snake_effect+0xcee>
    47c6:	fe 01       	movw	r30, r28
    47c8:	ed 59       	subi	r30, 0x9D	; 157
    47ca:	ff 4f       	sbci	r31, 0xFF	; 255
    47cc:	91 83       	std	Z+1, r25	; 0x01
    47ce:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b11111100;
    47d0:	e8 e3       	ldi	r30, 0x38	; 56
    47d2:	f0 e0       	ldi	r31, 0x00	; 0
    47d4:	8c ef       	ldi	r24, 0xFC	; 252
    47d6:	80 83       	st	Z, r24
    47d8:	fe 01       	movw	r30, r28
    47da:	e1 5a       	subi	r30, 0xA1	; 161
    47dc:	ff 4f       	sbci	r31, 0xFF	; 255
    47de:	80 e0       	ldi	r24, 0x00	; 0
    47e0:	90 e0       	ldi	r25, 0x00	; 0
    47e2:	a6 e9       	ldi	r26, 0x96	; 150
    47e4:	b3 e4       	ldi	r27, 0x43	; 67
    47e6:	80 83       	st	Z, r24
    47e8:	91 83       	std	Z+1, r25	; 0x01
    47ea:	a2 83       	std	Z+2, r26	; 0x02
    47ec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    47ee:	8e 01       	movw	r16, r28
    47f0:	05 5a       	subi	r16, 0xA5	; 165
    47f2:	1f 4f       	sbci	r17, 0xFF	; 255
    47f4:	fe 01       	movw	r30, r28
    47f6:	e1 5a       	subi	r30, 0xA1	; 161
    47f8:	ff 4f       	sbci	r31, 0xFF	; 255
    47fa:	60 81       	ld	r22, Z
    47fc:	71 81       	ldd	r23, Z+1	; 0x01
    47fe:	82 81       	ldd	r24, Z+2	; 0x02
    4800:	93 81       	ldd	r25, Z+3	; 0x03
    4802:	20 e0       	ldi	r18, 0x00	; 0
    4804:	30 e0       	ldi	r19, 0x00	; 0
    4806:	4a ef       	ldi	r20, 0xFA	; 250
    4808:	54 e4       	ldi	r21, 0x44	; 68
    480a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    480e:	dc 01       	movw	r26, r24
    4810:	cb 01       	movw	r24, r22
    4812:	f8 01       	movw	r30, r16
    4814:	80 83       	st	Z, r24
    4816:	91 83       	std	Z+1, r25	; 0x01
    4818:	a2 83       	std	Z+2, r26	; 0x02
    481a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    481c:	fe 01       	movw	r30, r28
    481e:	e5 5a       	subi	r30, 0xA5	; 165
    4820:	ff 4f       	sbci	r31, 0xFF	; 255
    4822:	60 81       	ld	r22, Z
    4824:	71 81       	ldd	r23, Z+1	; 0x01
    4826:	82 81       	ldd	r24, Z+2	; 0x02
    4828:	93 81       	ldd	r25, Z+3	; 0x03
    482a:	20 e0       	ldi	r18, 0x00	; 0
    482c:	30 e0       	ldi	r19, 0x00	; 0
    482e:	40 e8       	ldi	r20, 0x80	; 128
    4830:	5f e3       	ldi	r21, 0x3F	; 63
    4832:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4836:	88 23       	and	r24, r24
    4838:	44 f4       	brge	.+16     	; 0x484a <snake_effect+0xd76>
		__ticks = 1;
    483a:	fe 01       	movw	r30, r28
    483c:	e7 5a       	subi	r30, 0xA7	; 167
    483e:	ff 4f       	sbci	r31, 0xFF	; 255
    4840:	81 e0       	ldi	r24, 0x01	; 1
    4842:	90 e0       	ldi	r25, 0x00	; 0
    4844:	91 83       	std	Z+1, r25	; 0x01
    4846:	80 83       	st	Z, r24
    4848:	64 c0       	rjmp	.+200    	; 0x4912 <snake_effect+0xe3e>
	else if (__tmp > 65535)
    484a:	fe 01       	movw	r30, r28
    484c:	e5 5a       	subi	r30, 0xA5	; 165
    484e:	ff 4f       	sbci	r31, 0xFF	; 255
    4850:	60 81       	ld	r22, Z
    4852:	71 81       	ldd	r23, Z+1	; 0x01
    4854:	82 81       	ldd	r24, Z+2	; 0x02
    4856:	93 81       	ldd	r25, Z+3	; 0x03
    4858:	20 e0       	ldi	r18, 0x00	; 0
    485a:	3f ef       	ldi	r19, 0xFF	; 255
    485c:	4f e7       	ldi	r20, 0x7F	; 127
    485e:	57 e4       	ldi	r21, 0x47	; 71
    4860:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4864:	18 16       	cp	r1, r24
    4866:	0c f0       	brlt	.+2      	; 0x486a <snake_effect+0xd96>
    4868:	43 c0       	rjmp	.+134    	; 0x48f0 <snake_effect+0xe1c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    486a:	fe 01       	movw	r30, r28
    486c:	e1 5a       	subi	r30, 0xA1	; 161
    486e:	ff 4f       	sbci	r31, 0xFF	; 255
    4870:	60 81       	ld	r22, Z
    4872:	71 81       	ldd	r23, Z+1	; 0x01
    4874:	82 81       	ldd	r24, Z+2	; 0x02
    4876:	93 81       	ldd	r25, Z+3	; 0x03
    4878:	20 e0       	ldi	r18, 0x00	; 0
    487a:	30 e0       	ldi	r19, 0x00	; 0
    487c:	40 e2       	ldi	r20, 0x20	; 32
    487e:	51 e4       	ldi	r21, 0x41	; 65
    4880:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4884:	dc 01       	movw	r26, r24
    4886:	cb 01       	movw	r24, r22
    4888:	8e 01       	movw	r16, r28
    488a:	07 5a       	subi	r16, 0xA7	; 167
    488c:	1f 4f       	sbci	r17, 0xFF	; 255
    488e:	bc 01       	movw	r22, r24
    4890:	cd 01       	movw	r24, r26
    4892:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4896:	dc 01       	movw	r26, r24
    4898:	cb 01       	movw	r24, r22
    489a:	f8 01       	movw	r30, r16
    489c:	91 83       	std	Z+1, r25	; 0x01
    489e:	80 83       	st	Z, r24
    48a0:	1f c0       	rjmp	.+62     	; 0x48e0 <snake_effect+0xe0c>
    48a2:	fe 01       	movw	r30, r28
    48a4:	e9 5a       	subi	r30, 0xA9	; 169
    48a6:	ff 4f       	sbci	r31, 0xFF	; 255
    48a8:	88 ec       	ldi	r24, 0xC8	; 200
    48aa:	90 e0       	ldi	r25, 0x00	; 0
    48ac:	91 83       	std	Z+1, r25	; 0x01
    48ae:	80 83       	st	Z, r24
    48b0:	fe 01       	movw	r30, r28
    48b2:	e9 5a       	subi	r30, 0xA9	; 169
    48b4:	ff 4f       	sbci	r31, 0xFF	; 255
    48b6:	80 81       	ld	r24, Z
    48b8:	91 81       	ldd	r25, Z+1	; 0x01
    48ba:	01 97       	sbiw	r24, 0x01	; 1
    48bc:	f1 f7       	brne	.-4      	; 0x48ba <snake_effect+0xde6>
    48be:	fe 01       	movw	r30, r28
    48c0:	e9 5a       	subi	r30, 0xA9	; 169
    48c2:	ff 4f       	sbci	r31, 0xFF	; 255
    48c4:	91 83       	std	Z+1, r25	; 0x01
    48c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48c8:	de 01       	movw	r26, r28
    48ca:	a7 5a       	subi	r26, 0xA7	; 167
    48cc:	bf 4f       	sbci	r27, 0xFF	; 255
    48ce:	fe 01       	movw	r30, r28
    48d0:	e7 5a       	subi	r30, 0xA7	; 167
    48d2:	ff 4f       	sbci	r31, 0xFF	; 255
    48d4:	80 81       	ld	r24, Z
    48d6:	91 81       	ldd	r25, Z+1	; 0x01
    48d8:	01 97       	sbiw	r24, 0x01	; 1
    48da:	11 96       	adiw	r26, 0x01	; 1
    48dc:	9c 93       	st	X, r25
    48de:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48e0:	fe 01       	movw	r30, r28
    48e2:	e7 5a       	subi	r30, 0xA7	; 167
    48e4:	ff 4f       	sbci	r31, 0xFF	; 255
    48e6:	80 81       	ld	r24, Z
    48e8:	91 81       	ldd	r25, Z+1	; 0x01
    48ea:	00 97       	sbiw	r24, 0x00	; 0
    48ec:	d1 f6       	brne	.-76     	; 0x48a2 <snake_effect+0xdce>
    48ee:	27 c0       	rjmp	.+78     	; 0x493e <snake_effect+0xe6a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48f0:	8e 01       	movw	r16, r28
    48f2:	07 5a       	subi	r16, 0xA7	; 167
    48f4:	1f 4f       	sbci	r17, 0xFF	; 255
    48f6:	fe 01       	movw	r30, r28
    48f8:	e5 5a       	subi	r30, 0xA5	; 165
    48fa:	ff 4f       	sbci	r31, 0xFF	; 255
    48fc:	60 81       	ld	r22, Z
    48fe:	71 81       	ldd	r23, Z+1	; 0x01
    4900:	82 81       	ldd	r24, Z+2	; 0x02
    4902:	93 81       	ldd	r25, Z+3	; 0x03
    4904:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4908:	dc 01       	movw	r26, r24
    490a:	cb 01       	movw	r24, r22
    490c:	f8 01       	movw	r30, r16
    490e:	91 83       	std	Z+1, r25	; 0x01
    4910:	80 83       	st	Z, r24
    4912:	de 01       	movw	r26, r28
    4914:	ab 5a       	subi	r26, 0xAB	; 171
    4916:	bf 4f       	sbci	r27, 0xFF	; 255
    4918:	fe 01       	movw	r30, r28
    491a:	e7 5a       	subi	r30, 0xA7	; 167
    491c:	ff 4f       	sbci	r31, 0xFF	; 255
    491e:	80 81       	ld	r24, Z
    4920:	91 81       	ldd	r25, Z+1	; 0x01
    4922:	8d 93       	st	X+, r24
    4924:	9c 93       	st	X, r25
    4926:	fe 01       	movw	r30, r28
    4928:	eb 5a       	subi	r30, 0xAB	; 171
    492a:	ff 4f       	sbci	r31, 0xFF	; 255
    492c:	80 81       	ld	r24, Z
    492e:	91 81       	ldd	r25, Z+1	; 0x01
    4930:	01 97       	sbiw	r24, 0x01	; 1
    4932:	f1 f7       	brne	.-4      	; 0x4930 <snake_effect+0xe5c>
    4934:	fe 01       	movw	r30, r28
    4936:	eb 5a       	subi	r30, 0xAB	; 171
    4938:	ff 4f       	sbci	r31, 0xFF	; 255
    493a:	91 83       	std	Z+1, r25	; 0x01
    493c:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b11111000;
    493e:	e8 e3       	ldi	r30, 0x38	; 56
    4940:	f0 e0       	ldi	r31, 0x00	; 0
    4942:	88 ef       	ldi	r24, 0xF8	; 248
    4944:	80 83       	st	Z, r24
    4946:	fe 01       	movw	r30, r28
    4948:	ef 5a       	subi	r30, 0xAF	; 175
    494a:	ff 4f       	sbci	r31, 0xFF	; 255
    494c:	80 e0       	ldi	r24, 0x00	; 0
    494e:	90 e0       	ldi	r25, 0x00	; 0
    4950:	a6 e9       	ldi	r26, 0x96	; 150
    4952:	b3 e4       	ldi	r27, 0x43	; 67
    4954:	80 83       	st	Z, r24
    4956:	91 83       	std	Z+1, r25	; 0x01
    4958:	a2 83       	std	Z+2, r26	; 0x02
    495a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    495c:	8e 01       	movw	r16, r28
    495e:	03 5b       	subi	r16, 0xB3	; 179
    4960:	1f 4f       	sbci	r17, 0xFF	; 255
    4962:	fe 01       	movw	r30, r28
    4964:	ef 5a       	subi	r30, 0xAF	; 175
    4966:	ff 4f       	sbci	r31, 0xFF	; 255
    4968:	60 81       	ld	r22, Z
    496a:	71 81       	ldd	r23, Z+1	; 0x01
    496c:	82 81       	ldd	r24, Z+2	; 0x02
    496e:	93 81       	ldd	r25, Z+3	; 0x03
    4970:	20 e0       	ldi	r18, 0x00	; 0
    4972:	30 e0       	ldi	r19, 0x00	; 0
    4974:	4a ef       	ldi	r20, 0xFA	; 250
    4976:	54 e4       	ldi	r21, 0x44	; 68
    4978:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    497c:	dc 01       	movw	r26, r24
    497e:	cb 01       	movw	r24, r22
    4980:	f8 01       	movw	r30, r16
    4982:	80 83       	st	Z, r24
    4984:	91 83       	std	Z+1, r25	; 0x01
    4986:	a2 83       	std	Z+2, r26	; 0x02
    4988:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    498a:	fe 01       	movw	r30, r28
    498c:	e3 5b       	subi	r30, 0xB3	; 179
    498e:	ff 4f       	sbci	r31, 0xFF	; 255
    4990:	60 81       	ld	r22, Z
    4992:	71 81       	ldd	r23, Z+1	; 0x01
    4994:	82 81       	ldd	r24, Z+2	; 0x02
    4996:	93 81       	ldd	r25, Z+3	; 0x03
    4998:	20 e0       	ldi	r18, 0x00	; 0
    499a:	30 e0       	ldi	r19, 0x00	; 0
    499c:	40 e8       	ldi	r20, 0x80	; 128
    499e:	5f e3       	ldi	r21, 0x3F	; 63
    49a0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    49a4:	88 23       	and	r24, r24
    49a6:	44 f4       	brge	.+16     	; 0x49b8 <snake_effect+0xee4>
		__ticks = 1;
    49a8:	fe 01       	movw	r30, r28
    49aa:	e5 5b       	subi	r30, 0xB5	; 181
    49ac:	ff 4f       	sbci	r31, 0xFF	; 255
    49ae:	81 e0       	ldi	r24, 0x01	; 1
    49b0:	90 e0       	ldi	r25, 0x00	; 0
    49b2:	91 83       	std	Z+1, r25	; 0x01
    49b4:	80 83       	st	Z, r24
    49b6:	64 c0       	rjmp	.+200    	; 0x4a80 <snake_effect+0xfac>
	else if (__tmp > 65535)
    49b8:	fe 01       	movw	r30, r28
    49ba:	e3 5b       	subi	r30, 0xB3	; 179
    49bc:	ff 4f       	sbci	r31, 0xFF	; 255
    49be:	60 81       	ld	r22, Z
    49c0:	71 81       	ldd	r23, Z+1	; 0x01
    49c2:	82 81       	ldd	r24, Z+2	; 0x02
    49c4:	93 81       	ldd	r25, Z+3	; 0x03
    49c6:	20 e0       	ldi	r18, 0x00	; 0
    49c8:	3f ef       	ldi	r19, 0xFF	; 255
    49ca:	4f e7       	ldi	r20, 0x7F	; 127
    49cc:	57 e4       	ldi	r21, 0x47	; 71
    49ce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    49d2:	18 16       	cp	r1, r24
    49d4:	0c f0       	brlt	.+2      	; 0x49d8 <snake_effect+0xf04>
    49d6:	43 c0       	rjmp	.+134    	; 0x4a5e <snake_effect+0xf8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    49d8:	fe 01       	movw	r30, r28
    49da:	ef 5a       	subi	r30, 0xAF	; 175
    49dc:	ff 4f       	sbci	r31, 0xFF	; 255
    49de:	60 81       	ld	r22, Z
    49e0:	71 81       	ldd	r23, Z+1	; 0x01
    49e2:	82 81       	ldd	r24, Z+2	; 0x02
    49e4:	93 81       	ldd	r25, Z+3	; 0x03
    49e6:	20 e0       	ldi	r18, 0x00	; 0
    49e8:	30 e0       	ldi	r19, 0x00	; 0
    49ea:	40 e2       	ldi	r20, 0x20	; 32
    49ec:	51 e4       	ldi	r21, 0x41	; 65
    49ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    49f2:	dc 01       	movw	r26, r24
    49f4:	cb 01       	movw	r24, r22
    49f6:	8e 01       	movw	r16, r28
    49f8:	05 5b       	subi	r16, 0xB5	; 181
    49fa:	1f 4f       	sbci	r17, 0xFF	; 255
    49fc:	bc 01       	movw	r22, r24
    49fe:	cd 01       	movw	r24, r26
    4a00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a04:	dc 01       	movw	r26, r24
    4a06:	cb 01       	movw	r24, r22
    4a08:	f8 01       	movw	r30, r16
    4a0a:	91 83       	std	Z+1, r25	; 0x01
    4a0c:	80 83       	st	Z, r24
    4a0e:	1f c0       	rjmp	.+62     	; 0x4a4e <snake_effect+0xf7a>
    4a10:	fe 01       	movw	r30, r28
    4a12:	e7 5b       	subi	r30, 0xB7	; 183
    4a14:	ff 4f       	sbci	r31, 0xFF	; 255
    4a16:	88 ec       	ldi	r24, 0xC8	; 200
    4a18:	90 e0       	ldi	r25, 0x00	; 0
    4a1a:	91 83       	std	Z+1, r25	; 0x01
    4a1c:	80 83       	st	Z, r24
    4a1e:	fe 01       	movw	r30, r28
    4a20:	e7 5b       	subi	r30, 0xB7	; 183
    4a22:	ff 4f       	sbci	r31, 0xFF	; 255
    4a24:	80 81       	ld	r24, Z
    4a26:	91 81       	ldd	r25, Z+1	; 0x01
    4a28:	01 97       	sbiw	r24, 0x01	; 1
    4a2a:	f1 f7       	brne	.-4      	; 0x4a28 <snake_effect+0xf54>
    4a2c:	fe 01       	movw	r30, r28
    4a2e:	e7 5b       	subi	r30, 0xB7	; 183
    4a30:	ff 4f       	sbci	r31, 0xFF	; 255
    4a32:	91 83       	std	Z+1, r25	; 0x01
    4a34:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a36:	de 01       	movw	r26, r28
    4a38:	a5 5b       	subi	r26, 0xB5	; 181
    4a3a:	bf 4f       	sbci	r27, 0xFF	; 255
    4a3c:	fe 01       	movw	r30, r28
    4a3e:	e5 5b       	subi	r30, 0xB5	; 181
    4a40:	ff 4f       	sbci	r31, 0xFF	; 255
    4a42:	80 81       	ld	r24, Z
    4a44:	91 81       	ldd	r25, Z+1	; 0x01
    4a46:	01 97       	sbiw	r24, 0x01	; 1
    4a48:	11 96       	adiw	r26, 0x01	; 1
    4a4a:	9c 93       	st	X, r25
    4a4c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a4e:	fe 01       	movw	r30, r28
    4a50:	e5 5b       	subi	r30, 0xB5	; 181
    4a52:	ff 4f       	sbci	r31, 0xFF	; 255
    4a54:	80 81       	ld	r24, Z
    4a56:	91 81       	ldd	r25, Z+1	; 0x01
    4a58:	00 97       	sbiw	r24, 0x00	; 0
    4a5a:	d1 f6       	brne	.-76     	; 0x4a10 <snake_effect+0xf3c>
    4a5c:	27 c0       	rjmp	.+78     	; 0x4aac <snake_effect+0xfd8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a5e:	8e 01       	movw	r16, r28
    4a60:	05 5b       	subi	r16, 0xB5	; 181
    4a62:	1f 4f       	sbci	r17, 0xFF	; 255
    4a64:	fe 01       	movw	r30, r28
    4a66:	e3 5b       	subi	r30, 0xB3	; 179
    4a68:	ff 4f       	sbci	r31, 0xFF	; 255
    4a6a:	60 81       	ld	r22, Z
    4a6c:	71 81       	ldd	r23, Z+1	; 0x01
    4a6e:	82 81       	ldd	r24, Z+2	; 0x02
    4a70:	93 81       	ldd	r25, Z+3	; 0x03
    4a72:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a76:	dc 01       	movw	r26, r24
    4a78:	cb 01       	movw	r24, r22
    4a7a:	f8 01       	movw	r30, r16
    4a7c:	91 83       	std	Z+1, r25	; 0x01
    4a7e:	80 83       	st	Z, r24
    4a80:	de 01       	movw	r26, r28
    4a82:	a9 5b       	subi	r26, 0xB9	; 185
    4a84:	bf 4f       	sbci	r27, 0xFF	; 255
    4a86:	fe 01       	movw	r30, r28
    4a88:	e5 5b       	subi	r30, 0xB5	; 181
    4a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    4a8c:	80 81       	ld	r24, Z
    4a8e:	91 81       	ldd	r25, Z+1	; 0x01
    4a90:	8d 93       	st	X+, r24
    4a92:	9c 93       	st	X, r25
    4a94:	fe 01       	movw	r30, r28
    4a96:	e9 5b       	subi	r30, 0xB9	; 185
    4a98:	ff 4f       	sbci	r31, 0xFF	; 255
    4a9a:	80 81       	ld	r24, Z
    4a9c:	91 81       	ldd	r25, Z+1	; 0x01
    4a9e:	01 97       	sbiw	r24, 0x01	; 1
    4aa0:	f1 f7       	brne	.-4      	; 0x4a9e <snake_effect+0xfca>
    4aa2:	fe 01       	movw	r30, r28
    4aa4:	e9 5b       	subi	r30, 0xB9	; 185
    4aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    4aa8:	91 83       	std	Z+1, r25	; 0x01
    4aaa:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b11110000;
    4aac:	e8 e3       	ldi	r30, 0x38	; 56
    4aae:	f0 e0       	ldi	r31, 0x00	; 0
    4ab0:	80 ef       	ldi	r24, 0xF0	; 240
    4ab2:	80 83       	st	Z, r24
    4ab4:	fe 01       	movw	r30, r28
    4ab6:	ed 5b       	subi	r30, 0xBD	; 189
    4ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    4aba:	80 e0       	ldi	r24, 0x00	; 0
    4abc:	90 e0       	ldi	r25, 0x00	; 0
    4abe:	a6 e9       	ldi	r26, 0x96	; 150
    4ac0:	b3 e4       	ldi	r27, 0x43	; 67
    4ac2:	80 83       	st	Z, r24
    4ac4:	91 83       	std	Z+1, r25	; 0x01
    4ac6:	a2 83       	std	Z+2, r26	; 0x02
    4ac8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4aca:	8e 01       	movw	r16, r28
    4acc:	01 5c       	subi	r16, 0xC1	; 193
    4ace:	1f 4f       	sbci	r17, 0xFF	; 255
    4ad0:	fe 01       	movw	r30, r28
    4ad2:	ed 5b       	subi	r30, 0xBD	; 189
    4ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    4ad6:	60 81       	ld	r22, Z
    4ad8:	71 81       	ldd	r23, Z+1	; 0x01
    4ada:	82 81       	ldd	r24, Z+2	; 0x02
    4adc:	93 81       	ldd	r25, Z+3	; 0x03
    4ade:	20 e0       	ldi	r18, 0x00	; 0
    4ae0:	30 e0       	ldi	r19, 0x00	; 0
    4ae2:	4a ef       	ldi	r20, 0xFA	; 250
    4ae4:	54 e4       	ldi	r21, 0x44	; 68
    4ae6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4aea:	dc 01       	movw	r26, r24
    4aec:	cb 01       	movw	r24, r22
    4aee:	f8 01       	movw	r30, r16
    4af0:	80 83       	st	Z, r24
    4af2:	91 83       	std	Z+1, r25	; 0x01
    4af4:	a2 83       	std	Z+2, r26	; 0x02
    4af6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4af8:	fe 01       	movw	r30, r28
    4afa:	ff 96       	adiw	r30, 0x3f	; 63
    4afc:	60 81       	ld	r22, Z
    4afe:	71 81       	ldd	r23, Z+1	; 0x01
    4b00:	82 81       	ldd	r24, Z+2	; 0x02
    4b02:	93 81       	ldd	r25, Z+3	; 0x03
    4b04:	20 e0       	ldi	r18, 0x00	; 0
    4b06:	30 e0       	ldi	r19, 0x00	; 0
    4b08:	40 e8       	ldi	r20, 0x80	; 128
    4b0a:	5f e3       	ldi	r21, 0x3F	; 63
    4b0c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4b10:	88 23       	and	r24, r24
    4b12:	2c f4       	brge	.+10     	; 0x4b1e <snake_effect+0x104a>
		__ticks = 1;
    4b14:	81 e0       	ldi	r24, 0x01	; 1
    4b16:	90 e0       	ldi	r25, 0x00	; 0
    4b18:	9e af       	std	Y+62, r25	; 0x3e
    4b1a:	8d af       	std	Y+61, r24	; 0x3d
    4b1c:	46 c0       	rjmp	.+140    	; 0x4baa <snake_effect+0x10d6>
	else if (__tmp > 65535)
    4b1e:	fe 01       	movw	r30, r28
    4b20:	ff 96       	adiw	r30, 0x3f	; 63
    4b22:	60 81       	ld	r22, Z
    4b24:	71 81       	ldd	r23, Z+1	; 0x01
    4b26:	82 81       	ldd	r24, Z+2	; 0x02
    4b28:	93 81       	ldd	r25, Z+3	; 0x03
    4b2a:	20 e0       	ldi	r18, 0x00	; 0
    4b2c:	3f ef       	ldi	r19, 0xFF	; 255
    4b2e:	4f e7       	ldi	r20, 0x7F	; 127
    4b30:	57 e4       	ldi	r21, 0x47	; 71
    4b32:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4b36:	18 16       	cp	r1, r24
    4b38:	64 f5       	brge	.+88     	; 0x4b92 <snake_effect+0x10be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b3a:	fe 01       	movw	r30, r28
    4b3c:	ed 5b       	subi	r30, 0xBD	; 189
    4b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b40:	60 81       	ld	r22, Z
    4b42:	71 81       	ldd	r23, Z+1	; 0x01
    4b44:	82 81       	ldd	r24, Z+2	; 0x02
    4b46:	93 81       	ldd	r25, Z+3	; 0x03
    4b48:	20 e0       	ldi	r18, 0x00	; 0
    4b4a:	30 e0       	ldi	r19, 0x00	; 0
    4b4c:	40 e2       	ldi	r20, 0x20	; 32
    4b4e:	51 e4       	ldi	r21, 0x41	; 65
    4b50:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4b54:	dc 01       	movw	r26, r24
    4b56:	cb 01       	movw	r24, r22
    4b58:	bc 01       	movw	r22, r24
    4b5a:	cd 01       	movw	r24, r26
    4b5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4b60:	dc 01       	movw	r26, r24
    4b62:	cb 01       	movw	r24, r22
    4b64:	9e af       	std	Y+62, r25	; 0x3e
    4b66:	8d af       	std	Y+61, r24	; 0x3d
    4b68:	0f c0       	rjmp	.+30     	; 0x4b88 <snake_effect+0x10b4>
    4b6a:	88 ec       	ldi	r24, 0xC8	; 200
    4b6c:	90 e0       	ldi	r25, 0x00	; 0
    4b6e:	9c af       	std	Y+60, r25	; 0x3c
    4b70:	8b af       	std	Y+59, r24	; 0x3b
    4b72:	8b ad       	ldd	r24, Y+59	; 0x3b
    4b74:	9c ad       	ldd	r25, Y+60	; 0x3c
    4b76:	01 97       	sbiw	r24, 0x01	; 1
    4b78:	f1 f7       	brne	.-4      	; 0x4b76 <snake_effect+0x10a2>
    4b7a:	9c af       	std	Y+60, r25	; 0x3c
    4b7c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b7e:	8d ad       	ldd	r24, Y+61	; 0x3d
    4b80:	9e ad       	ldd	r25, Y+62	; 0x3e
    4b82:	01 97       	sbiw	r24, 0x01	; 1
    4b84:	9e af       	std	Y+62, r25	; 0x3e
    4b86:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b88:	8d ad       	ldd	r24, Y+61	; 0x3d
    4b8a:	9e ad       	ldd	r25, Y+62	; 0x3e
    4b8c:	00 97       	sbiw	r24, 0x00	; 0
    4b8e:	69 f7       	brne	.-38     	; 0x4b6a <snake_effect+0x1096>
    4b90:	16 c0       	rjmp	.+44     	; 0x4bbe <snake_effect+0x10ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b92:	fe 01       	movw	r30, r28
    4b94:	ff 96       	adiw	r30, 0x3f	; 63
    4b96:	60 81       	ld	r22, Z
    4b98:	71 81       	ldd	r23, Z+1	; 0x01
    4b9a:	82 81       	ldd	r24, Z+2	; 0x02
    4b9c:	93 81       	ldd	r25, Z+3	; 0x03
    4b9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4ba2:	dc 01       	movw	r26, r24
    4ba4:	cb 01       	movw	r24, r22
    4ba6:	9e af       	std	Y+62, r25	; 0x3e
    4ba8:	8d af       	std	Y+61, r24	; 0x3d
    4baa:	8d ad       	ldd	r24, Y+61	; 0x3d
    4bac:	9e ad       	ldd	r25, Y+62	; 0x3e
    4bae:	9a af       	std	Y+58, r25	; 0x3a
    4bb0:	89 af       	std	Y+57, r24	; 0x39
    4bb2:	89 ad       	ldd	r24, Y+57	; 0x39
    4bb4:	9a ad       	ldd	r25, Y+58	; 0x3a
    4bb6:	01 97       	sbiw	r24, 0x01	; 1
    4bb8:	f1 f7       	brne	.-4      	; 0x4bb6 <snake_effect+0x10e2>
    4bba:	9a af       	std	Y+58, r25	; 0x3a
    4bbc:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(300);
		PORTB = 0b11100000;
    4bbe:	e8 e3       	ldi	r30, 0x38	; 56
    4bc0:	f0 e0       	ldi	r31, 0x00	; 0
    4bc2:	80 ee       	ldi	r24, 0xE0	; 224
    4bc4:	80 83       	st	Z, r24
    4bc6:	80 e0       	ldi	r24, 0x00	; 0
    4bc8:	90 e0       	ldi	r25, 0x00	; 0
    4bca:	a6 e9       	ldi	r26, 0x96	; 150
    4bcc:	b3 e4       	ldi	r27, 0x43	; 67
    4bce:	8d ab       	std	Y+53, r24	; 0x35
    4bd0:	9e ab       	std	Y+54, r25	; 0x36
    4bd2:	af ab       	std	Y+55, r26	; 0x37
    4bd4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4bd6:	6d a9       	ldd	r22, Y+53	; 0x35
    4bd8:	7e a9       	ldd	r23, Y+54	; 0x36
    4bda:	8f a9       	ldd	r24, Y+55	; 0x37
    4bdc:	98 ad       	ldd	r25, Y+56	; 0x38
    4bde:	20 e0       	ldi	r18, 0x00	; 0
    4be0:	30 e0       	ldi	r19, 0x00	; 0
    4be2:	4a ef       	ldi	r20, 0xFA	; 250
    4be4:	54 e4       	ldi	r21, 0x44	; 68
    4be6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4bea:	dc 01       	movw	r26, r24
    4bec:	cb 01       	movw	r24, r22
    4bee:	89 ab       	std	Y+49, r24	; 0x31
    4bf0:	9a ab       	std	Y+50, r25	; 0x32
    4bf2:	ab ab       	std	Y+51, r26	; 0x33
    4bf4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4bf6:	69 a9       	ldd	r22, Y+49	; 0x31
    4bf8:	7a a9       	ldd	r23, Y+50	; 0x32
    4bfa:	8b a9       	ldd	r24, Y+51	; 0x33
    4bfc:	9c a9       	ldd	r25, Y+52	; 0x34
    4bfe:	20 e0       	ldi	r18, 0x00	; 0
    4c00:	30 e0       	ldi	r19, 0x00	; 0
    4c02:	40 e8       	ldi	r20, 0x80	; 128
    4c04:	5f e3       	ldi	r21, 0x3F	; 63
    4c06:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4c0a:	88 23       	and	r24, r24
    4c0c:	2c f4       	brge	.+10     	; 0x4c18 <snake_effect+0x1144>
		__ticks = 1;
    4c0e:	81 e0       	ldi	r24, 0x01	; 1
    4c10:	90 e0       	ldi	r25, 0x00	; 0
    4c12:	98 ab       	std	Y+48, r25	; 0x30
    4c14:	8f a7       	std	Y+47, r24	; 0x2f
    4c16:	3f c0       	rjmp	.+126    	; 0x4c96 <snake_effect+0x11c2>
	else if (__tmp > 65535)
    4c18:	69 a9       	ldd	r22, Y+49	; 0x31
    4c1a:	7a a9       	ldd	r23, Y+50	; 0x32
    4c1c:	8b a9       	ldd	r24, Y+51	; 0x33
    4c1e:	9c a9       	ldd	r25, Y+52	; 0x34
    4c20:	20 e0       	ldi	r18, 0x00	; 0
    4c22:	3f ef       	ldi	r19, 0xFF	; 255
    4c24:	4f e7       	ldi	r20, 0x7F	; 127
    4c26:	57 e4       	ldi	r21, 0x47	; 71
    4c28:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4c2c:	18 16       	cp	r1, r24
    4c2e:	4c f5       	brge	.+82     	; 0x4c82 <snake_effect+0x11ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c30:	6d a9       	ldd	r22, Y+53	; 0x35
    4c32:	7e a9       	ldd	r23, Y+54	; 0x36
    4c34:	8f a9       	ldd	r24, Y+55	; 0x37
    4c36:	98 ad       	ldd	r25, Y+56	; 0x38
    4c38:	20 e0       	ldi	r18, 0x00	; 0
    4c3a:	30 e0       	ldi	r19, 0x00	; 0
    4c3c:	40 e2       	ldi	r20, 0x20	; 32
    4c3e:	51 e4       	ldi	r21, 0x41	; 65
    4c40:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4c44:	dc 01       	movw	r26, r24
    4c46:	cb 01       	movw	r24, r22
    4c48:	bc 01       	movw	r22, r24
    4c4a:	cd 01       	movw	r24, r26
    4c4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c50:	dc 01       	movw	r26, r24
    4c52:	cb 01       	movw	r24, r22
    4c54:	98 ab       	std	Y+48, r25	; 0x30
    4c56:	8f a7       	std	Y+47, r24	; 0x2f
    4c58:	0f c0       	rjmp	.+30     	; 0x4c78 <snake_effect+0x11a4>
    4c5a:	88 ec       	ldi	r24, 0xC8	; 200
    4c5c:	90 e0       	ldi	r25, 0x00	; 0
    4c5e:	9e a7       	std	Y+46, r25	; 0x2e
    4c60:	8d a7       	std	Y+45, r24	; 0x2d
    4c62:	8d a5       	ldd	r24, Y+45	; 0x2d
    4c64:	9e a5       	ldd	r25, Y+46	; 0x2e
    4c66:	01 97       	sbiw	r24, 0x01	; 1
    4c68:	f1 f7       	brne	.-4      	; 0x4c66 <snake_effect+0x1192>
    4c6a:	9e a7       	std	Y+46, r25	; 0x2e
    4c6c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c6e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4c70:	98 a9       	ldd	r25, Y+48	; 0x30
    4c72:	01 97       	sbiw	r24, 0x01	; 1
    4c74:	98 ab       	std	Y+48, r25	; 0x30
    4c76:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c78:	8f a5       	ldd	r24, Y+47	; 0x2f
    4c7a:	98 a9       	ldd	r25, Y+48	; 0x30
    4c7c:	00 97       	sbiw	r24, 0x00	; 0
    4c7e:	69 f7       	brne	.-38     	; 0x4c5a <snake_effect+0x1186>
    4c80:	14 c0       	rjmp	.+40     	; 0x4caa <snake_effect+0x11d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c82:	69 a9       	ldd	r22, Y+49	; 0x31
    4c84:	7a a9       	ldd	r23, Y+50	; 0x32
    4c86:	8b a9       	ldd	r24, Y+51	; 0x33
    4c88:	9c a9       	ldd	r25, Y+52	; 0x34
    4c8a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c8e:	dc 01       	movw	r26, r24
    4c90:	cb 01       	movw	r24, r22
    4c92:	98 ab       	std	Y+48, r25	; 0x30
    4c94:	8f a7       	std	Y+47, r24	; 0x2f
    4c96:	8f a5       	ldd	r24, Y+47	; 0x2f
    4c98:	98 a9       	ldd	r25, Y+48	; 0x30
    4c9a:	9c a7       	std	Y+44, r25	; 0x2c
    4c9c:	8b a7       	std	Y+43, r24	; 0x2b
    4c9e:	8b a5       	ldd	r24, Y+43	; 0x2b
    4ca0:	9c a5       	ldd	r25, Y+44	; 0x2c
    4ca2:	01 97       	sbiw	r24, 0x01	; 1
    4ca4:	f1 f7       	brne	.-4      	; 0x4ca2 <snake_effect+0x11ce>
    4ca6:	9c a7       	std	Y+44, r25	; 0x2c
    4ca8:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(300);
		PORTB = 0b11000000;
    4caa:	e8 e3       	ldi	r30, 0x38	; 56
    4cac:	f0 e0       	ldi	r31, 0x00	; 0
    4cae:	80 ec       	ldi	r24, 0xC0	; 192
    4cb0:	80 83       	st	Z, r24
    4cb2:	80 e0       	ldi	r24, 0x00	; 0
    4cb4:	90 e0       	ldi	r25, 0x00	; 0
    4cb6:	a6 e9       	ldi	r26, 0x96	; 150
    4cb8:	b3 e4       	ldi	r27, 0x43	; 67
    4cba:	8f a3       	std	Y+39, r24	; 0x27
    4cbc:	98 a7       	std	Y+40, r25	; 0x28
    4cbe:	a9 a7       	std	Y+41, r26	; 0x29
    4cc0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4cc2:	6f a1       	ldd	r22, Y+39	; 0x27
    4cc4:	78 a5       	ldd	r23, Y+40	; 0x28
    4cc6:	89 a5       	ldd	r24, Y+41	; 0x29
    4cc8:	9a a5       	ldd	r25, Y+42	; 0x2a
    4cca:	20 e0       	ldi	r18, 0x00	; 0
    4ccc:	30 e0       	ldi	r19, 0x00	; 0
    4cce:	4a ef       	ldi	r20, 0xFA	; 250
    4cd0:	54 e4       	ldi	r21, 0x44	; 68
    4cd2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4cd6:	dc 01       	movw	r26, r24
    4cd8:	cb 01       	movw	r24, r22
    4cda:	8b a3       	std	Y+35, r24	; 0x23
    4cdc:	9c a3       	std	Y+36, r25	; 0x24
    4cde:	ad a3       	std	Y+37, r26	; 0x25
    4ce0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4ce2:	6b a1       	ldd	r22, Y+35	; 0x23
    4ce4:	7c a1       	ldd	r23, Y+36	; 0x24
    4ce6:	8d a1       	ldd	r24, Y+37	; 0x25
    4ce8:	9e a1       	ldd	r25, Y+38	; 0x26
    4cea:	20 e0       	ldi	r18, 0x00	; 0
    4cec:	30 e0       	ldi	r19, 0x00	; 0
    4cee:	40 e8       	ldi	r20, 0x80	; 128
    4cf0:	5f e3       	ldi	r21, 0x3F	; 63
    4cf2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4cf6:	88 23       	and	r24, r24
    4cf8:	2c f4       	brge	.+10     	; 0x4d04 <snake_effect+0x1230>
		__ticks = 1;
    4cfa:	81 e0       	ldi	r24, 0x01	; 1
    4cfc:	90 e0       	ldi	r25, 0x00	; 0
    4cfe:	9a a3       	std	Y+34, r25	; 0x22
    4d00:	89 a3       	std	Y+33, r24	; 0x21
    4d02:	3f c0       	rjmp	.+126    	; 0x4d82 <snake_effect+0x12ae>
	else if (__tmp > 65535)
    4d04:	6b a1       	ldd	r22, Y+35	; 0x23
    4d06:	7c a1       	ldd	r23, Y+36	; 0x24
    4d08:	8d a1       	ldd	r24, Y+37	; 0x25
    4d0a:	9e a1       	ldd	r25, Y+38	; 0x26
    4d0c:	20 e0       	ldi	r18, 0x00	; 0
    4d0e:	3f ef       	ldi	r19, 0xFF	; 255
    4d10:	4f e7       	ldi	r20, 0x7F	; 127
    4d12:	57 e4       	ldi	r21, 0x47	; 71
    4d14:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4d18:	18 16       	cp	r1, r24
    4d1a:	4c f5       	brge	.+82     	; 0x4d6e <snake_effect+0x129a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d1c:	6f a1       	ldd	r22, Y+39	; 0x27
    4d1e:	78 a5       	ldd	r23, Y+40	; 0x28
    4d20:	89 a5       	ldd	r24, Y+41	; 0x29
    4d22:	9a a5       	ldd	r25, Y+42	; 0x2a
    4d24:	20 e0       	ldi	r18, 0x00	; 0
    4d26:	30 e0       	ldi	r19, 0x00	; 0
    4d28:	40 e2       	ldi	r20, 0x20	; 32
    4d2a:	51 e4       	ldi	r21, 0x41	; 65
    4d2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4d30:	dc 01       	movw	r26, r24
    4d32:	cb 01       	movw	r24, r22
    4d34:	bc 01       	movw	r22, r24
    4d36:	cd 01       	movw	r24, r26
    4d38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d3c:	dc 01       	movw	r26, r24
    4d3e:	cb 01       	movw	r24, r22
    4d40:	9a a3       	std	Y+34, r25	; 0x22
    4d42:	89 a3       	std	Y+33, r24	; 0x21
    4d44:	0f c0       	rjmp	.+30     	; 0x4d64 <snake_effect+0x1290>
    4d46:	88 ec       	ldi	r24, 0xC8	; 200
    4d48:	90 e0       	ldi	r25, 0x00	; 0
    4d4a:	98 a3       	std	Y+32, r25	; 0x20
    4d4c:	8f 8f       	std	Y+31, r24	; 0x1f
    4d4e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4d50:	98 a1       	ldd	r25, Y+32	; 0x20
    4d52:	01 97       	sbiw	r24, 0x01	; 1
    4d54:	f1 f7       	brne	.-4      	; 0x4d52 <snake_effect+0x127e>
    4d56:	98 a3       	std	Y+32, r25	; 0x20
    4d58:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d5a:	89 a1       	ldd	r24, Y+33	; 0x21
    4d5c:	9a a1       	ldd	r25, Y+34	; 0x22
    4d5e:	01 97       	sbiw	r24, 0x01	; 1
    4d60:	9a a3       	std	Y+34, r25	; 0x22
    4d62:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d64:	89 a1       	ldd	r24, Y+33	; 0x21
    4d66:	9a a1       	ldd	r25, Y+34	; 0x22
    4d68:	00 97       	sbiw	r24, 0x00	; 0
    4d6a:	69 f7       	brne	.-38     	; 0x4d46 <snake_effect+0x1272>
    4d6c:	14 c0       	rjmp	.+40     	; 0x4d96 <snake_effect+0x12c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d6e:	6b a1       	ldd	r22, Y+35	; 0x23
    4d70:	7c a1       	ldd	r23, Y+36	; 0x24
    4d72:	8d a1       	ldd	r24, Y+37	; 0x25
    4d74:	9e a1       	ldd	r25, Y+38	; 0x26
    4d76:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d7a:	dc 01       	movw	r26, r24
    4d7c:	cb 01       	movw	r24, r22
    4d7e:	9a a3       	std	Y+34, r25	; 0x22
    4d80:	89 a3       	std	Y+33, r24	; 0x21
    4d82:	89 a1       	ldd	r24, Y+33	; 0x21
    4d84:	9a a1       	ldd	r25, Y+34	; 0x22
    4d86:	9e 8f       	std	Y+30, r25	; 0x1e
    4d88:	8d 8f       	std	Y+29, r24	; 0x1d
    4d8a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4d8c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4d8e:	01 97       	sbiw	r24, 0x01	; 1
    4d90:	f1 f7       	brne	.-4      	; 0x4d8e <snake_effect+0x12ba>
    4d92:	9e 8f       	std	Y+30, r25	; 0x1e
    4d94:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(300);
		PORTB = 0b10000000;
    4d96:	e8 e3       	ldi	r30, 0x38	; 56
    4d98:	f0 e0       	ldi	r31, 0x00	; 0
    4d9a:	80 e8       	ldi	r24, 0x80	; 128
    4d9c:	80 83       	st	Z, r24
    4d9e:	80 e0       	ldi	r24, 0x00	; 0
    4da0:	90 e0       	ldi	r25, 0x00	; 0
    4da2:	a6 e9       	ldi	r26, 0x96	; 150
    4da4:	b3 e4       	ldi	r27, 0x43	; 67
    4da6:	89 8f       	std	Y+25, r24	; 0x19
    4da8:	9a 8f       	std	Y+26, r25	; 0x1a
    4daa:	ab 8f       	std	Y+27, r26	; 0x1b
    4dac:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4dae:	69 8d       	ldd	r22, Y+25	; 0x19
    4db0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4db2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4db4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4db6:	20 e0       	ldi	r18, 0x00	; 0
    4db8:	30 e0       	ldi	r19, 0x00	; 0
    4dba:	4a ef       	ldi	r20, 0xFA	; 250
    4dbc:	54 e4       	ldi	r21, 0x44	; 68
    4dbe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4dc2:	dc 01       	movw	r26, r24
    4dc4:	cb 01       	movw	r24, r22
    4dc6:	8d 8b       	std	Y+21, r24	; 0x15
    4dc8:	9e 8b       	std	Y+22, r25	; 0x16
    4dca:	af 8b       	std	Y+23, r26	; 0x17
    4dcc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4dce:	6d 89       	ldd	r22, Y+21	; 0x15
    4dd0:	7e 89       	ldd	r23, Y+22	; 0x16
    4dd2:	8f 89       	ldd	r24, Y+23	; 0x17
    4dd4:	98 8d       	ldd	r25, Y+24	; 0x18
    4dd6:	20 e0       	ldi	r18, 0x00	; 0
    4dd8:	30 e0       	ldi	r19, 0x00	; 0
    4dda:	40 e8       	ldi	r20, 0x80	; 128
    4ddc:	5f e3       	ldi	r21, 0x3F	; 63
    4dde:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4de2:	88 23       	and	r24, r24
    4de4:	2c f4       	brge	.+10     	; 0x4df0 <snake_effect+0x131c>
		__ticks = 1;
    4de6:	81 e0       	ldi	r24, 0x01	; 1
    4de8:	90 e0       	ldi	r25, 0x00	; 0
    4dea:	9c 8b       	std	Y+20, r25	; 0x14
    4dec:	8b 8b       	std	Y+19, r24	; 0x13
    4dee:	3f c0       	rjmp	.+126    	; 0x4e6e <snake_effect+0x139a>
	else if (__tmp > 65535)
    4df0:	6d 89       	ldd	r22, Y+21	; 0x15
    4df2:	7e 89       	ldd	r23, Y+22	; 0x16
    4df4:	8f 89       	ldd	r24, Y+23	; 0x17
    4df6:	98 8d       	ldd	r25, Y+24	; 0x18
    4df8:	20 e0       	ldi	r18, 0x00	; 0
    4dfa:	3f ef       	ldi	r19, 0xFF	; 255
    4dfc:	4f e7       	ldi	r20, 0x7F	; 127
    4dfe:	57 e4       	ldi	r21, 0x47	; 71
    4e00:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4e04:	18 16       	cp	r1, r24
    4e06:	4c f5       	brge	.+82     	; 0x4e5a <snake_effect+0x1386>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e08:	69 8d       	ldd	r22, Y+25	; 0x19
    4e0a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4e0c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4e0e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4e10:	20 e0       	ldi	r18, 0x00	; 0
    4e12:	30 e0       	ldi	r19, 0x00	; 0
    4e14:	40 e2       	ldi	r20, 0x20	; 32
    4e16:	51 e4       	ldi	r21, 0x41	; 65
    4e18:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4e1c:	dc 01       	movw	r26, r24
    4e1e:	cb 01       	movw	r24, r22
    4e20:	bc 01       	movw	r22, r24
    4e22:	cd 01       	movw	r24, r26
    4e24:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e28:	dc 01       	movw	r26, r24
    4e2a:	cb 01       	movw	r24, r22
    4e2c:	9c 8b       	std	Y+20, r25	; 0x14
    4e2e:	8b 8b       	std	Y+19, r24	; 0x13
    4e30:	0f c0       	rjmp	.+30     	; 0x4e50 <snake_effect+0x137c>
    4e32:	88 ec       	ldi	r24, 0xC8	; 200
    4e34:	90 e0       	ldi	r25, 0x00	; 0
    4e36:	9a 8b       	std	Y+18, r25	; 0x12
    4e38:	89 8b       	std	Y+17, r24	; 0x11
    4e3a:	89 89       	ldd	r24, Y+17	; 0x11
    4e3c:	9a 89       	ldd	r25, Y+18	; 0x12
    4e3e:	01 97       	sbiw	r24, 0x01	; 1
    4e40:	f1 f7       	brne	.-4      	; 0x4e3e <snake_effect+0x136a>
    4e42:	9a 8b       	std	Y+18, r25	; 0x12
    4e44:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e46:	8b 89       	ldd	r24, Y+19	; 0x13
    4e48:	9c 89       	ldd	r25, Y+20	; 0x14
    4e4a:	01 97       	sbiw	r24, 0x01	; 1
    4e4c:	9c 8b       	std	Y+20, r25	; 0x14
    4e4e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e50:	8b 89       	ldd	r24, Y+19	; 0x13
    4e52:	9c 89       	ldd	r25, Y+20	; 0x14
    4e54:	00 97       	sbiw	r24, 0x00	; 0
    4e56:	69 f7       	brne	.-38     	; 0x4e32 <snake_effect+0x135e>
    4e58:	14 c0       	rjmp	.+40     	; 0x4e82 <snake_effect+0x13ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e5a:	6d 89       	ldd	r22, Y+21	; 0x15
    4e5c:	7e 89       	ldd	r23, Y+22	; 0x16
    4e5e:	8f 89       	ldd	r24, Y+23	; 0x17
    4e60:	98 8d       	ldd	r25, Y+24	; 0x18
    4e62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e66:	dc 01       	movw	r26, r24
    4e68:	cb 01       	movw	r24, r22
    4e6a:	9c 8b       	std	Y+20, r25	; 0x14
    4e6c:	8b 8b       	std	Y+19, r24	; 0x13
    4e6e:	8b 89       	ldd	r24, Y+19	; 0x13
    4e70:	9c 89       	ldd	r25, Y+20	; 0x14
    4e72:	98 8b       	std	Y+16, r25	; 0x10
    4e74:	8f 87       	std	Y+15, r24	; 0x0f
    4e76:	8f 85       	ldd	r24, Y+15	; 0x0f
    4e78:	98 89       	ldd	r25, Y+16	; 0x10
    4e7a:	01 97       	sbiw	r24, 0x01	; 1
    4e7c:	f1 f7       	brne	.-4      	; 0x4e7a <snake_effect+0x13a6>
    4e7e:	98 8b       	std	Y+16, r25	; 0x10
    4e80:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(300);
		PORTB = 0b00000000;
    4e82:	e8 e3       	ldi	r30, 0x38	; 56
    4e84:	f0 e0       	ldi	r31, 0x00	; 0
    4e86:	10 82       	st	Z, r1
    4e88:	80 e0       	ldi	r24, 0x00	; 0
    4e8a:	90 e0       	ldi	r25, 0x00	; 0
    4e8c:	a6 e9       	ldi	r26, 0x96	; 150
    4e8e:	b3 e4       	ldi	r27, 0x43	; 67
    4e90:	8b 87       	std	Y+11, r24	; 0x0b
    4e92:	9c 87       	std	Y+12, r25	; 0x0c
    4e94:	ad 87       	std	Y+13, r26	; 0x0d
    4e96:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e98:	6b 85       	ldd	r22, Y+11	; 0x0b
    4e9a:	7c 85       	ldd	r23, Y+12	; 0x0c
    4e9c:	8d 85       	ldd	r24, Y+13	; 0x0d
    4e9e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4ea0:	20 e0       	ldi	r18, 0x00	; 0
    4ea2:	30 e0       	ldi	r19, 0x00	; 0
    4ea4:	4a ef       	ldi	r20, 0xFA	; 250
    4ea6:	54 e4       	ldi	r21, 0x44	; 68
    4ea8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4eac:	dc 01       	movw	r26, r24
    4eae:	cb 01       	movw	r24, r22
    4eb0:	8f 83       	std	Y+7, r24	; 0x07
    4eb2:	98 87       	std	Y+8, r25	; 0x08
    4eb4:	a9 87       	std	Y+9, r26	; 0x09
    4eb6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4eb8:	6f 81       	ldd	r22, Y+7	; 0x07
    4eba:	78 85       	ldd	r23, Y+8	; 0x08
    4ebc:	89 85       	ldd	r24, Y+9	; 0x09
    4ebe:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ec0:	20 e0       	ldi	r18, 0x00	; 0
    4ec2:	30 e0       	ldi	r19, 0x00	; 0
    4ec4:	40 e8       	ldi	r20, 0x80	; 128
    4ec6:	5f e3       	ldi	r21, 0x3F	; 63
    4ec8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4ecc:	88 23       	and	r24, r24
    4ece:	2c f4       	brge	.+10     	; 0x4eda <snake_effect+0x1406>
		__ticks = 1;
    4ed0:	81 e0       	ldi	r24, 0x01	; 1
    4ed2:	90 e0       	ldi	r25, 0x00	; 0
    4ed4:	9e 83       	std	Y+6, r25	; 0x06
    4ed6:	8d 83       	std	Y+5, r24	; 0x05
    4ed8:	3f c0       	rjmp	.+126    	; 0x4f58 <snake_effect+0x1484>
	else if (__tmp > 65535)
    4eda:	6f 81       	ldd	r22, Y+7	; 0x07
    4edc:	78 85       	ldd	r23, Y+8	; 0x08
    4ede:	89 85       	ldd	r24, Y+9	; 0x09
    4ee0:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ee2:	20 e0       	ldi	r18, 0x00	; 0
    4ee4:	3f ef       	ldi	r19, 0xFF	; 255
    4ee6:	4f e7       	ldi	r20, 0x7F	; 127
    4ee8:	57 e4       	ldi	r21, 0x47	; 71
    4eea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4eee:	18 16       	cp	r1, r24
    4ef0:	4c f5       	brge	.+82     	; 0x4f44 <snake_effect+0x1470>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ef2:	6b 85       	ldd	r22, Y+11	; 0x0b
    4ef4:	7c 85       	ldd	r23, Y+12	; 0x0c
    4ef6:	8d 85       	ldd	r24, Y+13	; 0x0d
    4ef8:	9e 85       	ldd	r25, Y+14	; 0x0e
    4efa:	20 e0       	ldi	r18, 0x00	; 0
    4efc:	30 e0       	ldi	r19, 0x00	; 0
    4efe:	40 e2       	ldi	r20, 0x20	; 32
    4f00:	51 e4       	ldi	r21, 0x41	; 65
    4f02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4f06:	dc 01       	movw	r26, r24
    4f08:	cb 01       	movw	r24, r22
    4f0a:	bc 01       	movw	r22, r24
    4f0c:	cd 01       	movw	r24, r26
    4f0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4f12:	dc 01       	movw	r26, r24
    4f14:	cb 01       	movw	r24, r22
    4f16:	9e 83       	std	Y+6, r25	; 0x06
    4f18:	8d 83       	std	Y+5, r24	; 0x05
    4f1a:	0f c0       	rjmp	.+30     	; 0x4f3a <snake_effect+0x1466>
    4f1c:	88 ec       	ldi	r24, 0xC8	; 200
    4f1e:	90 e0       	ldi	r25, 0x00	; 0
    4f20:	9c 83       	std	Y+4, r25	; 0x04
    4f22:	8b 83       	std	Y+3, r24	; 0x03
    4f24:	8b 81       	ldd	r24, Y+3	; 0x03
    4f26:	9c 81       	ldd	r25, Y+4	; 0x04
    4f28:	01 97       	sbiw	r24, 0x01	; 1
    4f2a:	f1 f7       	brne	.-4      	; 0x4f28 <snake_effect+0x1454>
    4f2c:	9c 83       	std	Y+4, r25	; 0x04
    4f2e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f30:	8d 81       	ldd	r24, Y+5	; 0x05
    4f32:	9e 81       	ldd	r25, Y+6	; 0x06
    4f34:	01 97       	sbiw	r24, 0x01	; 1
    4f36:	9e 83       	std	Y+6, r25	; 0x06
    4f38:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f3a:	8d 81       	ldd	r24, Y+5	; 0x05
    4f3c:	9e 81       	ldd	r25, Y+6	; 0x06
    4f3e:	00 97       	sbiw	r24, 0x00	; 0
    4f40:	69 f7       	brne	.-38     	; 0x4f1c <snake_effect+0x1448>
    4f42:	14 c0       	rjmp	.+40     	; 0x4f6c <snake_effect+0x1498>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f44:	6f 81       	ldd	r22, Y+7	; 0x07
    4f46:	78 85       	ldd	r23, Y+8	; 0x08
    4f48:	89 85       	ldd	r24, Y+9	; 0x09
    4f4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4f50:	dc 01       	movw	r26, r24
    4f52:	cb 01       	movw	r24, r22
    4f54:	9e 83       	std	Y+6, r25	; 0x06
    4f56:	8d 83       	std	Y+5, r24	; 0x05
    4f58:	8d 81       	ldd	r24, Y+5	; 0x05
    4f5a:	9e 81       	ldd	r25, Y+6	; 0x06
    4f5c:	9a 83       	std	Y+2, r25	; 0x02
    4f5e:	89 83       	std	Y+1, r24	; 0x01
    4f60:	89 81       	ldd	r24, Y+1	; 0x01
    4f62:	9a 81       	ldd	r25, Y+2	; 0x02
    4f64:	01 97       	sbiw	r24, 0x01	; 1
    4f66:	f1 f7       	brne	.-4      	; 0x4f64 <snake_effect+0x1490>
    4f68:	9a 83       	std	Y+2, r25	; 0x02
    4f6a:	89 83       	std	Y+1, r24	; 0x01
	}
}

void snake_effect()
{
	while(GET_BIT(PINC, 6)==0)
    4f6c:	e3 e3       	ldi	r30, 0x33	; 51
    4f6e:	f0 e0       	ldi	r31, 0x00	; 0
    4f70:	80 81       	ld	r24, Z
    4f72:	82 95       	swap	r24
    4f74:	86 95       	lsr	r24
    4f76:	86 95       	lsr	r24
    4f78:	83 70       	andi	r24, 0x03	; 3
    4f7a:	88 2f       	mov	r24, r24
    4f7c:	90 e0       	ldi	r25, 0x00	; 0
    4f7e:	81 70       	andi	r24, 0x01	; 1
    4f80:	90 70       	andi	r25, 0x00	; 0
    4f82:	00 97       	sbiw	r24, 0x00	; 0
    4f84:	11 f4       	brne	.+4      	; 0x4f8a <snake_effect+0x14b6>
    4f86:	0c 94 79 1d 	jmp	0x3af2	; 0x3af2 <snake_effect+0x1e>
		PORTB = 0b10000000;
		_delay_ms(300);
		PORTB = 0b00000000;
		_delay_ms(300);
	}
}
    4f8a:	c0 52       	subi	r28, 0x20	; 32
    4f8c:	df 4f       	sbci	r29, 0xFF	; 255
    4f8e:	0f b6       	in	r0, 0x3f	; 63
    4f90:	f8 94       	cli
    4f92:	de bf       	out	0x3e, r29	; 62
    4f94:	0f be       	out	0x3f, r0	; 63
    4f96:	cd bf       	out	0x3d, r28	; 61
    4f98:	cf 91       	pop	r28
    4f9a:	df 91       	pop	r29
    4f9c:	1f 91       	pop	r17
    4f9e:	0f 91       	pop	r16
    4fa0:	08 95       	ret

00004fa2 <converge_diverge>:

void converge_diverge()
{
    4fa2:	0f 93       	push	r16
    4fa4:	1f 93       	push	r17
    4fa6:	df 93       	push	r29
    4fa8:	cf 93       	push	r28
    4faa:	cd b7       	in	r28, 0x3d	; 61
    4fac:	de b7       	in	r29, 0x3e	; 62
    4fae:	c4 55       	subi	r28, 0x54	; 84
    4fb0:	d0 40       	sbci	r29, 0x00	; 0
    4fb2:	0f b6       	in	r0, 0x3f	; 63
    4fb4:	f8 94       	cli
    4fb6:	de bf       	out	0x3e, r29	; 62
    4fb8:	0f be       	out	0x3f, r0	; 63
    4fba:	cd bf       	out	0x3d, r28	; 61
    4fbc:	18 c3       	rjmp	.+1584   	; 0x55ee <converge_diverge+0x64c>
	while(GET_BIT(PINC, 7)==0)
	{
		PORTB = 0b10000001;
    4fbe:	e8 e3       	ldi	r30, 0x38	; 56
    4fc0:	f0 e0       	ldi	r31, 0x00	; 0
    4fc2:	81 e8       	ldi	r24, 0x81	; 129
    4fc4:	80 83       	st	Z, r24
    4fc6:	fe 01       	movw	r30, r28
    4fc8:	ef 5a       	subi	r30, 0xAF	; 175
    4fca:	ff 4f       	sbci	r31, 0xFF	; 255
    4fcc:	80 e0       	ldi	r24, 0x00	; 0
    4fce:	90 e0       	ldi	r25, 0x00	; 0
    4fd0:	a6 e9       	ldi	r26, 0x96	; 150
    4fd2:	b3 e4       	ldi	r27, 0x43	; 67
    4fd4:	80 83       	st	Z, r24
    4fd6:	91 83       	std	Z+1, r25	; 0x01
    4fd8:	a2 83       	std	Z+2, r26	; 0x02
    4fda:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4fdc:	8e 01       	movw	r16, r28
    4fde:	03 5b       	subi	r16, 0xB3	; 179
    4fe0:	1f 4f       	sbci	r17, 0xFF	; 255
    4fe2:	fe 01       	movw	r30, r28
    4fe4:	ef 5a       	subi	r30, 0xAF	; 175
    4fe6:	ff 4f       	sbci	r31, 0xFF	; 255
    4fe8:	60 81       	ld	r22, Z
    4fea:	71 81       	ldd	r23, Z+1	; 0x01
    4fec:	82 81       	ldd	r24, Z+2	; 0x02
    4fee:	93 81       	ldd	r25, Z+3	; 0x03
    4ff0:	20 e0       	ldi	r18, 0x00	; 0
    4ff2:	30 e0       	ldi	r19, 0x00	; 0
    4ff4:	4a ef       	ldi	r20, 0xFA	; 250
    4ff6:	54 e4       	ldi	r21, 0x44	; 68
    4ff8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4ffc:	dc 01       	movw	r26, r24
    4ffe:	cb 01       	movw	r24, r22
    5000:	f8 01       	movw	r30, r16
    5002:	80 83       	st	Z, r24
    5004:	91 83       	std	Z+1, r25	; 0x01
    5006:	a2 83       	std	Z+2, r26	; 0x02
    5008:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    500a:	fe 01       	movw	r30, r28
    500c:	e3 5b       	subi	r30, 0xB3	; 179
    500e:	ff 4f       	sbci	r31, 0xFF	; 255
    5010:	60 81       	ld	r22, Z
    5012:	71 81       	ldd	r23, Z+1	; 0x01
    5014:	82 81       	ldd	r24, Z+2	; 0x02
    5016:	93 81       	ldd	r25, Z+3	; 0x03
    5018:	20 e0       	ldi	r18, 0x00	; 0
    501a:	30 e0       	ldi	r19, 0x00	; 0
    501c:	40 e8       	ldi	r20, 0x80	; 128
    501e:	5f e3       	ldi	r21, 0x3F	; 63
    5020:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5024:	88 23       	and	r24, r24
    5026:	44 f4       	brge	.+16     	; 0x5038 <converge_diverge+0x96>
		__ticks = 1;
    5028:	fe 01       	movw	r30, r28
    502a:	e5 5b       	subi	r30, 0xB5	; 181
    502c:	ff 4f       	sbci	r31, 0xFF	; 255
    502e:	81 e0       	ldi	r24, 0x01	; 1
    5030:	90 e0       	ldi	r25, 0x00	; 0
    5032:	91 83       	std	Z+1, r25	; 0x01
    5034:	80 83       	st	Z, r24
    5036:	64 c0       	rjmp	.+200    	; 0x5100 <converge_diverge+0x15e>
	else if (__tmp > 65535)
    5038:	fe 01       	movw	r30, r28
    503a:	e3 5b       	subi	r30, 0xB3	; 179
    503c:	ff 4f       	sbci	r31, 0xFF	; 255
    503e:	60 81       	ld	r22, Z
    5040:	71 81       	ldd	r23, Z+1	; 0x01
    5042:	82 81       	ldd	r24, Z+2	; 0x02
    5044:	93 81       	ldd	r25, Z+3	; 0x03
    5046:	20 e0       	ldi	r18, 0x00	; 0
    5048:	3f ef       	ldi	r19, 0xFF	; 255
    504a:	4f e7       	ldi	r20, 0x7F	; 127
    504c:	57 e4       	ldi	r21, 0x47	; 71
    504e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5052:	18 16       	cp	r1, r24
    5054:	0c f0       	brlt	.+2      	; 0x5058 <converge_diverge+0xb6>
    5056:	43 c0       	rjmp	.+134    	; 0x50de <converge_diverge+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5058:	fe 01       	movw	r30, r28
    505a:	ef 5a       	subi	r30, 0xAF	; 175
    505c:	ff 4f       	sbci	r31, 0xFF	; 255
    505e:	60 81       	ld	r22, Z
    5060:	71 81       	ldd	r23, Z+1	; 0x01
    5062:	82 81       	ldd	r24, Z+2	; 0x02
    5064:	93 81       	ldd	r25, Z+3	; 0x03
    5066:	20 e0       	ldi	r18, 0x00	; 0
    5068:	30 e0       	ldi	r19, 0x00	; 0
    506a:	40 e2       	ldi	r20, 0x20	; 32
    506c:	51 e4       	ldi	r21, 0x41	; 65
    506e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5072:	dc 01       	movw	r26, r24
    5074:	cb 01       	movw	r24, r22
    5076:	8e 01       	movw	r16, r28
    5078:	05 5b       	subi	r16, 0xB5	; 181
    507a:	1f 4f       	sbci	r17, 0xFF	; 255
    507c:	bc 01       	movw	r22, r24
    507e:	cd 01       	movw	r24, r26
    5080:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5084:	dc 01       	movw	r26, r24
    5086:	cb 01       	movw	r24, r22
    5088:	f8 01       	movw	r30, r16
    508a:	91 83       	std	Z+1, r25	; 0x01
    508c:	80 83       	st	Z, r24
    508e:	1f c0       	rjmp	.+62     	; 0x50ce <converge_diverge+0x12c>
    5090:	fe 01       	movw	r30, r28
    5092:	e7 5b       	subi	r30, 0xB7	; 183
    5094:	ff 4f       	sbci	r31, 0xFF	; 255
    5096:	88 ec       	ldi	r24, 0xC8	; 200
    5098:	90 e0       	ldi	r25, 0x00	; 0
    509a:	91 83       	std	Z+1, r25	; 0x01
    509c:	80 83       	st	Z, r24
    509e:	fe 01       	movw	r30, r28
    50a0:	e7 5b       	subi	r30, 0xB7	; 183
    50a2:	ff 4f       	sbci	r31, 0xFF	; 255
    50a4:	80 81       	ld	r24, Z
    50a6:	91 81       	ldd	r25, Z+1	; 0x01
    50a8:	01 97       	sbiw	r24, 0x01	; 1
    50aa:	f1 f7       	brne	.-4      	; 0x50a8 <converge_diverge+0x106>
    50ac:	fe 01       	movw	r30, r28
    50ae:	e7 5b       	subi	r30, 0xB7	; 183
    50b0:	ff 4f       	sbci	r31, 0xFF	; 255
    50b2:	91 83       	std	Z+1, r25	; 0x01
    50b4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50b6:	de 01       	movw	r26, r28
    50b8:	a5 5b       	subi	r26, 0xB5	; 181
    50ba:	bf 4f       	sbci	r27, 0xFF	; 255
    50bc:	fe 01       	movw	r30, r28
    50be:	e5 5b       	subi	r30, 0xB5	; 181
    50c0:	ff 4f       	sbci	r31, 0xFF	; 255
    50c2:	80 81       	ld	r24, Z
    50c4:	91 81       	ldd	r25, Z+1	; 0x01
    50c6:	01 97       	sbiw	r24, 0x01	; 1
    50c8:	11 96       	adiw	r26, 0x01	; 1
    50ca:	9c 93       	st	X, r25
    50cc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50ce:	fe 01       	movw	r30, r28
    50d0:	e5 5b       	subi	r30, 0xB5	; 181
    50d2:	ff 4f       	sbci	r31, 0xFF	; 255
    50d4:	80 81       	ld	r24, Z
    50d6:	91 81       	ldd	r25, Z+1	; 0x01
    50d8:	00 97       	sbiw	r24, 0x00	; 0
    50da:	d1 f6       	brne	.-76     	; 0x5090 <converge_diverge+0xee>
    50dc:	27 c0       	rjmp	.+78     	; 0x512c <converge_diverge+0x18a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50de:	8e 01       	movw	r16, r28
    50e0:	05 5b       	subi	r16, 0xB5	; 181
    50e2:	1f 4f       	sbci	r17, 0xFF	; 255
    50e4:	fe 01       	movw	r30, r28
    50e6:	e3 5b       	subi	r30, 0xB3	; 179
    50e8:	ff 4f       	sbci	r31, 0xFF	; 255
    50ea:	60 81       	ld	r22, Z
    50ec:	71 81       	ldd	r23, Z+1	; 0x01
    50ee:	82 81       	ldd	r24, Z+2	; 0x02
    50f0:	93 81       	ldd	r25, Z+3	; 0x03
    50f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    50f6:	dc 01       	movw	r26, r24
    50f8:	cb 01       	movw	r24, r22
    50fa:	f8 01       	movw	r30, r16
    50fc:	91 83       	std	Z+1, r25	; 0x01
    50fe:	80 83       	st	Z, r24
    5100:	de 01       	movw	r26, r28
    5102:	a9 5b       	subi	r26, 0xB9	; 185
    5104:	bf 4f       	sbci	r27, 0xFF	; 255
    5106:	fe 01       	movw	r30, r28
    5108:	e5 5b       	subi	r30, 0xB5	; 181
    510a:	ff 4f       	sbci	r31, 0xFF	; 255
    510c:	80 81       	ld	r24, Z
    510e:	91 81       	ldd	r25, Z+1	; 0x01
    5110:	8d 93       	st	X+, r24
    5112:	9c 93       	st	X, r25
    5114:	fe 01       	movw	r30, r28
    5116:	e9 5b       	subi	r30, 0xB9	; 185
    5118:	ff 4f       	sbci	r31, 0xFF	; 255
    511a:	80 81       	ld	r24, Z
    511c:	91 81       	ldd	r25, Z+1	; 0x01
    511e:	01 97       	sbiw	r24, 0x01	; 1
    5120:	f1 f7       	brne	.-4      	; 0x511e <converge_diverge+0x17c>
    5122:	fe 01       	movw	r30, r28
    5124:	e9 5b       	subi	r30, 0xB9	; 185
    5126:	ff 4f       	sbci	r31, 0xFF	; 255
    5128:	91 83       	std	Z+1, r25	; 0x01
    512a:	80 83       	st	Z, r24
		_delay_ms(300);
		PORTB = 0b01000010;
    512c:	e8 e3       	ldi	r30, 0x38	; 56
    512e:	f0 e0       	ldi	r31, 0x00	; 0
    5130:	82 e4       	ldi	r24, 0x42	; 66
    5132:	80 83       	st	Z, r24
    5134:	fe 01       	movw	r30, r28
    5136:	ed 5b       	subi	r30, 0xBD	; 189
    5138:	ff 4f       	sbci	r31, 0xFF	; 255
    513a:	80 e0       	ldi	r24, 0x00	; 0
    513c:	90 e0       	ldi	r25, 0x00	; 0
    513e:	a6 e9       	ldi	r26, 0x96	; 150
    5140:	b3 e4       	ldi	r27, 0x43	; 67
    5142:	80 83       	st	Z, r24
    5144:	91 83       	std	Z+1, r25	; 0x01
    5146:	a2 83       	std	Z+2, r26	; 0x02
    5148:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    514a:	8e 01       	movw	r16, r28
    514c:	01 5c       	subi	r16, 0xC1	; 193
    514e:	1f 4f       	sbci	r17, 0xFF	; 255
    5150:	fe 01       	movw	r30, r28
    5152:	ed 5b       	subi	r30, 0xBD	; 189
    5154:	ff 4f       	sbci	r31, 0xFF	; 255
    5156:	60 81       	ld	r22, Z
    5158:	71 81       	ldd	r23, Z+1	; 0x01
    515a:	82 81       	ldd	r24, Z+2	; 0x02
    515c:	93 81       	ldd	r25, Z+3	; 0x03
    515e:	20 e0       	ldi	r18, 0x00	; 0
    5160:	30 e0       	ldi	r19, 0x00	; 0
    5162:	4a ef       	ldi	r20, 0xFA	; 250
    5164:	54 e4       	ldi	r21, 0x44	; 68
    5166:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    516a:	dc 01       	movw	r26, r24
    516c:	cb 01       	movw	r24, r22
    516e:	f8 01       	movw	r30, r16
    5170:	80 83       	st	Z, r24
    5172:	91 83       	std	Z+1, r25	; 0x01
    5174:	a2 83       	std	Z+2, r26	; 0x02
    5176:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5178:	fe 01       	movw	r30, r28
    517a:	ff 96       	adiw	r30, 0x3f	; 63
    517c:	60 81       	ld	r22, Z
    517e:	71 81       	ldd	r23, Z+1	; 0x01
    5180:	82 81       	ldd	r24, Z+2	; 0x02
    5182:	93 81       	ldd	r25, Z+3	; 0x03
    5184:	20 e0       	ldi	r18, 0x00	; 0
    5186:	30 e0       	ldi	r19, 0x00	; 0
    5188:	40 e8       	ldi	r20, 0x80	; 128
    518a:	5f e3       	ldi	r21, 0x3F	; 63
    518c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5190:	88 23       	and	r24, r24
    5192:	2c f4       	brge	.+10     	; 0x519e <converge_diverge+0x1fc>
		__ticks = 1;
    5194:	81 e0       	ldi	r24, 0x01	; 1
    5196:	90 e0       	ldi	r25, 0x00	; 0
    5198:	9e af       	std	Y+62, r25	; 0x3e
    519a:	8d af       	std	Y+61, r24	; 0x3d
    519c:	46 c0       	rjmp	.+140    	; 0x522a <converge_diverge+0x288>
	else if (__tmp > 65535)
    519e:	fe 01       	movw	r30, r28
    51a0:	ff 96       	adiw	r30, 0x3f	; 63
    51a2:	60 81       	ld	r22, Z
    51a4:	71 81       	ldd	r23, Z+1	; 0x01
    51a6:	82 81       	ldd	r24, Z+2	; 0x02
    51a8:	93 81       	ldd	r25, Z+3	; 0x03
    51aa:	20 e0       	ldi	r18, 0x00	; 0
    51ac:	3f ef       	ldi	r19, 0xFF	; 255
    51ae:	4f e7       	ldi	r20, 0x7F	; 127
    51b0:	57 e4       	ldi	r21, 0x47	; 71
    51b2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    51b6:	18 16       	cp	r1, r24
    51b8:	64 f5       	brge	.+88     	; 0x5212 <converge_diverge+0x270>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51ba:	fe 01       	movw	r30, r28
    51bc:	ed 5b       	subi	r30, 0xBD	; 189
    51be:	ff 4f       	sbci	r31, 0xFF	; 255
    51c0:	60 81       	ld	r22, Z
    51c2:	71 81       	ldd	r23, Z+1	; 0x01
    51c4:	82 81       	ldd	r24, Z+2	; 0x02
    51c6:	93 81       	ldd	r25, Z+3	; 0x03
    51c8:	20 e0       	ldi	r18, 0x00	; 0
    51ca:	30 e0       	ldi	r19, 0x00	; 0
    51cc:	40 e2       	ldi	r20, 0x20	; 32
    51ce:	51 e4       	ldi	r21, 0x41	; 65
    51d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    51d4:	dc 01       	movw	r26, r24
    51d6:	cb 01       	movw	r24, r22
    51d8:	bc 01       	movw	r22, r24
    51da:	cd 01       	movw	r24, r26
    51dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    51e0:	dc 01       	movw	r26, r24
    51e2:	cb 01       	movw	r24, r22
    51e4:	9e af       	std	Y+62, r25	; 0x3e
    51e6:	8d af       	std	Y+61, r24	; 0x3d
    51e8:	0f c0       	rjmp	.+30     	; 0x5208 <converge_diverge+0x266>
    51ea:	88 ec       	ldi	r24, 0xC8	; 200
    51ec:	90 e0       	ldi	r25, 0x00	; 0
    51ee:	9c af       	std	Y+60, r25	; 0x3c
    51f0:	8b af       	std	Y+59, r24	; 0x3b
    51f2:	8b ad       	ldd	r24, Y+59	; 0x3b
    51f4:	9c ad       	ldd	r25, Y+60	; 0x3c
    51f6:	01 97       	sbiw	r24, 0x01	; 1
    51f8:	f1 f7       	brne	.-4      	; 0x51f6 <converge_diverge+0x254>
    51fa:	9c af       	std	Y+60, r25	; 0x3c
    51fc:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    51fe:	8d ad       	ldd	r24, Y+61	; 0x3d
    5200:	9e ad       	ldd	r25, Y+62	; 0x3e
    5202:	01 97       	sbiw	r24, 0x01	; 1
    5204:	9e af       	std	Y+62, r25	; 0x3e
    5206:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5208:	8d ad       	ldd	r24, Y+61	; 0x3d
    520a:	9e ad       	ldd	r25, Y+62	; 0x3e
    520c:	00 97       	sbiw	r24, 0x00	; 0
    520e:	69 f7       	brne	.-38     	; 0x51ea <converge_diverge+0x248>
    5210:	16 c0       	rjmp	.+44     	; 0x523e <converge_diverge+0x29c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5212:	fe 01       	movw	r30, r28
    5214:	ff 96       	adiw	r30, 0x3f	; 63
    5216:	60 81       	ld	r22, Z
    5218:	71 81       	ldd	r23, Z+1	; 0x01
    521a:	82 81       	ldd	r24, Z+2	; 0x02
    521c:	93 81       	ldd	r25, Z+3	; 0x03
    521e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5222:	dc 01       	movw	r26, r24
    5224:	cb 01       	movw	r24, r22
    5226:	9e af       	std	Y+62, r25	; 0x3e
    5228:	8d af       	std	Y+61, r24	; 0x3d
    522a:	8d ad       	ldd	r24, Y+61	; 0x3d
    522c:	9e ad       	ldd	r25, Y+62	; 0x3e
    522e:	9a af       	std	Y+58, r25	; 0x3a
    5230:	89 af       	std	Y+57, r24	; 0x39
    5232:	89 ad       	ldd	r24, Y+57	; 0x39
    5234:	9a ad       	ldd	r25, Y+58	; 0x3a
    5236:	01 97       	sbiw	r24, 0x01	; 1
    5238:	f1 f7       	brne	.-4      	; 0x5236 <converge_diverge+0x294>
    523a:	9a af       	std	Y+58, r25	; 0x3a
    523c:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(300);
		PORTB = 0b00100100;
    523e:	e8 e3       	ldi	r30, 0x38	; 56
    5240:	f0 e0       	ldi	r31, 0x00	; 0
    5242:	84 e2       	ldi	r24, 0x24	; 36
    5244:	80 83       	st	Z, r24
    5246:	80 e0       	ldi	r24, 0x00	; 0
    5248:	90 e0       	ldi	r25, 0x00	; 0
    524a:	a6 e9       	ldi	r26, 0x96	; 150
    524c:	b3 e4       	ldi	r27, 0x43	; 67
    524e:	8d ab       	std	Y+53, r24	; 0x35
    5250:	9e ab       	std	Y+54, r25	; 0x36
    5252:	af ab       	std	Y+55, r26	; 0x37
    5254:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5256:	6d a9       	ldd	r22, Y+53	; 0x35
    5258:	7e a9       	ldd	r23, Y+54	; 0x36
    525a:	8f a9       	ldd	r24, Y+55	; 0x37
    525c:	98 ad       	ldd	r25, Y+56	; 0x38
    525e:	20 e0       	ldi	r18, 0x00	; 0
    5260:	30 e0       	ldi	r19, 0x00	; 0
    5262:	4a ef       	ldi	r20, 0xFA	; 250
    5264:	54 e4       	ldi	r21, 0x44	; 68
    5266:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    526a:	dc 01       	movw	r26, r24
    526c:	cb 01       	movw	r24, r22
    526e:	89 ab       	std	Y+49, r24	; 0x31
    5270:	9a ab       	std	Y+50, r25	; 0x32
    5272:	ab ab       	std	Y+51, r26	; 0x33
    5274:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    5276:	69 a9       	ldd	r22, Y+49	; 0x31
    5278:	7a a9       	ldd	r23, Y+50	; 0x32
    527a:	8b a9       	ldd	r24, Y+51	; 0x33
    527c:	9c a9       	ldd	r25, Y+52	; 0x34
    527e:	20 e0       	ldi	r18, 0x00	; 0
    5280:	30 e0       	ldi	r19, 0x00	; 0
    5282:	40 e8       	ldi	r20, 0x80	; 128
    5284:	5f e3       	ldi	r21, 0x3F	; 63
    5286:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    528a:	88 23       	and	r24, r24
    528c:	2c f4       	brge	.+10     	; 0x5298 <converge_diverge+0x2f6>
		__ticks = 1;
    528e:	81 e0       	ldi	r24, 0x01	; 1
    5290:	90 e0       	ldi	r25, 0x00	; 0
    5292:	98 ab       	std	Y+48, r25	; 0x30
    5294:	8f a7       	std	Y+47, r24	; 0x2f
    5296:	3f c0       	rjmp	.+126    	; 0x5316 <converge_diverge+0x374>
	else if (__tmp > 65535)
    5298:	69 a9       	ldd	r22, Y+49	; 0x31
    529a:	7a a9       	ldd	r23, Y+50	; 0x32
    529c:	8b a9       	ldd	r24, Y+51	; 0x33
    529e:	9c a9       	ldd	r25, Y+52	; 0x34
    52a0:	20 e0       	ldi	r18, 0x00	; 0
    52a2:	3f ef       	ldi	r19, 0xFF	; 255
    52a4:	4f e7       	ldi	r20, 0x7F	; 127
    52a6:	57 e4       	ldi	r21, 0x47	; 71
    52a8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    52ac:	18 16       	cp	r1, r24
    52ae:	4c f5       	brge	.+82     	; 0x5302 <converge_diverge+0x360>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    52b0:	6d a9       	ldd	r22, Y+53	; 0x35
    52b2:	7e a9       	ldd	r23, Y+54	; 0x36
    52b4:	8f a9       	ldd	r24, Y+55	; 0x37
    52b6:	98 ad       	ldd	r25, Y+56	; 0x38
    52b8:	20 e0       	ldi	r18, 0x00	; 0
    52ba:	30 e0       	ldi	r19, 0x00	; 0
    52bc:	40 e2       	ldi	r20, 0x20	; 32
    52be:	51 e4       	ldi	r21, 0x41	; 65
    52c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    52c4:	dc 01       	movw	r26, r24
    52c6:	cb 01       	movw	r24, r22
    52c8:	bc 01       	movw	r22, r24
    52ca:	cd 01       	movw	r24, r26
    52cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    52d0:	dc 01       	movw	r26, r24
    52d2:	cb 01       	movw	r24, r22
    52d4:	98 ab       	std	Y+48, r25	; 0x30
    52d6:	8f a7       	std	Y+47, r24	; 0x2f
    52d8:	0f c0       	rjmp	.+30     	; 0x52f8 <converge_diverge+0x356>
    52da:	88 ec       	ldi	r24, 0xC8	; 200
    52dc:	90 e0       	ldi	r25, 0x00	; 0
    52de:	9e a7       	std	Y+46, r25	; 0x2e
    52e0:	8d a7       	std	Y+45, r24	; 0x2d
    52e2:	8d a5       	ldd	r24, Y+45	; 0x2d
    52e4:	9e a5       	ldd	r25, Y+46	; 0x2e
    52e6:	01 97       	sbiw	r24, 0x01	; 1
    52e8:	f1 f7       	brne	.-4      	; 0x52e6 <converge_diverge+0x344>
    52ea:	9e a7       	std	Y+46, r25	; 0x2e
    52ec:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    52ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    52f0:	98 a9       	ldd	r25, Y+48	; 0x30
    52f2:	01 97       	sbiw	r24, 0x01	; 1
    52f4:	98 ab       	std	Y+48, r25	; 0x30
    52f6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    52f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    52fa:	98 a9       	ldd	r25, Y+48	; 0x30
    52fc:	00 97       	sbiw	r24, 0x00	; 0
    52fe:	69 f7       	brne	.-38     	; 0x52da <converge_diverge+0x338>
    5300:	14 c0       	rjmp	.+40     	; 0x532a <converge_diverge+0x388>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5302:	69 a9       	ldd	r22, Y+49	; 0x31
    5304:	7a a9       	ldd	r23, Y+50	; 0x32
    5306:	8b a9       	ldd	r24, Y+51	; 0x33
    5308:	9c a9       	ldd	r25, Y+52	; 0x34
    530a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    530e:	dc 01       	movw	r26, r24
    5310:	cb 01       	movw	r24, r22
    5312:	98 ab       	std	Y+48, r25	; 0x30
    5314:	8f a7       	std	Y+47, r24	; 0x2f
    5316:	8f a5       	ldd	r24, Y+47	; 0x2f
    5318:	98 a9       	ldd	r25, Y+48	; 0x30
    531a:	9c a7       	std	Y+44, r25	; 0x2c
    531c:	8b a7       	std	Y+43, r24	; 0x2b
    531e:	8b a5       	ldd	r24, Y+43	; 0x2b
    5320:	9c a5       	ldd	r25, Y+44	; 0x2c
    5322:	01 97       	sbiw	r24, 0x01	; 1
    5324:	f1 f7       	brne	.-4      	; 0x5322 <converge_diverge+0x380>
    5326:	9c a7       	std	Y+44, r25	; 0x2c
    5328:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(300);
		PORTB = 0b00011000;
    532a:	e8 e3       	ldi	r30, 0x38	; 56
    532c:	f0 e0       	ldi	r31, 0x00	; 0
    532e:	88 e1       	ldi	r24, 0x18	; 24
    5330:	80 83       	st	Z, r24
    5332:	80 e0       	ldi	r24, 0x00	; 0
    5334:	90 e0       	ldi	r25, 0x00	; 0
    5336:	a6 e9       	ldi	r26, 0x96	; 150
    5338:	b3 e4       	ldi	r27, 0x43	; 67
    533a:	8f a3       	std	Y+39, r24	; 0x27
    533c:	98 a7       	std	Y+40, r25	; 0x28
    533e:	a9 a7       	std	Y+41, r26	; 0x29
    5340:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5342:	6f a1       	ldd	r22, Y+39	; 0x27
    5344:	78 a5       	ldd	r23, Y+40	; 0x28
    5346:	89 a5       	ldd	r24, Y+41	; 0x29
    5348:	9a a5       	ldd	r25, Y+42	; 0x2a
    534a:	20 e0       	ldi	r18, 0x00	; 0
    534c:	30 e0       	ldi	r19, 0x00	; 0
    534e:	4a ef       	ldi	r20, 0xFA	; 250
    5350:	54 e4       	ldi	r21, 0x44	; 68
    5352:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5356:	dc 01       	movw	r26, r24
    5358:	cb 01       	movw	r24, r22
    535a:	8b a3       	std	Y+35, r24	; 0x23
    535c:	9c a3       	std	Y+36, r25	; 0x24
    535e:	ad a3       	std	Y+37, r26	; 0x25
    5360:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    5362:	6b a1       	ldd	r22, Y+35	; 0x23
    5364:	7c a1       	ldd	r23, Y+36	; 0x24
    5366:	8d a1       	ldd	r24, Y+37	; 0x25
    5368:	9e a1       	ldd	r25, Y+38	; 0x26
    536a:	20 e0       	ldi	r18, 0x00	; 0
    536c:	30 e0       	ldi	r19, 0x00	; 0
    536e:	40 e8       	ldi	r20, 0x80	; 128
    5370:	5f e3       	ldi	r21, 0x3F	; 63
    5372:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5376:	88 23       	and	r24, r24
    5378:	2c f4       	brge	.+10     	; 0x5384 <converge_diverge+0x3e2>
		__ticks = 1;
    537a:	81 e0       	ldi	r24, 0x01	; 1
    537c:	90 e0       	ldi	r25, 0x00	; 0
    537e:	9a a3       	std	Y+34, r25	; 0x22
    5380:	89 a3       	std	Y+33, r24	; 0x21
    5382:	3f c0       	rjmp	.+126    	; 0x5402 <converge_diverge+0x460>
	else if (__tmp > 65535)
    5384:	6b a1       	ldd	r22, Y+35	; 0x23
    5386:	7c a1       	ldd	r23, Y+36	; 0x24
    5388:	8d a1       	ldd	r24, Y+37	; 0x25
    538a:	9e a1       	ldd	r25, Y+38	; 0x26
    538c:	20 e0       	ldi	r18, 0x00	; 0
    538e:	3f ef       	ldi	r19, 0xFF	; 255
    5390:	4f e7       	ldi	r20, 0x7F	; 127
    5392:	57 e4       	ldi	r21, 0x47	; 71
    5394:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5398:	18 16       	cp	r1, r24
    539a:	4c f5       	brge	.+82     	; 0x53ee <converge_diverge+0x44c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    539c:	6f a1       	ldd	r22, Y+39	; 0x27
    539e:	78 a5       	ldd	r23, Y+40	; 0x28
    53a0:	89 a5       	ldd	r24, Y+41	; 0x29
    53a2:	9a a5       	ldd	r25, Y+42	; 0x2a
    53a4:	20 e0       	ldi	r18, 0x00	; 0
    53a6:	30 e0       	ldi	r19, 0x00	; 0
    53a8:	40 e2       	ldi	r20, 0x20	; 32
    53aa:	51 e4       	ldi	r21, 0x41	; 65
    53ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    53b0:	dc 01       	movw	r26, r24
    53b2:	cb 01       	movw	r24, r22
    53b4:	bc 01       	movw	r22, r24
    53b6:	cd 01       	movw	r24, r26
    53b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    53bc:	dc 01       	movw	r26, r24
    53be:	cb 01       	movw	r24, r22
    53c0:	9a a3       	std	Y+34, r25	; 0x22
    53c2:	89 a3       	std	Y+33, r24	; 0x21
    53c4:	0f c0       	rjmp	.+30     	; 0x53e4 <converge_diverge+0x442>
    53c6:	88 ec       	ldi	r24, 0xC8	; 200
    53c8:	90 e0       	ldi	r25, 0x00	; 0
    53ca:	98 a3       	std	Y+32, r25	; 0x20
    53cc:	8f 8f       	std	Y+31, r24	; 0x1f
    53ce:	8f 8d       	ldd	r24, Y+31	; 0x1f
    53d0:	98 a1       	ldd	r25, Y+32	; 0x20
    53d2:	01 97       	sbiw	r24, 0x01	; 1
    53d4:	f1 f7       	brne	.-4      	; 0x53d2 <converge_diverge+0x430>
    53d6:	98 a3       	std	Y+32, r25	; 0x20
    53d8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    53da:	89 a1       	ldd	r24, Y+33	; 0x21
    53dc:	9a a1       	ldd	r25, Y+34	; 0x22
    53de:	01 97       	sbiw	r24, 0x01	; 1
    53e0:	9a a3       	std	Y+34, r25	; 0x22
    53e2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    53e4:	89 a1       	ldd	r24, Y+33	; 0x21
    53e6:	9a a1       	ldd	r25, Y+34	; 0x22
    53e8:	00 97       	sbiw	r24, 0x00	; 0
    53ea:	69 f7       	brne	.-38     	; 0x53c6 <converge_diverge+0x424>
    53ec:	14 c0       	rjmp	.+40     	; 0x5416 <converge_diverge+0x474>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    53ee:	6b a1       	ldd	r22, Y+35	; 0x23
    53f0:	7c a1       	ldd	r23, Y+36	; 0x24
    53f2:	8d a1       	ldd	r24, Y+37	; 0x25
    53f4:	9e a1       	ldd	r25, Y+38	; 0x26
    53f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    53fa:	dc 01       	movw	r26, r24
    53fc:	cb 01       	movw	r24, r22
    53fe:	9a a3       	std	Y+34, r25	; 0x22
    5400:	89 a3       	std	Y+33, r24	; 0x21
    5402:	89 a1       	ldd	r24, Y+33	; 0x21
    5404:	9a a1       	ldd	r25, Y+34	; 0x22
    5406:	9e 8f       	std	Y+30, r25	; 0x1e
    5408:	8d 8f       	std	Y+29, r24	; 0x1d
    540a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    540c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    540e:	01 97       	sbiw	r24, 0x01	; 1
    5410:	f1 f7       	brne	.-4      	; 0x540e <converge_diverge+0x46c>
    5412:	9e 8f       	std	Y+30, r25	; 0x1e
    5414:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(300);
		PORTB = 0b00100100;
    5416:	e8 e3       	ldi	r30, 0x38	; 56
    5418:	f0 e0       	ldi	r31, 0x00	; 0
    541a:	84 e2       	ldi	r24, 0x24	; 36
    541c:	80 83       	st	Z, r24
    541e:	80 e0       	ldi	r24, 0x00	; 0
    5420:	90 e0       	ldi	r25, 0x00	; 0
    5422:	a6 e9       	ldi	r26, 0x96	; 150
    5424:	b3 e4       	ldi	r27, 0x43	; 67
    5426:	89 8f       	std	Y+25, r24	; 0x19
    5428:	9a 8f       	std	Y+26, r25	; 0x1a
    542a:	ab 8f       	std	Y+27, r26	; 0x1b
    542c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    542e:	69 8d       	ldd	r22, Y+25	; 0x19
    5430:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5432:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5434:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5436:	20 e0       	ldi	r18, 0x00	; 0
    5438:	30 e0       	ldi	r19, 0x00	; 0
    543a:	4a ef       	ldi	r20, 0xFA	; 250
    543c:	54 e4       	ldi	r21, 0x44	; 68
    543e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5442:	dc 01       	movw	r26, r24
    5444:	cb 01       	movw	r24, r22
    5446:	8d 8b       	std	Y+21, r24	; 0x15
    5448:	9e 8b       	std	Y+22, r25	; 0x16
    544a:	af 8b       	std	Y+23, r26	; 0x17
    544c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    544e:	6d 89       	ldd	r22, Y+21	; 0x15
    5450:	7e 89       	ldd	r23, Y+22	; 0x16
    5452:	8f 89       	ldd	r24, Y+23	; 0x17
    5454:	98 8d       	ldd	r25, Y+24	; 0x18
    5456:	20 e0       	ldi	r18, 0x00	; 0
    5458:	30 e0       	ldi	r19, 0x00	; 0
    545a:	40 e8       	ldi	r20, 0x80	; 128
    545c:	5f e3       	ldi	r21, 0x3F	; 63
    545e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5462:	88 23       	and	r24, r24
    5464:	2c f4       	brge	.+10     	; 0x5470 <converge_diverge+0x4ce>
		__ticks = 1;
    5466:	81 e0       	ldi	r24, 0x01	; 1
    5468:	90 e0       	ldi	r25, 0x00	; 0
    546a:	9c 8b       	std	Y+20, r25	; 0x14
    546c:	8b 8b       	std	Y+19, r24	; 0x13
    546e:	3f c0       	rjmp	.+126    	; 0x54ee <converge_diverge+0x54c>
	else if (__tmp > 65535)
    5470:	6d 89       	ldd	r22, Y+21	; 0x15
    5472:	7e 89       	ldd	r23, Y+22	; 0x16
    5474:	8f 89       	ldd	r24, Y+23	; 0x17
    5476:	98 8d       	ldd	r25, Y+24	; 0x18
    5478:	20 e0       	ldi	r18, 0x00	; 0
    547a:	3f ef       	ldi	r19, 0xFF	; 255
    547c:	4f e7       	ldi	r20, 0x7F	; 127
    547e:	57 e4       	ldi	r21, 0x47	; 71
    5480:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5484:	18 16       	cp	r1, r24
    5486:	4c f5       	brge	.+82     	; 0x54da <converge_diverge+0x538>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5488:	69 8d       	ldd	r22, Y+25	; 0x19
    548a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    548c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    548e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5490:	20 e0       	ldi	r18, 0x00	; 0
    5492:	30 e0       	ldi	r19, 0x00	; 0
    5494:	40 e2       	ldi	r20, 0x20	; 32
    5496:	51 e4       	ldi	r21, 0x41	; 65
    5498:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    549c:	dc 01       	movw	r26, r24
    549e:	cb 01       	movw	r24, r22
    54a0:	bc 01       	movw	r22, r24
    54a2:	cd 01       	movw	r24, r26
    54a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    54a8:	dc 01       	movw	r26, r24
    54aa:	cb 01       	movw	r24, r22
    54ac:	9c 8b       	std	Y+20, r25	; 0x14
    54ae:	8b 8b       	std	Y+19, r24	; 0x13
    54b0:	0f c0       	rjmp	.+30     	; 0x54d0 <converge_diverge+0x52e>
    54b2:	88 ec       	ldi	r24, 0xC8	; 200
    54b4:	90 e0       	ldi	r25, 0x00	; 0
    54b6:	9a 8b       	std	Y+18, r25	; 0x12
    54b8:	89 8b       	std	Y+17, r24	; 0x11
    54ba:	89 89       	ldd	r24, Y+17	; 0x11
    54bc:	9a 89       	ldd	r25, Y+18	; 0x12
    54be:	01 97       	sbiw	r24, 0x01	; 1
    54c0:	f1 f7       	brne	.-4      	; 0x54be <converge_diverge+0x51c>
    54c2:	9a 8b       	std	Y+18, r25	; 0x12
    54c4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    54c6:	8b 89       	ldd	r24, Y+19	; 0x13
    54c8:	9c 89       	ldd	r25, Y+20	; 0x14
    54ca:	01 97       	sbiw	r24, 0x01	; 1
    54cc:	9c 8b       	std	Y+20, r25	; 0x14
    54ce:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    54d0:	8b 89       	ldd	r24, Y+19	; 0x13
    54d2:	9c 89       	ldd	r25, Y+20	; 0x14
    54d4:	00 97       	sbiw	r24, 0x00	; 0
    54d6:	69 f7       	brne	.-38     	; 0x54b2 <converge_diverge+0x510>
    54d8:	14 c0       	rjmp	.+40     	; 0x5502 <converge_diverge+0x560>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    54da:	6d 89       	ldd	r22, Y+21	; 0x15
    54dc:	7e 89       	ldd	r23, Y+22	; 0x16
    54de:	8f 89       	ldd	r24, Y+23	; 0x17
    54e0:	98 8d       	ldd	r25, Y+24	; 0x18
    54e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    54e6:	dc 01       	movw	r26, r24
    54e8:	cb 01       	movw	r24, r22
    54ea:	9c 8b       	std	Y+20, r25	; 0x14
    54ec:	8b 8b       	std	Y+19, r24	; 0x13
    54ee:	8b 89       	ldd	r24, Y+19	; 0x13
    54f0:	9c 89       	ldd	r25, Y+20	; 0x14
    54f2:	98 8b       	std	Y+16, r25	; 0x10
    54f4:	8f 87       	std	Y+15, r24	; 0x0f
    54f6:	8f 85       	ldd	r24, Y+15	; 0x0f
    54f8:	98 89       	ldd	r25, Y+16	; 0x10
    54fa:	01 97       	sbiw	r24, 0x01	; 1
    54fc:	f1 f7       	brne	.-4      	; 0x54fa <converge_diverge+0x558>
    54fe:	98 8b       	std	Y+16, r25	; 0x10
    5500:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(300);
		PORTB = 0b01000010;
    5502:	e8 e3       	ldi	r30, 0x38	; 56
    5504:	f0 e0       	ldi	r31, 0x00	; 0
    5506:	82 e4       	ldi	r24, 0x42	; 66
    5508:	80 83       	st	Z, r24
    550a:	80 e0       	ldi	r24, 0x00	; 0
    550c:	90 e0       	ldi	r25, 0x00	; 0
    550e:	a6 e9       	ldi	r26, 0x96	; 150
    5510:	b3 e4       	ldi	r27, 0x43	; 67
    5512:	8b 87       	std	Y+11, r24	; 0x0b
    5514:	9c 87       	std	Y+12, r25	; 0x0c
    5516:	ad 87       	std	Y+13, r26	; 0x0d
    5518:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    551a:	6b 85       	ldd	r22, Y+11	; 0x0b
    551c:	7c 85       	ldd	r23, Y+12	; 0x0c
    551e:	8d 85       	ldd	r24, Y+13	; 0x0d
    5520:	9e 85       	ldd	r25, Y+14	; 0x0e
    5522:	20 e0       	ldi	r18, 0x00	; 0
    5524:	30 e0       	ldi	r19, 0x00	; 0
    5526:	4a ef       	ldi	r20, 0xFA	; 250
    5528:	54 e4       	ldi	r21, 0x44	; 68
    552a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    552e:	dc 01       	movw	r26, r24
    5530:	cb 01       	movw	r24, r22
    5532:	8f 83       	std	Y+7, r24	; 0x07
    5534:	98 87       	std	Y+8, r25	; 0x08
    5536:	a9 87       	std	Y+9, r26	; 0x09
    5538:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    553a:	6f 81       	ldd	r22, Y+7	; 0x07
    553c:	78 85       	ldd	r23, Y+8	; 0x08
    553e:	89 85       	ldd	r24, Y+9	; 0x09
    5540:	9a 85       	ldd	r25, Y+10	; 0x0a
    5542:	20 e0       	ldi	r18, 0x00	; 0
    5544:	30 e0       	ldi	r19, 0x00	; 0
    5546:	40 e8       	ldi	r20, 0x80	; 128
    5548:	5f e3       	ldi	r21, 0x3F	; 63
    554a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    554e:	88 23       	and	r24, r24
    5550:	2c f4       	brge	.+10     	; 0x555c <converge_diverge+0x5ba>
		__ticks = 1;
    5552:	81 e0       	ldi	r24, 0x01	; 1
    5554:	90 e0       	ldi	r25, 0x00	; 0
    5556:	9e 83       	std	Y+6, r25	; 0x06
    5558:	8d 83       	std	Y+5, r24	; 0x05
    555a:	3f c0       	rjmp	.+126    	; 0x55da <converge_diverge+0x638>
	else if (__tmp > 65535)
    555c:	6f 81       	ldd	r22, Y+7	; 0x07
    555e:	78 85       	ldd	r23, Y+8	; 0x08
    5560:	89 85       	ldd	r24, Y+9	; 0x09
    5562:	9a 85       	ldd	r25, Y+10	; 0x0a
    5564:	20 e0       	ldi	r18, 0x00	; 0
    5566:	3f ef       	ldi	r19, 0xFF	; 255
    5568:	4f e7       	ldi	r20, 0x7F	; 127
    556a:	57 e4       	ldi	r21, 0x47	; 71
    556c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5570:	18 16       	cp	r1, r24
    5572:	4c f5       	brge	.+82     	; 0x55c6 <converge_diverge+0x624>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5574:	6b 85       	ldd	r22, Y+11	; 0x0b
    5576:	7c 85       	ldd	r23, Y+12	; 0x0c
    5578:	8d 85       	ldd	r24, Y+13	; 0x0d
    557a:	9e 85       	ldd	r25, Y+14	; 0x0e
    557c:	20 e0       	ldi	r18, 0x00	; 0
    557e:	30 e0       	ldi	r19, 0x00	; 0
    5580:	40 e2       	ldi	r20, 0x20	; 32
    5582:	51 e4       	ldi	r21, 0x41	; 65
    5584:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5588:	dc 01       	movw	r26, r24
    558a:	cb 01       	movw	r24, r22
    558c:	bc 01       	movw	r22, r24
    558e:	cd 01       	movw	r24, r26
    5590:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5594:	dc 01       	movw	r26, r24
    5596:	cb 01       	movw	r24, r22
    5598:	9e 83       	std	Y+6, r25	; 0x06
    559a:	8d 83       	std	Y+5, r24	; 0x05
    559c:	0f c0       	rjmp	.+30     	; 0x55bc <converge_diverge+0x61a>
    559e:	88 ec       	ldi	r24, 0xC8	; 200
    55a0:	90 e0       	ldi	r25, 0x00	; 0
    55a2:	9c 83       	std	Y+4, r25	; 0x04
    55a4:	8b 83       	std	Y+3, r24	; 0x03
    55a6:	8b 81       	ldd	r24, Y+3	; 0x03
    55a8:	9c 81       	ldd	r25, Y+4	; 0x04
    55aa:	01 97       	sbiw	r24, 0x01	; 1
    55ac:	f1 f7       	brne	.-4      	; 0x55aa <converge_diverge+0x608>
    55ae:	9c 83       	std	Y+4, r25	; 0x04
    55b0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    55b2:	8d 81       	ldd	r24, Y+5	; 0x05
    55b4:	9e 81       	ldd	r25, Y+6	; 0x06
    55b6:	01 97       	sbiw	r24, 0x01	; 1
    55b8:	9e 83       	std	Y+6, r25	; 0x06
    55ba:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    55bc:	8d 81       	ldd	r24, Y+5	; 0x05
    55be:	9e 81       	ldd	r25, Y+6	; 0x06
    55c0:	00 97       	sbiw	r24, 0x00	; 0
    55c2:	69 f7       	brne	.-38     	; 0x559e <converge_diverge+0x5fc>
    55c4:	14 c0       	rjmp	.+40     	; 0x55ee <converge_diverge+0x64c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    55c6:	6f 81       	ldd	r22, Y+7	; 0x07
    55c8:	78 85       	ldd	r23, Y+8	; 0x08
    55ca:	89 85       	ldd	r24, Y+9	; 0x09
    55cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    55ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    55d2:	dc 01       	movw	r26, r24
    55d4:	cb 01       	movw	r24, r22
    55d6:	9e 83       	std	Y+6, r25	; 0x06
    55d8:	8d 83       	std	Y+5, r24	; 0x05
    55da:	8d 81       	ldd	r24, Y+5	; 0x05
    55dc:	9e 81       	ldd	r25, Y+6	; 0x06
    55de:	9a 83       	std	Y+2, r25	; 0x02
    55e0:	89 83       	std	Y+1, r24	; 0x01
    55e2:	89 81       	ldd	r24, Y+1	; 0x01
    55e4:	9a 81       	ldd	r25, Y+2	; 0x02
    55e6:	01 97       	sbiw	r24, 0x01	; 1
    55e8:	f1 f7       	brne	.-4      	; 0x55e6 <converge_diverge+0x644>
    55ea:	9a 83       	std	Y+2, r25	; 0x02
    55ec:	89 83       	std	Y+1, r24	; 0x01
	}
}

void converge_diverge()
{
	while(GET_BIT(PINC, 7)==0)
    55ee:	e3 e3       	ldi	r30, 0x33	; 51
    55f0:	f0 e0       	ldi	r31, 0x00	; 0
    55f2:	80 81       	ld	r24, Z
    55f4:	88 23       	and	r24, r24
    55f6:	0c f0       	brlt	.+2      	; 0x55fa <converge_diverge+0x658>
    55f8:	e2 cc       	rjmp	.-1596   	; 0x4fbe <converge_diverge+0x1c>
		PORTB = 0b00100100;
		_delay_ms(300);
		PORTB = 0b01000010;
		_delay_ms(300);
	}
}
    55fa:	cc 5a       	subi	r28, 0xAC	; 172
    55fc:	df 4f       	sbci	r29, 0xFF	; 255
    55fe:	0f b6       	in	r0, 0x3f	; 63
    5600:	f8 94       	cli
    5602:	de bf       	out	0x3e, r29	; 62
    5604:	0f be       	out	0x3f, r0	; 63
    5606:	cd bf       	out	0x3d, r28	; 61
    5608:	cf 91       	pop	r28
    560a:	df 91       	pop	r29
    560c:	1f 91       	pop	r17
    560e:	0f 91       	pop	r16
    5610:	08 95       	ret

00005612 <__prologue_saves__>:
    5612:	2f 92       	push	r2
    5614:	3f 92       	push	r3
    5616:	4f 92       	push	r4
    5618:	5f 92       	push	r5
    561a:	6f 92       	push	r6
    561c:	7f 92       	push	r7
    561e:	8f 92       	push	r8
    5620:	9f 92       	push	r9
    5622:	af 92       	push	r10
    5624:	bf 92       	push	r11
    5626:	cf 92       	push	r12
    5628:	df 92       	push	r13
    562a:	ef 92       	push	r14
    562c:	ff 92       	push	r15
    562e:	0f 93       	push	r16
    5630:	1f 93       	push	r17
    5632:	cf 93       	push	r28
    5634:	df 93       	push	r29
    5636:	cd b7       	in	r28, 0x3d	; 61
    5638:	de b7       	in	r29, 0x3e	; 62
    563a:	ca 1b       	sub	r28, r26
    563c:	db 0b       	sbc	r29, r27
    563e:	0f b6       	in	r0, 0x3f	; 63
    5640:	f8 94       	cli
    5642:	de bf       	out	0x3e, r29	; 62
    5644:	0f be       	out	0x3f, r0	; 63
    5646:	cd bf       	out	0x3d, r28	; 61
    5648:	09 94       	ijmp

0000564a <__epilogue_restores__>:
    564a:	2a 88       	ldd	r2, Y+18	; 0x12
    564c:	39 88       	ldd	r3, Y+17	; 0x11
    564e:	48 88       	ldd	r4, Y+16	; 0x10
    5650:	5f 84       	ldd	r5, Y+15	; 0x0f
    5652:	6e 84       	ldd	r6, Y+14	; 0x0e
    5654:	7d 84       	ldd	r7, Y+13	; 0x0d
    5656:	8c 84       	ldd	r8, Y+12	; 0x0c
    5658:	9b 84       	ldd	r9, Y+11	; 0x0b
    565a:	aa 84       	ldd	r10, Y+10	; 0x0a
    565c:	b9 84       	ldd	r11, Y+9	; 0x09
    565e:	c8 84       	ldd	r12, Y+8	; 0x08
    5660:	df 80       	ldd	r13, Y+7	; 0x07
    5662:	ee 80       	ldd	r14, Y+6	; 0x06
    5664:	fd 80       	ldd	r15, Y+5	; 0x05
    5666:	0c 81       	ldd	r16, Y+4	; 0x04
    5668:	1b 81       	ldd	r17, Y+3	; 0x03
    566a:	aa 81       	ldd	r26, Y+2	; 0x02
    566c:	b9 81       	ldd	r27, Y+1	; 0x01
    566e:	ce 0f       	add	r28, r30
    5670:	d1 1d       	adc	r29, r1
    5672:	0f b6       	in	r0, 0x3f	; 63
    5674:	f8 94       	cli
    5676:	de bf       	out	0x3e, r29	; 62
    5678:	0f be       	out	0x3f, r0	; 63
    567a:	cd bf       	out	0x3d, r28	; 61
    567c:	ed 01       	movw	r28, r26
    567e:	08 95       	ret

00005680 <_exit>:
    5680:	f8 94       	cli

00005682 <__stop_program>:
    5682:	ff cf       	rjmp	.-2      	; 0x5682 <__stop_program>
